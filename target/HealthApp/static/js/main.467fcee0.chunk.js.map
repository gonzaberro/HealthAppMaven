{"version":3,"sources":["components/Login/LeftSideLogin.jsx","actions/LoginActions.js","actions/types.js","components/Login/Login.jsx","Utils/constants.js","components/Logged/LeftMenu.jsx","components/Logged/Agenda/EditAgendaHeader.jsx","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","components/Logged/Agenda/itemsAgendaData.js","actions/AgendaActions.js","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaItem.jsx","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","components/Logged/FormSelect.jsx","Utils/functions.js","components/Logged/Form.jsx","components/Logged/RefTable.jsx","components/Logged/TopNavbar.jsx","components/Logged/WrapperForm.jsx","components/Logged/Wrapper.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","Utils/formInputs.js","components/Logged/PrimaryContainer.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/globalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js","imagenes/fondo.png"],"names":["LeftSideLogin","classes","useStyles","dispatch","useDispatch","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","variant","form","noValidate","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","MenuItem","value","TextField","margin","required","name","type","Button","color","submit","onClick","login","payload","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","menuOptions","LeftMenu","onSelect","selected","Toggle","Nav","eventKey","icon","faCalendarAlt","faBook","EditAgendaHeader","headerGrid","headerSpan","borderBottom","textAlign","fontWeight","RepetirDiariamente","props","useState","espacioRepeticion","setEspacioRepeticion","opcionRepetir","onChange","event","target","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","minHeight","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","diaRepeticion","setDiaRepeticion","defaultValue","Date","RepetirSemanalmente","dia","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","setOpcionRepetir","programar","horarios","setFechaAgenda","fecha","setDiaMesSeleccionado","setHorario","data","EditAgendaItem","turno_info","useSelector","state","editTurnoReducer","fechaCalendario","agenda_reducer","fecha_agenda","Intl","DateTimeFormat","year","format","month","day","fechaTurno","setFechaTurno","useEffect","doctor","paciente","servicio","horario","map","key","TextareaAutosize","rowsMax","nota","FormControlLabel","control","Checkbox","checked","index","turno","addTurno","borderTop","maxWidth","minWidth","options","FilterDoctorAgenda","React","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","current","contains","ref","console","info","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","handleMenuItemClick","ItemsAgendaHeader","minheight","lg","arrowAgenda","valueOf","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","fechaString","gridFilterDoctor","faChevronRight","cursor","userSelect","turnos","gridHorarios","labelHorario","containerTurnosGrid","horario_turno","Chip","clickable","chipTurnos","turno_horario","foundIndexHorario","findIndex","aux_turno","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","FormSelect","handleChange","setDefaultFormInput","names","document","getElementById","arrayOfInputNames","inputs","getElementsByTagName","i","length","push","getAllInputNames","reduce","acc","curr","Form","useReducer","newState","formInput","setFormInput","handleInputChange","e","input","select","Object","keys","RefTable","columns","TableContainer","Table","TableHead","TableRow","column","TableCell","align","TopNavbar","setTabMenu","tabMenu","Tabs","indicatorColor","textColor","centered","Tab","WrapperForm","children","Wrapper","Container","switchMenu","title","AgendaMensualHeader","crearFechaPrimerDia","date","setMonth","getMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","mes_actual","dia_mes","vista_mensual_semanal","mes_calendario","mes","dias","filter","index_dia","marginBottom","divTurno","fontSize","AgendaMensualDias","gotoDiaCalendario","numero_dia","fecha_semana","dia_primer_dia","dias_calendario","badge_numero","getDate","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","useCallback","diff","inicioSemana","setInicioSemana","anterior_lunes","dia_lunes","fecha_sabado","mo_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","obraSocialOptions","columnsPacientes","formPacientes","columnsPersonalMedico","formPersonalMedico","columnsInstituciones","formInstituciones","columnsObraSocial","formObraSocial","columnsEspecialidades","formEspecialidades","PrimaryContainer","menuSelected","globalReducer","Logged","MenuSwitch","login_state","initialState","borrarTurnos","listTurnos","info_turno","turnos_aux","splice","agregarTurnos","nuevo_turno","turnos_total","j","make_data","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.467fcee0.chunk.js","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\n\nexport default function LeftSideLogin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoLogin = () => {\n    dispatch(setLogin(1)); //Voy a marcar el login\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <form className={classes.form} noValidate>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Institución\"\n            fullWidth\n          >\n            <MenuItem value={30}>FSINET</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\n\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\n\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","export const menuOptions = {\n  HOME: \"home\",\n  CHARTS: \"charts\",\n  AGENDA: \"agenda\",\n  OBRAS_SOCIALES: \"obras_sociales\",\n  PESONAL_SALUD: \"personal_salud\",\n  PACIENTES: \"pacientes\",\n  INSTITUCIONES: \"instituciones\",\n  ESPECIALIDADES: \"especialidades\",\n  Agenda_DIARIA: \"agenda_diaria\",\n  Agenda_MENSUAL: \"agenda_mensual\",\n  Agenda_SEMANAL: \"agenda_semanal\",\n};\n","import React from \"react\";\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faBook } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch } from \"react-redux\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\n\nexport default function LeftMenu() {\n  const dispatch = useDispatch();\n\n  return (\n    <SideNav\n      onSelect={(selected) => {\n        dispatch({ type: SWITCH_MENU, payload: selected });\n      }}\n    >\n      <SideNav.Toggle />\n      <SideNav.Nav>\n        <NavItem eventKey={menuOptions.AGENDA}>\n          <NavIcon>\n            <FontAwesomeIcon icon={faCalendarAlt} />\n          </NavIcon>\n          <NavText>Agenda</NavText>\n          <NavItem eventKey={menuOptions.Agenda_DIARIA}>\n            <NavText>Agenda Diaria</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_SEMANAL}>\n            <NavText>Agenda Semanal</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_MENSUAL}>\n            <NavText>Agenda Mensual</NavText>\n          </NavItem>\n        </NavItem>\n        <NavItem eventKey={menuOptions.CHARTS}>\n          <NavIcon>\n            <FontAwesomeIcon icon={faBook} />\n          </NavIcon>\n          <NavText>Información Empresa</NavText>\n          <NavItem eventKey={menuOptions.OBRAS_SOCIALES}>\n            <NavText>Obras Sociales</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PESONAL_SALUD}>\n            <NavText>Personal de Salud</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PACIENTES}>\n            <NavText>Pacientes</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.INSTITUCIONES}>\n            <NavText>Instituciones</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.ESPECIALIDADES}>\n            <NavText>Especialidades</NavText>\n          </NavItem>\n        </NavItem>\n      </SideNav.Nav>\n    </SideNav>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.headerGrid}>\n      <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    height: \"5vh\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const [espacioRepeticion, setEspacioRepeticion] = useState(1);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) setEspacioRepeticion(value);\n  };\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + espacioRepeticion + \" dia(s)\"}\n              type=\"number\"\n              value={espacioRepeticion}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const [espacioRepeticion, setEspacioRepeticion] = useState(1);\n  const [diaRepeticion, setDiaRepeticion] = useState(1);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) setEspacioRepeticion(value);\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) setDiaRepeticion(value);\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + espacioRepeticion + \" mes(es)\"}\n                type=\"number\"\n                value={espacioRepeticion}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\"Repetir el dia nro '\" + diaRepeticion + \"' del mes\"}\n                value={diaRepeticion}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n  const [espacioRepeticion, setEspacioRepeticion] = useState(1);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) setEspacioRepeticion(value);\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + espacioRepeticion + \" semana(s)\"}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={espacioRepeticion}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    diasSeleccionados[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    diasSeleccionados[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    diasSeleccionados[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    diasSeleccionados[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    diasSeleccionados[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    diasSeleccionados[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const [opcionRepetir, setOpcionRepetir] = useState(1);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionRepetir}\n              onChange={(event) => setOpcionRepetir(event.target.value)}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionRepetir} />\n          <RepetirSemanalmente opcionRepetir={opcionRepetir} />\n          <RepetirMensualmente opcionRepetir={opcionRepetir} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","export const paciente = {\n  nombre: \"Nachito\",\n  apellido: \"Ledesma\",\n  direccion: \"Bynnon 1529\",\n  celular: \"1535949261\",\n  mail: \"taio@fsinet.com.ar\",\n  dni: 38993013,\n};\n\nexport const doctor = {\n  nombre: \"Nachito\",\n  apellido: \"Ledesma\",\n  direccion: \"Bynnon 1529\",\n  celular: \"1535949261\",\n  mail: \"taio@fsinet.com.ar\",\n  dni: 38993013,\n  matricula: 3456543,\n};\n\nexport const horarios = [\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n];\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n} from \"../actions/types\";\n\nexport function addTurno(turno) {\n  return (dispatch) => {\n    dispatch({\n      type: NEW_TURNO,\n      payload: turno,\n    });\n  };\n}\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\n\nexport function borrarTurno(index, horario) {\n  return (dispatch) => {\n    dispatch({\n      type: BORRAR_TURNO, //Aparece en AgendaReducer\n      payload: { index: index, horario: horario },\n    });\n  };\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n} from \"../actions/types\";\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { horarios } from \"./itemsAgendaData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTurno, borrarTurno } from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n} from \"../../../actions/EditTurnoActions\";\n\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector((state) => state.editTurnoReducer); //Para saber si estoy o no logueado en el sistema\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n    return ye + \"-\" + mo + \"-\" + da;\n  };\n\n  const [fechaTurno, setFechaTurno] = useState(fechaString());\n\n  useEffect(() => {\n    if (turno_info.fecha !== \"\") setFechaTurno(turno_info.fecha);\n  }, [turno_info]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const crearTurno = () => {\n    if (\n      turno_info.paciente !== \"\" &&\n      turno_info.doctor !== \"\" &&\n      turno_info.horario !== \"\"\n    ) {\n      let turno = {\n        horario: turno_info.horario,\n        turno: {\n          paciente: turno_info.paciente,\n          doctor: turno_info.doctor,\n          servicio: turno_info.servicio,\n          fecha: fechaTurno,\n          programar: turno_info.programar,\n          nota: turno_info.nota,\n        },\n      };\n      dispatch(addTurno(turno));\n    }\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Doctor</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          onChange={(event) => dispatch(setDoctor(event.target.value))}\n          label=\"Doctor\"\n          value={turno_info.doctor}\n          fullWidth\n        >\n          <MenuItem value={\"Gines Gonzales\"}>Gines Gonzales</MenuItem>\n          <MenuItem value={\"Rene Favaloro\"}>Rene Favaloro</MenuItem>\n          <MenuItem value={\"Conrad Hawkings\"}>Conrad Hawkings</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Paciente</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          onChange={(event) => dispatch(setPaciente(event.target.value))}\n          label=\"Paciente\"\n          value={turno_info.paciente}\n          fullWidth\n        >\n          <MenuItem value={\"Ignacio Ledesma\"}>Ignacio Ledesma</MenuItem>\n          <MenuItem value={\"Gonzalo Berro\"}>Gonzalo Berro</MenuItem>\n          <MenuItem value={\"Matias Solimo\"}>Matias Solimo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Servicio</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label=\"Servicio\"\n          onChange={(event) => dispatch(setServicio(event.target.value))}\n          value={turno_info.servicio}\n          fullWidth\n        >\n          <MenuItem value={30}>FSINET</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaTurno}\n              variant=\"outlined\"\n              onChange={(event) => setFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Horario\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              value={turno_info.horario}\n              onChange={(event) => dispatch(setHorario(event.target.value))}\n              fullWidth\n            >\n              {horarios.map((horario) => {\n                return (\n                  <MenuItem key={horario} value={horario}>\n                    {horario}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            onClick={() =>\n              dispatch(borrarTurno(turno_info.index, turno_info.horario))\n            }\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={crearTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nconst options = [\"Rene Favaloro\", \"Gines Gonzales\", \"Conrad Hawkings\"];\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button variant=\"contained\" onClick={setDateToday}>\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={classes.fechaAgenda}\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { horarios } from \"./itemsAgendaData\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const editTurno = (index, turno_horario) => {\n    const foundIndexHorario = turnos.findIndex(\n      (horario) => horario.horario === turno_horario\n    );\n\n    let aux_turno = turnos[foundIndexHorario].turnos[index];\n\n    let turno = {\n      doctor: aux_turno.doctor,\n      paciente: aux_turno.paciente,\n      servicio: aux_turno.servicio,\n      programar: aux_turno.programar,\n      fecha: aux_turno.fecha,\n      horario: turno_horario,\n      nota: aux_turno.nota,\n      index: index,\n    };\n\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios.map((horario) => {\n        return (\n          <Grid\n            key={\"horario_\" + horario}\n            container\n            style={{ minHeight: \"5vh\", zIndex: 0 }}\n          >\n            <Grid\n              item\n              xs={2}\n              sm={2}\n              md={2}\n              lg={1}\n              className={classes.gridHorarios}\n            >\n              <label className={classes.labelHorario}>{horario}</label>\n            </Grid>\n            <Grid\n              item\n              xs={10}\n              sm={10}\n              md={10}\n              lg={11}\n              onClick={() => dispatch(setHorario(horario))}\n              className={classes.containerTurnosGrid}\n            >\n              {turnos.map((horario_turno) => {\n                return horario === horario_turno.horario\n                  ? horario_turno.turnos.map((turno, index) => {\n                      return (\n                        <Chip\n                          clickable={true}\n                          key={index}\n                          className={classes.chipTurnos}\n                          onClick={() => editTurno(index, horario)}\n                          color=\"primary\"\n                          label={\"Paciente: \" + turno.paciente}\n                        ></Chip>\n                      );\n                    })\n                  : null;\n              })}\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"90vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function Agenda() {\n  const classes = useStyles();\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option}-${index}`} value={option}>\n                {option}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","const getAllInputNames = () => {\n  const form = document.getElementById(\"form\");\n  if (form == null) return [];\n\n  let arrayOfInputNames = [];\n  const inputs = form.getElementsByTagName(\"input\");\n  for (let i = 0; i < inputs.length; i++) {\n    arrayOfInputNames.push(inputs[i].name);\n  }\n  return arrayOfInputNames;\n};\n\nexport const setDefaultFormInput = () => {\n  const names = getAllInputNames();\n\n  let state = {};\n  if (names != null && names.length > 0) {\n    state = names.reduce((acc, curr) => {\n      acc[curr] = \"\";\n      return acc;\n    }, {});\n  }\n  return state;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport FormSelect from \"components/Logged/FormSelect\";\nimport { setDefaultFormInput } from \"Utils/functions\";\n\nexport default function Form({ inputs, options }) {\n  const [formInput, setFormInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  );\n\n  useEffect(() => {\n    setFormInput(setDefaultFormInput());\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormInput({ [name]: value });\n  };\n\n  const renderInputs = () => {\n    return inputs.map((input, index) => {\n      let component;\n      input.select\n        ? (component = (\n            <Grid item key={index} xs={12} md={6}>\n              <FormSelect\n                name=\"obraSocial\"\n                label=\"Obra Social\"\n                options={options}\n                value={input[Object.keys(formInput)[index]] || \"\"}\n                handleChange={handleInputChange}\n              />\n            </Grid>\n          ))\n        : (component = (\n            <Grid item key={index} xs={12} md={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id={input.name}\n                label={input.label}\n                name={input.name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n          ));\n\n      return component;\n    });\n  };\n\n  return <>{inputs && renderInputs()}</>;\n}\n","import React from \"react\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nexport default function RefTable({ columns }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns\n              ? columns.map((column, index) => {\n                  return (\n                    <TableCell key={`${column}-${index}`} align=\"right\">\n                      {column}\n                    </TableCell>\n                  );\n                })\n              : \"\"}\n          </TableRow>\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\n\nimport { Paper, Tab, Tabs } from \"@material-ui/core\";\n\nexport default function TopNavbar({ setTabMenu, tabMenu }) {\n  return (\n    <Paper>\n      <Tabs\n        value={tabMenu}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab label=\"Todos\" value=\"todos\" onClick={() => setTabMenu(\"todos\")} />\n        <Tab label=\"Nuevo\" value=\"nuevo\" onClick={() => setTabMenu(\"nuevo\")} />\n      </Tabs>\n    </Paper>\n  );\n}\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function WrapperForm({ children }) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.container}>\n      <form id=\"form\">\n        <Grid container spacing={1}>\n          {children}\n        </Grid>\n      </form>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    padding: 15,\n    marginTop: \"1em\",\n  },\n}));\n","import React, { useState } from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Form from \"components/Logged/Form\";\nimport RefTable from \"components/Logged/RefTable\";\nimport TopNavbar from \"components/Logged/TopNavbar\";\nimport WrapperForm from \"components/Logged/WrapperForm\";\n\nexport default function Wrapper({ columns, inputs, options }) {\n  const classes = useStyles();\n  const [tabMenu, setTabMenu] = useState(\"todos\");\n\n  const switchMenu = () => {\n    switch (tabMenu) {\n      case \"todos\":\n        return <RefTable columns={columns} />;\n      case \"nuevo\":\n        return (\n          <WrapperForm>\n            <Form inputs={inputs} options={options} />\n          </WrapperForm>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <Container className={classes.container}>\n      <TopNavbar setTabMenu={setTabMenu} tabMenu={tabMenu} />\n      <h1>Nombre Prueba</h1>\n      {switchMenu()}\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    paddingTop: \"1em\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={1} xs={2} className={classes.gridButtonHoy}>\n          <Button variant=\"contained\" onClick={setDateToday}>\n            Hoy\n          </Button>\n        </Grid>\n        <Grid item md={3} xs={5} className={classes.fechaAgenda}>\n          {fechaString()}\n        </Grid>\n        <Grid item md={6} xs={5} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (mes_actual === turnos.mes) {\n      return turnos.dias\n        .filter((turno) => {\n          return turno.dia === dia_mes;\n        })\n        .map((dia, index_dia) => {\n          return (\n            <Grid\n              key={\"grid_container_\" + index_dia}\n              container\n              style={{ marginBottom: 2 }}\n            >\n              <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n                <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                  <span key={\"span_horario_\" + index_dia}>\n                    Hs: {dia.horario} |\n                  </span>\n                  <span key={\"span_paciente_\" + index_dia}>\n                    {\" \"}\n                    {dia.paciente}\n                  </span>\n                </div>\n              </Grid>\n            </Grid>\n          );\n        });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({ type: SWITCH_MENU, payload: menuOptions.Agenda_DIARIA }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\nexport default function AgendaMensual() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const [inicioSemana, setInicioSemana] = useState(getMonday());\n\n  useEffect(() => {\n    setInicioSemana(getMonday());\n  }, [fechaCalendario, getMonday]);\n\n  const downFecha = () => {\n    const anterior_lunes = inicioSemana;\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = inicioSemana;\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = inicioSemana.getDate();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      inicioSemana\n    );\n\n    const fecha_sabado = inicioSemana;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase()\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase();\n\n    return fecha;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={1} xs={2} className={classes.gridButtonHoy}>\n          <Button variant=\"contained\" onClick={setDateToday}>\n            Hoy\n          </Button>\n        </Grid>\n        <Grid item md={3} xs={5} className={classes.fechaAgenda}>\n          {fechaString()}\n        </Grid>\n        <Grid item md={6} xs={5} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\n\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (mes_actual === turnos.mes) {\n      return turnos.dias\n        .filter((turno) => {\n          return turno.dia === dia_mes;\n        })\n        .map((dia, index_dia) => {\n          return (\n            <Grid\n              key={\"grid_container_\" + index_dia}\n              container\n              style={{ marginBottom: 5 }}\n            >\n              <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n                <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                  <span key={\"span_horario_\" + index_dia}>\n                    Hs: {dia.horario} |{\" \"}\n                  </span>\n                  <span key={\"span_paciente_\" + index_dia}>\n                    {\" \"}\n                    {dia.paciente}\n                  </span>\n                </div>\n              </Grid>\n            </Grid>\n          );\n        });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 10,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nexport default function AgendaSemanalDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({ type: SWITCH_MENU, payload: menuOptions.Agenda_DIARIA }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                  mes_calendario={badge_fecha.getMonth() + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"85vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\nexport default function AgendaSemanal() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","export const obraSocialOptions = [\n  \"Swiss Medical\",\n  \"Asociart ART\",\n  \"Suteba\",\n  \"PAMI\",\n  \"Paramedic\",\n];\n\nexport const columnsPacientes = [\n  \"Nombre\",\n  \"Apellido\",\n  \"DNI\",\n  \"Teléfono\",\n  \"Dirección\",\n  \"Correo Electrónico\",\n  \"Obra Social\",\n];\n\nexport const formPacientes = [\n  { name: \"nombre\", label: \"Nombre\" },\n  { name: \"apellido\", label: \"Apellido\" },\n  { name: \"dni\", label: \"N° de Documento\" },\n  { name: \"telefono\", label: \"Teléfono\" },\n  { name: \"direccion\", label: \"Dirección\" },\n  { name: \"email\", label: \"Correo Electrónico\" },\n  { name: \"obraSocial\", label: \"Obra Social\", select: true },\n];\n\nexport const columnsPersonalMedico = [\n  \"Nombre\",\n  \"Apellido\",\n  \"Dirección\",\n  \"Teléfono\",\n  \"Correo Electrónico\",\n  \"Matrícula\",\n  \"DNI\",\n];\n\nexport const formPersonalMedico = [\n  { name: \"nombre\", label: \"Nombre\" },\n  { name: \"apellido\", label: \"Apellido\" },\n  { name: \"direccion\", label: \"Dirección\" },\n  { name: \"telefono\", label: \"Teléfono\" },\n  { name: \"email\", label: \"Correo Electrónico\" },\n  { name: \"matricula\", label: \"Matrícula\" },\n  { name: \"dni\", label: \"N° de Documento\" },\n];\n\nexport const columnsInstituciones = [\"Nombre\", \"CUIT\", \"Dirección\", \"Teléfono\"];\n\nexport const formInstituciones = [\n  { name: \"nombre\", label: \"Nombre\" },\n  { name: \"cuit\", label: \"CUIT\" },\n  { name: \"direccion\", label: \"Dirección\" },\n  { name: \"telefono\", label: \"Teléfono\" },\n  { name: \"logo\", label: \"Logo\" },\n];\n\nexport const columnsObraSocial = [\"Nombre\"];\n\nexport const formObraSocial = [{ name: \"nombre\", label: \"Nombre\" }];\n\nexport const columnsEspecialidades = [\"Nombre\"];\n\nexport const formEspecialidades = [{ name: \"nombre\", label: \"Nombre\" }];\n","import React from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\n\nimport Wrapper from \"components/Logged/Wrapper\";\n\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport {\n  columnsPacientes,\n  formPacientes,\n  obraSocialOptions,\n  columnsPersonalMedico,\n  formPersonalMedico,\n  columnsInstituciones,\n  formInstituciones,\n  columnsObraSocial,\n  formObraSocial,\n  columnsEspecialidades,\n  formEspecialidades,\n} from \"Utils/formInputs\";\n\nexport default function PrimaryContainer() {\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal />\n          </div>\n        );\n\n      case menuOptions.OBRAS_SOCIALES:\n        return <Wrapper columns={columnsObraSocial} inputs={formObraSocial} />;\n      case menuOptions.PESONAL_SALUD:\n        return (\n          <Wrapper\n            columns={columnsPersonalMedico}\n            inputs={formPersonalMedico}\n          />\n        );\n      case menuOptions.PACIENTES:\n        return (\n          <Wrapper\n            columns={columnsPacientes}\n            inputs={formPacientes}\n            options={obraSocialOptions}\n          />\n        );\n      case menuOptions.INSTITUCIONES:\n        return (\n          <Wrapper columns={columnsInstituciones} inputs={formInstituciones} />\n        );\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <Wrapper\n            columns={columnsEspecialidades}\n            inputs={formEspecialidades}\n          />\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return switchMenu();\n}\n","import React from \"react\";\nimport LeftMenu from \"./LeftMenu\";\nimport PrimaryContainer from \"./PrimaryContainer\";\n\nexport default function Logged() {\n  return (\n    <div\n      style={{\n        maxHeight: \"100vh\",\n        overflowY: \"auto\",\n        width: \"100vw\",\n      }}\n    >\n      <LeftMenu></LeftMenu>\n      <div style={{ paddingLeft: 65 }}>\n        <PrimaryContainer></PrimaryContainer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\n\nexport default function MenuSwitch() {\n  const GoToMenu = () => {\n    const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n    if (login === 0) {\n      return <Login></Login>;\n    } else {\n      return <Logged></Logged>;\n    }\n  };\n\n  return GoToMenu();\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  NEW_TURNO,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  index: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.doctor,\n        fecha: action.payload.fecha,\n        horario: action.payload.horario,\n        paciente: action.payload.paciente,\n        programar: action.payload.programar,\n        servicio: action.payload.servicio,\n        nota: action.payload.nota,\n        index: action.payload.index,\n      };\n\n    case NEW_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { VISTAMENSUALSEMANAL } from \"../actions/types\";\n\nexport const make_data = function () {\n  let turnos_total = { mes: 6, dias: [] };\n\n  for (let i = 1; i <= 30; i++) {\n    for (let j = 1; j <= 30; j++) {\n      turnos_total.dias.push({\n        dia: i,\n        paciente: \"Gonzalo Martin Berro \" + j,\n        horario: \"0\" + j + \":00\",\n      });\n    }\n  }\n  return turnos_total;\n};\n\nconst initialState = {\n  turnos: make_data(),\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case VISTAMENSUALSEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./globalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MenuSwitch />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";"],"sourceRoot":""}