{"version":3,"sources":["imagenes/fondo.png","actions/types.js","actions/LoginActions.js","Utils/constants.js","Utils/functions.js","components/Login/LeftSideLogin.jsx","components/Login/Login.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","actions/AgendaActions.js","components/Logged/Agenda/grabarTurnoLogica.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/ProfesionalActions.js","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","actions/PrestadoraActions.js","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","components/Logged/FormsABM/Profesional/ProfesionalTable.jsx","components/Logged/FormsABM/FormSelect.jsx","components/Logged/FormsABM/Profesional/ProfesionalForm.jsx","components/Logged/FormsABM/Profesional/Profesional.jsx","components/Logged/FormsABM/Paciente/PacienteTable.jsx","components/Logged/FormsABM/Paciente/PacienteForm.jsx","components/Logged/FormsABM/Paciente/Paciente.jsx","actions/HistoriaClinicaActions.js","components/Logged/FormsABM/HistoriaClinica/HeaderListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Menu/MenuFunctions.js","components/Logged/Menu/BigMenu/InformacionEmpresaMenu.jsx","components/Logged/Menu/BigMenu/AgendaMenu.jsx","components/Logged/Menu/BigMenu/ContainerBigMenu.jsx","components/Logged/Menu/BigMenu/BigMenu.jsx","components/Logged/Menu/SmallMenu/AgendaSmallMenu.jsx","components/Logged/Menu/SmallMenu/InformacionEmpresaSmallMenu.jsx","components/Logged/Menu/SmallMenu/ContainerSmallMenu.jsx","components/Logged/Menu/SmallMenu/SmallMenu.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/ErrorMessageReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ERROR_MESSAGE","setLogin","login","dispatch","type","payload","menuOptions","url_servidor","error_generico","horarios","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","refreshToken","fetch","localStorage","getItem","method","headers","Authorization","then","res","status","entries","pair","setItem","setTimeout","calcularTimer","removeItem","hora_actual","Date","fecha_expiracion","parse","timer","differenceInSeconds","LeftSideLogin","enqueueSnackbar","useSnackbar","classes","useStyles","useDispatch","useState","password","setPassword","usuario","setUsuario","validateLogin","undefined","body","JSON","stringify","username","variant","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","form","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","MenuItem","value","TextField","margin","required","name","onChange","event","target","Button","color","submit","onClick","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","setDoctor","data","setHorario","EditAgendaHeader","headerGrid","lg","headerSpan","borderBottom","paddingBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","useSelector","state","opcionRepetir","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","tipo","programar","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","dni","getTurnos","profesional","response","json","grabarTurno","turnoInfo","fechaCalendario","profesional_seleccionado","token","cdTurno","hora","horario","paciente","doctor","servicio","cd_servicio","tipoServicio","cdTipoServicio","notas","nota","message","sendTurno","optionsProfesional","listaProfesionales","options","map","push","nombre","apellido","especialidad","optionsPaciente","listaPacientes","optionsServicios","listaServicios","optionsTipoServicios","listaTipoServicios","optionsHorarios","EditAgendaItem","turno_info","editTurnoReducer","agenda_reducer","fecha_agenda","useEffect","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","filter","option","isDisabled","noValidate","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","title","toLocaleString","timeZone","buttons","eliminarTurno","borderTop","maxWidth","minWidth","base","setProfesional","getListaProfesionales","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","selected","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","icon","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","cursor","userSelect","turnos","key","gridHorarios","labelHorario","containerTurnosGrid","Chip","clickable","chipTurnos","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","limpiar","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","nuevaObraSocial","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","Error","catch","error","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","minDeviceWidth","AgendaMensualDias","gotoDiaCalendario","numero_dia","menu","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","console","log","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","especialidadesPaciente","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","nuevaEspecialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","setPrestadora","prestadora","getPrestadoras","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","cd_prestadora","nuevaPrestadora","PrestadoraTable","prestadoras","listaPrestadoras","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","ente","activos","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","clearTimeout","subHeaderComponentMemo","useMemo","e","onClear","columns","cell","row","sortable","selector","button","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","buscarActivos","tabSeleccionada","setValue","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","listaTurnos","armarListaTurnos","Card","CardContent","textTransform","gutterBottom","pos","CardActions","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","profesionalSeleccionado","deleteProfesional","FormSelect","handleChange","defaultState","sexo","email","seguroMalaPraxis","cuit","registroNacPrestadores","ProfesionalForm","useReducer","newState","setProfesionalForm","especialidadesOptions","keys","handleInputChange","nuevoProfesional","objProfesional","Profesional","pacienteSeleccionado","deletePaciente","fecha_nacimiento","nroAfiliado","PacienteForm","setPacienteForm","planesOptions","nuevoPaciente","objPlan","Paciente","setModalHistoriaClinica","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","HeaderListaHistoriaClinica","especialidadSeleccionada","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","deleteHistoriaClinica","id_historia_clinica","callBack","especialidadPaciente","armarListaHistoriaClinica","historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","nuevaHistoriaClinica","gridInputs","handleProfesional","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","open_modal","Modal","onClose","aria-labelledby","aria-describedby","PrimaryContainer","menuSelected","globalReducer","errorMessage","switchMenu","gotoMenu","agendaSeleccionada","informacionEmpresaSeleccionada","closeSession","InformacionEmpresaMenu","faBook","textMenu","subMenuContainer","subMenuOptions","subMenuSelected","borderTopLeftRadius","position","left","top","AgendaMenu","faCalendarAlt","ContainerBigMenu","openAgenda","setOpenAgenda","openInformacionEmpresa","setOpenInformacionEmpresa","mainContainer","gridItemMenu","gridSelected","onMouseLeave","onMouseOver","faSearch","faUserMd","faUser","faFileMedical","faSignOutAlt","justifyContent","borderBottomLeftRadius","BigMenu","containerPrimary","float","selectedSubMenu","textSubMenu","InformacionEmpresaSmallMenu","ContainerSmallMenu","SmallMenu","gridHeader","faBars","Logged","maxDeviceWidth","MenuSwitch","login_state","stored_token","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","maxSnack","timeOut","newestOnTop","preventDuplicates","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ae3800d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\n\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const MODAL_HISTORIA_CLINICA = \"MODAL_HISTORIA_CLINICA\";\r\nexport const ERROR_MESSAGE = \"ERROR_MESSAGE\";\r\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","export const menuOptions = {\n  MENU: \"Menú\",\n  INFORMACION_EMPRESA: \"Información\",\n  AGENDA: \"Agenda\",\n  OBRAS_SOCIALES: \"Obras Sociales\",\n  PROFESIONALES: \"Profesionales \",\n  PACIENTES: \"Pacientes\",\n  ESPECIALIDADES: \"Especialidades\",\n  Agenda_DIARIA: \"Agenda Diaria\",\n  Agenda_MENSUAL: \"Agenda Mensual\",\n  Agenda_SEMANAL: \"Agenda Semanal\",\n  PLAN: \"Plan\",\n  PRESTADORA: \"Prestadora\",\n  SERVICIOS: \"Servicios\",\n  TIPO_SERVICIO: \"Tipo de Servicios\",\n  COSTO_SERVICIO: \"Costo del Servicio\",\n  HISTORIA_CLINICA: \"Historia Clínica\",\n  BUSCAR_TURNO: \"Buscar Turno\",\n  CERRAR_SESION: \"Cerrar Sesión\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\n\nexport const error_generico = \"Error interno en el servidor\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import { url_servidor } from \"Utils/constants\";\nimport { parse, differenceInSeconds } from \"date-fns\";\nimport { setLogin } from \"actions/LoginActions\";\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\nexport const refreshToken = (dispatch) => {\n  fetch(`${url_servidor}refreshToken/${localStorage.getItem(\"usuario\")}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  }).then(function (res) {\n    if (res.status === 200) {\n      for (var pair of res.headers.entries()) {\n        if (pair[0] === \"access-token\") {\n          localStorage.setItem(\"token\", pair[1]);\n        } else if (pair[0] === \"expiration-time\") {\n          localStorage.setItem(\"expiration-time\", pair[1]);\n        }\n      }\n      setTimeout(() => {\n        refreshToken();\n      }, calcularTimer());\n    } else {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"usuario\");\n      localStorage.removeItem(\"expiration-time\");\n      dispatch(setLogin(0));\n    }\n  });\n};\nexport const calcularTimer = () => {\n  const hora_actual = new Date();\n\n  const fecha_expiracion = parse(\n    localStorage.getItem(\"expiration-time\"),\n    \"dd/MM/yyyy HH:mm:ss\",\n    new Date()\n  );\n\n  let timer = differenceInSeconds(fecha_expiracion, hora_actual);\n\n  if (timer * 1000 - 120000 >= 120000) {\n    //Si el timer queda configurado para ejecutarse 2 minutos antes de vencerse, acepto\n    return timer * 1000 - 120000;\n  } else {\n    // Si me queda menos de 2 minutos, lo ejecuto en ese momento\n    return 10;\n  }\n};\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\nimport { url_servidor } from \"Utils/constants\";\nimport { useSnackbar } from \"notistack\";\nimport { refreshToken, calcularTimer } from \"Utils/functions\";\n\nexport default function LeftSideLogin() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"Gunsandrose\");\n  const [usuario, setUsuario] = useState(\"gonzalo\");\n\n  const gotoLogin = () => {\n    validateLogin();\n  };\n\n  const validateLogin = () => {\n    if (\n      password !== undefined &&\n      password !== \"\" &&\n      usuario !== undefined &&\n      usuario !== \"\"\n    ) {\n      fetch(url_servidor + \"login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: usuario,\n          password: password,\n        }),\n      }).then(function (res) {\n        if (res.status === 200) {\n          for (var pair of res.headers.entries()) {\n            if (pair[0] === \"access-token\") {\n              localStorage.setItem(\"token\", pair[1]);\n              localStorage.setItem(\"usuario\", usuario);\n              dispatch(setLogin(1)); //Voy a marcar el login\n            } else if (pair[0] === \"expiration-time\") {\n              localStorage.setItem(\"expiration-time\", pair[1]);\n            }\n          }\n\n          setTimeout(() => {\n            refreshToken();\n          }, calcularTimer());\n        } else {\n          enqueueSnackbar(\"Usuario o contraseña incorrectos.\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco.\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <div className={classes.form}>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Institución\"\n            fullWidth\n          >\n            <MenuItem value={30}>FSINET</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n          value={usuario}\n          onChange={(event) => setUsuario(event.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    paddingBottom: 17,\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      if (response.status === 200 && callback) {\n        cleanProgramar();\n        cleanEditTurno();\n        callback();\n\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el turno\", tipo: \"success\" },\n        });\n      }\n    });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/1/horarios\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      });\n  };\n}\n","import { url_servidor } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\", Authorization: data.token },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      programarAgenda: data.programarAgenda,\n    }),\n  }).then(function (response) {\n    if (response.status === 200) {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Se guardó el turno\",\n          tipo: \"success\",\n        },\n      });\n\n      data.dispatch(\n        getTurnos(\n          data.fechaCalendario,\n          data.profesional_seleccionado,\n          data.token\n        )\n      );\n      data.dispatch(cleanProgramar());\n      data.dispatch(setDefault());\n    } else {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Error al guardar el turno\",\n          tipo: \"error\",\n        },\n      });\n    }\n  });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda,\n  token\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n    token: token,\n  };\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nconst optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (\n        turno_info.paciente !== \"\" &&\n        turno_info.doctor !== \"\" &&\n        turno_info.horario !== \"\" &&\n        turno_info.servicio !== \"\" &&\n        turno_info.tipoServicio !== \"\"\n      ) {\n        grabarTurno(\n          turno_info,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      }\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const setFechaEsp = (fecha, hora) => {\n    fecha = fecha + \" \" + hora;\n    return new Date(fecha).toLocaleString(\"es-ES\", {\n      timeZone: \"America/Argentina/Buenos_Aires\",\n    });\n  };\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={\n              turno_info.cdTurno > 0 &&\n              fechaString(fechaCalendario) <= fechaString(new Date())\n                ? false\n                : true\n            }\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el profesional\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el profesional\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el paciente\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el paciente\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import {\n  SET_TIPO_SERVICIO,\n  SET_LISTA_TIPO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el tipo de servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el tipo de servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n      setOpen(false);\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  const editTurno = (turno) => {\n    turno.fecha = fechaString(new Date(turno.fecha));\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <Chip\n                        clickable={true}\n                        key={index}\n                        className={classes.chipTurnos}\n                        onClick={() => editTurno(turno)}\n                        color=\"primary\"\n                        label={\n                          turno.paciente.dni +\n                          \" - \" +\n                          turno.paciente.nombre +\n                          \" \" +\n                          turno.paciente.apellido +\n                          \" (\" +\n                          turno.tipoServicio.nombre +\n                          \")\"\n                        }\n                      ></Chip>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"90vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(setDoctor(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import {\n  SET_OBRA_SOCIAL,\n  SET_LISTA_OBRA_SOCIAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la obra social\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la obra social\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== undefined && nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Obra Social\", {\n            variant: \"success\",\n          });\n          dispatch(getListaObrasSocial());\n          nuevaObraSocial();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Obra Social\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el plan\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el plan\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== undefined && nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n          nuevoPlan();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPlan}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (\n      nombre !== undefined &&\n      nombre !== \"\" &&\n      cdServicio !== undefined &&\n      cdServicio !== \"\"\n    ) {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaServicios());\n          nuevServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(\"\");\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteServicio(servicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import { SET_TURNOS_VISTA_MENSUAL, SET_TURNOS_VISTA_SEMANAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/mes/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/semana/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"85vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  SET_ESPECIALIDAD,\n  SET_LISTA_ESPECIALIDAD,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function especialidadesPaciente(dni) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/paciente/\" + dni, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad, token) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la especialidad\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó la especialidad\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== undefined && nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Especialidad\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n          nuevaEspecialidad();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Especialidad\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la prestadora\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la prestadora\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Prestadora\", {\n            variant: \"success\",\n          });\n          dispatch(getPrestadoras());\n          nuevaPrestadora();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Prestadora\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                type=\"number\"\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            type=\"number\"\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarHorario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deletePrestadora(prestadora)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== undefined && nombre !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaTipoServicios());\n          nuevoTipoServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { BUSCAR_TURNOS, BUSCAR_PACIENTE, BUSCAR_PROFESIONAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function ente(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/paciente/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanTurnos() {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_TURNOS,\n      payload: [],\n    });\n  };\n}\n\nexport function buscarTurnosProfesinal(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/profesional/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setBuscarProfesional,\n  buscarTurnosProfesinal,\n} from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal(buscarInfo.profesional, buscarInfo.actuales)\n      );\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.profesional]);\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { ente, setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0 && buscarInfo.actuales !== undefined) {\n      dispatch(ente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarActivos = useSelector((state) => state.buscarTurnos.actuales);\n\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarActivos === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarActivos === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaTurnos() {\n  const listaTurnos = useSelector((state) => state.buscarTurnos.turnos);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return listaTurnos.map((turno) => {\n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              <FontAwesomeIcon icon={faEye} />\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return listaTurnos && listaTurnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaTurnos ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { cleanTurnos } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(cleanTurnos());\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n\n    paddingTop: 0,\n    height: \"100vh\",\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import {\n  SET_COSTO_SERVICIO,\n  SET_LISTA_COSTO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el costo del servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el costo del servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== undefined &&\n      costo > 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          id: {\n            servicio: { cd_servicio: cdServicio, nombre: \"\" },\n            plan: {\n              cd_plan: cdPlan,\n              nombre: \"\",\n            },\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          nuevoCostoServicio();\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.id) {\n      setCdPlan(costoServicio.id.plan.cd_plan);\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n      setCdServicio(costoServicio.id.servicio.cd_servicio);\n    }\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={guardarPlan}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n    paddingRight: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.servicio.cd_servicio,\n                costoServicio.id.plan.cd_plan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.id.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setProfesional(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n  disabled,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        disabled={disabled ? disabled : false}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option.value}-${index}`} value={option.value}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport FormSelect from \"../FormSelect\";\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  const especialidadesOptions = listaEspecialidades\n    ? listaEspecialidades.map((e) => {\n        return { name: e.nombre, value: e.cd_especialidad };\n      })\n    : [];\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e.target.value });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objProfesional),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Profesional\", {\n            variant: \"success\",\n          });\n          dispatch(getListaProfesionales());\n          nuevoProfesional();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Profesional\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoProfesional = () => {\n    dispatch(setProfesional({}));\n    setProfesionalForm(defaultState);\n    setEspecialidad(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={profesional.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"especialidad\"\n            label=\"Especialidad\"\n            options={especialidadesOptions}\n            value={(especialidad && especialidad.cd_especialidad) || \"\"}\n            handleChange={handleEspecialidad}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <ProfesionalTable />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={3}\n        style={{ width: \"100%\" }}\n        className={classes.borderForm}\n      >\n        <ProfesionalForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { ente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(ente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setPaciente(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport FormSelect from \"components/Logged/FormsABM/FormSelect\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const planesOptions = listaPlanes\n    ? listaPlanes.map((e) => {\n        return { name: e.obraSocial.nombre + \" \" + e.nombre, value: e.cd_plan };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e.target.value });\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Paciente\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPacientes());\n          nuevoPaciente();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Paciente\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoPaciente = () => {\n    dispatch(setPaciente({}));\n    setPacienteForm(defaultState);\n    setPlan(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={paciente.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"plan\"\n            label=\"Plan\"\n            options={planesOptions}\n            value={(plan && plan.cd_plan) || \"\"}\n            handleChange={handlePlan}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarPaciente}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <PacienteTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={3} className={classes.borderForm}>\n        <PacienteForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setModalHistoriaClinica(open) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_HISTORIA_CLINICA,\n      payload: open,\n    });\n  };\n}\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id, callBack, especialidadPaciente) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        callBack();\n        especialidadPaciente();\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se elimnó la historia clinica\",\n            tipo: \"success\",\n          },\n        });\n      }\n    });\n  };\n}\n\nexport function getListaHistoriaClinica(dni, especialidad) {\n  return (dispatch) => {\n    fetch(\n      `${url_servidor}historiaClinica/dni/${dni}/especialidad/${especialidad}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanHistoriaClinica() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LISTA_HISTORIA_CLINICA,\n      payload: [],\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { setEspecialidad } from \"actions/EspecialidadActions\";\n\nexport default function HeaderListaHistoriaClinica() {\n  const [especialidadSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n\n  useEffect(() => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: especialidadSeleccionada,\n        nombre: \"\",\n      })\n    );\n    setValue(especialidadSeleccionada);\n    dispatch(getListaHistoriaClinica(paciente, especialidadSeleccionada));\n    dispatch(especialidadesPaciente(paciente));\n  }, [dispatch, paciente, especialidadSeleccionada]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  const createTabs = () => {\n    return listaEspecialidades.map((especialidad) => {\n      return (\n        <Tab\n          key={especialidad.cd_especialidad}\n          label={especialidad.nombre}\n          value={especialidad.cd_especialidad}\n        />\n      );\n    });\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModalHistoriaClinica(true));\n  };\n\n  return (\n    <div style={{ height: \"10vh\" }}>\n      <Grid container style={{ margin: 10, marginRight: 20 }}>\n        <Grid item md={8} sm={4} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n        <Grid item md={1} sm={2} xs={12}></Grid>\n      </Grid>\n      <Paper square>\n        <Tabs\n          value={especialidadSeleccionada}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          {listaEspecialidades.length && paciente !== 0 ? (\n            <Tab key={0} label=\"Todas\" value={0} />\n          ) : (\n            \"\"\n          )}\n          {listaEspecialidades.length && paciente !== 0 ? createTabs() : \"\"}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n  eliminarHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ListaHistoriaClinica() {\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const deleteHistoriaClinica = (historiaClinica) => {\n    confirmAlert({\n      title: `Historia Clínica #${historiaClinica.id_historia_clinica}`,\n      message:\n        \"Paciente: \" +\n        historiaClinica.paciente.nombre +\n        \" \" +\n        historiaClinica.paciente.apellido +\n        \" - \" +\n        historiaClinica.paciente.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarHistoriaClinica(\n                historiaClinica.id_historia_clinica,\n                () =>\n                  dispatch(\n                    getListaHistoriaClinica(\n                      paciente,\n                      especialidad.cd_especialidad\n                    )\n                  ),\n                () => dispatch(especialidadesPaciente(paciente))\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              #{historia_clinica.id_historia_clinica} - Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Grid container>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faEye} />\n                </Button>\n              </Grid>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => deleteHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n      cursor: \"pointer\",\n    },\n  },\n  rootSeleccionado: {\n    minWidth: 275,\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"85vh\",\n    minHeight: \"85vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Select from \"react-select\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    } else {\n      historiaClinica.fechaQuirurgica = null;\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (value) => {\n    setProfesional({ dni: value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objHistoriaClinica),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n            variant: \"success\",\n          });\n          dispatch(\n            getListaHistoriaClinica(paciente, especialidad.cd_especialidad)\n          );\n          dispatch(especialidadesPaciente(paciente));\n          nuevaHistoriaClinica();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPaciente(listaPacientes)}\n            isSearchable={true}\n            placeholder={<div>Paciente</div>}\n            styles={colourStyles}\n            isDisabled={true}\n            value={optionsPaciente(listaPacientes).filter(\n              (option) => option.value === paciente\n            )}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsProfesional(listaProfesionales)}\n            isSearchable={true}\n            placeholder={<div>Profesional</div>}\n            styles={colourStyles}\n            onChange={(value) => handleProfesional(value.value)}\n            value={\n              profesional\n                ? optionsProfesional(listaProfesionales).filter(\n                    (option) => option.value === profesional.dni\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={guardarHistoriaClinica}\n              >\n                Guardar\n              </Button>\n            </Grid>\n            <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => dispatch(setModalHistoriaClinica(false))}\n              >\n                Cerrar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  setModalHistoriaClinica,\n  setHistoriaClinica,\n  cleanHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../../BuscarTurno/TablaPacientes\";\nimport HeaderListaHistoriaClinica from \"./HeaderListaHistoriaClinica\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.historiaClinica.open_modal);\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0 ));\n    dispatch(cleanHistoriaClinica());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModalHistoriaClinica(false));\n    dispatch(setHistoriaClinica({}));\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"100vh\" }}>\n        <Grid item xs={12} style={{ height: \"100vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"100vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <HeaderListaHistoriaClinica />\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\n\nimport Profesional from \"./FormsABM/Profesional/Profesional\";\nimport Paciente from \"./FormsABM/Paciente/Paciente\";\nimport HistoriaClinica from \"./FormsABM/HistoriaClinica/HistoriaClinica\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function PrimaryContainer() {\n  const { enqueueSnackbar } = useSnackbar();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const errorMessage = useSelector((state) => state.errorMessage.error);\n\n  useEffect(() => {\n    if (errorMessage.tipo !== undefined) {\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.tipo,\n      });\n    }\n  }, [enqueueSnackbar, errorMessage]);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div>{localStorage.getItem(\"token\") !== null ? switchMenu() : \"\"}</div>\n  );\n}\n","import { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport { setLogin } from \"actions/LoginActions\";\n\nexport const gotoMenu = (selected, dispatch) => {\n  dispatch({\n    type: SWITCH_MENU,\n    payload: { menu: selected, limpiar: true },\n  });\n};\nexport const agendaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.AGENDA:\n      return true;\n\n    case menuOptions.Agenda_DIARIA:\n      return true;\n\n    case menuOptions.Agenda_MENSUAL:\n      return true;\n\n    case menuOptions.Agenda_SEMANAL:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const informacionEmpresaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.INFORMACION_EMPRESA:\n      return true;\n    case menuOptions.ESPECIALIDADES:\n      return true;\n\n    case menuOptions.OBRAS_SOCIALES:\n      return true;\n\n    case menuOptions.PLAN:\n      return true;\n\n    case menuOptions.SERVICIOS:\n      return true;\n\n    case menuOptions.TIPO_SERVICIO:\n      return true;\n\n    case menuOptions.PRESTADORA:\n      return true;\n\n    case menuOptions.COSTO_SERVICIO:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const closeSession = (dispatch) => {\n  localStorage.removeItem(\"token\");\n  dispatch(setLogin(0));\n};\n","import React from \"react\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gotoMenu } from \"../MenuFunctions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function InformacionEmpresaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <Grid container style={{ zIndex: 10000 }}>\n      <Grid item xs={12}>\n        <Grid container>\n          <Grid item xs={12}>\n            <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n          </Grid>\n          <MediaQuery minDeviceWidth={1300}>\n            <Grid item xs={12} className={props.classes.textMenu}>\n              Información\n            </Grid>\n          </MediaQuery>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {props.open ? (\n          <div className={classes.subMenuContainer}>\n            <Grid container style={{ width: \"auto\", display: \"block\" }}>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.COSTO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n              >\n                {menuOptions.COSTO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.ESPECIALIDADES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n              >\n                {menuOptions.ESPECIALIDADES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.OBRAS_SOCIALES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n              >\n                {menuOptions.OBRAS_SOCIALES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PLAN === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n              >\n                {menuOptions.PLAN}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PRESTADORA === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n              >\n                {menuOptions.PRESTADORA}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.SERVICIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n              >\n                {menuOptions.SERVICIOS}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.TIPO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n              >\n                {menuOptions.TIPO_SERVICIO}\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 10,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"42vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React from \"react\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div container style={{ zIndex: 10000 }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n        </Grid>\n        <MediaQuery minDeviceWidth={1300}>\n          <Grid item xs={12} className={props.classes.textMenu}>\n            {menuOptions.AGENDA}\n          </Grid>\n        </MediaQuery>\n      </Grid>\n\n      {props.open ? (\n        <div className={classes.subMenuContainer}>\n          <Grid container style={{ width: \"auto\", display: \"block\" }}>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_DIARIA === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n            >\n              {menuOptions.Agenda_DIARIA}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_SEMANAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n            >\n              {menuOptions.Agenda_SEMANAL}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_MENSUAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n            >\n              {menuOptions.Agenda_MENSUAL}\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 0,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"2vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport InformacionEmpresaMenu from \"./InformacionEmpresaMenu\";\nimport AgendaMenu from \"./AgendaMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerBigMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openAgenda, setOpenAgenda] = useState(false);\n  const [openInformacionEmpresa, setOpenInformacionEmpresa] = useState(false);\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  useEffect(() => {\n    setOpenAgenda(false);\n    setOpenInformacionEmpresa(false);\n  }, [menuSelected]);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onMouseLeave={() => setOpenAgenda(false)}\n          onMouseOver={() => setOpenAgenda(true)}\n        >\n          <AgendaMenu open={openAgenda} classes={classes} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          onMouseLeave={() => setOpenInformacionEmpresa(false)}\n          onMouseOver={() => setOpenInformacionEmpresa(true)}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n        >\n          <InformacionEmpresaMenu\n            open={openInformacionEmpresa}\n            classes={classes}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={classes.gridItemMenu}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n\n    \"&:Hover\": {\n      fontWeight: \"bold\",\n      backgroundColor: \"#bf2231\",\n      cursor: \"pointer\",\n      color: \"#fff\",\n    },\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"center\",\n    marginTop: 10,\n    fontSize: 10,\n  },\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport ContainerBigMenu from \"./ContainerBigMenu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function BigMenu(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <ContainerBigMenu />\n      </div>\n\n      <div className={classes.containerPrimary}>\n        <PrimaryContainer></PrimaryContainer>\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"5%\",\n    minHeight: \"100%\",\n    backgroundColor: \"#333\",\n    zIndex: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"95%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_DIARIA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_DIARIA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_SEMANAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_SEMANAL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_MENSUAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_MENSUAL}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function InformacionEmpresaSmallMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.COSTO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.COSTO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n          className={\n            menuSelected === menuOptions.ESPECIALIDADES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.ESPECIALIDADES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n          className={\n            menuSelected === menuOptions.OBRAS_SOCIALES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.OBRAS_SOCIALES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n          className={\n            menuSelected === menuOptions.PLAN\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PLAN}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n          className={\n            menuSelected === menuOptions.PRESTADORA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PRESTADORA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n          className={\n            menuSelected === menuOptions.SERVICIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.SERVICIOS}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.TIPO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.TIPO_SERVICIO}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faCalendarAlt,\n  faBook,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaSmallMenu from \"./AgendaSmallMenu\";\nimport InformacionEmpresaSmallMenu from \"./InformacionEmpresaSmallMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerSmallMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.AGENDA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.AGENDA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {agendaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <AgendaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.INFORMACION_EMPRESA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.INFORMACION_EMPRESA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {informacionEmpresaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <InformacionEmpresaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n    fontSize: 35,\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"left\",\n    fontSize: 35,\n  },\n\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContainerSmallMenu from \"./ContainerSmallMenu\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nexport default function SmallMenu(props) {\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const classes = useStyles();\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <Grid container className={classes.gridHeader}>\n          <Grid item xs={2} sm={1} onClick={() => gotoMenu(menuOptions.MENU)}>\n            <FontAwesomeIcon icon={faBars} />\n          </Grid>\n          <Grid item xs={9} sm={10}>\n            <span style={{ fontSize: 27 }}>{menuSelected}</span>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className={classes.containerPrimary}>\n        {menuSelected !== menuOptions.AGENDA &&\n        menuSelected !== menuOptions.INFORMACION_EMPRESA &&\n        menuSelected !== menuOptions.MENU ? (\n          <PrimaryContainer />\n        ) : (\n          <ContainerSmallMenu />\n        )}\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"100%\",\n    minHeight: \"6%\",\n    backgroundColor: \"#de3444\",\n    zIndex: 20,\n    paddingLeft: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n  gridHeader: { height: \"100%\", fontSize: 35, color: \"white\", marginTop: \"1%\" },\n}));\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\nimport BigMenu from \"./Menu/BigMenu/BigMenu\";\nimport SmallMenu from \"./Menu/SmallMenu/SmallMenu\";\nexport default function Logged() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n      }}\n    >\n      <MediaQuery minDeviceWidth={1300}>\n        <BigMenu />\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={1300}>\n        <SmallMenu />\n      </MediaQuery>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\nimport { url_servidor } from \"Utils/constants\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\nimport { refreshToken, calcularTimer } from \"Utils/functions\";\n\nexport default function MenuSwitch() {\n  const dispatch = useDispatch();\n  const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n  useEffect(() => {\n    const stored_token = localStorage.getItem(\"token\");\n\n    if (stored_token !== null && stored_token !== \"\") {\n      fetch(url_servidor + \"tokenALive\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: stored_token,\n        },\n      }).then(function (res) {\n        if (res.status === 200) {\n          dispatch(setLogin(1)); //Voy a marcar el login\n\n          setTimeout(() => {\n            refreshToken();\n          }, calcularTimer());\n        } else {\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"usuario\");\n          localStorage.removeItem(\"expiration-time\");\n          dispatch(setLogin(0));\n        }\n      });\n    }\n  });\n\n  const GoToMenu = () => {\n    if (login === 0 || localStorage.getItem(\"token\") === null) {\n      return <Login></Login>;\n    } else {\n      return <Logged></Logged>;\n    }\n  };\n\n  return GoToMenu();\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n  open_modal: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n    case MODAL_HISTORIA_CLINICA:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { ERROR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\nimport ErrorMessageReducer from \"./ErrorMessageReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n  errorMessage: ErrorMessageReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}