{"version":3,"sources":["imagenes/fondo.png","components/Login/LeftSideLogin.jsx","actions/LoginActions.js","actions/types.js","components/Login/Login.jsx","Utils/constants.js","components/Logged/LeftMenu.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","actions/AgendaActions.js","Utils/functions.js","components/Logged/Agenda/grabarTurnoLogica.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/ProfesionalActions.js","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","actions/PrestadoraActions.js","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","components/Logged/FormsABM/Profesional/ProfesionalTable.jsx","components/Logged/FormSelect.jsx","components/Logged/FormsABM/Profesional/ProfesionalForm.jsx","components/Logged/FormsABM/Profesional/Profesional.jsx","components/Logged/FormsABM/Paciente/PacienteTable.jsx","components/Logged/FormsABM/Paciente/PacienteForm.jsx","components/Logged/FormsABM/Paciente/Paciente.jsx","actions/HistoriaClinicaActions.js","components/Logged/FormsABM/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LeftSideLogin","classes","useStyles","dispatch","useDispatch","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","variant","form","noValidate","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","MenuItem","value","TextField","margin","required","name","type","Button","color","submit","onClick","login","payload","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","menuOptions","url_servidor","horarios","LeftMenu","onSelect","selected","menu","limpiar","Toggle","Nav","eventKey","icon","faCalendarAlt","faSearch","faUserMd","faUser","faFileMedical","faBook","setHorario","data","EditAgendaHeader","headerGrid","lg","headerSpan","borderBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","useSelector","state","opcionRepetir","onChange","event","target","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","Date","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","useState","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","tipo","programar","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","dni","getTurnos","profesional","fetch","method","headers","then","response","json","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","grabarTurno","turnoInfo","enqueueSnackbar","fechaCalendario","profesional_seleccionado","body","JSON","stringify","cdTurno","hora","horario","paciente","doctor","servicio","cd_servicio","tipoServicio","cdTipoServicio","notas","nota","status","sendTurno","optionsProfesional","listaProfesionales","options","map","push","nombre","apellido","especialidad","optionsPaciente","listaPacientes","optionsServicios","listaServicios","optionsTipoServicios","listaTipoServicios","optionsHorarios","EditAgendaItem","turno_info","editTurnoReducer","agenda_reducer","useSnackbar","fecha_agenda","useEffect","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","setDoctorSeleccinado","filter","option","isDisabled","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","title","message","toLocaleString","timeZone","buttons","eliminarTurno","console","log","borderTop","maxWidth","minWidth","base","setProfesional","getListaProfesionales","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","undefined","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","cursor","userSelect","turnos","key","gridHorarios","labelHorario","containerTurnosGrid","Chip","clickable","chipTurnos","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","AgendaMensualDias","gotoDiaCalendario","numero_dia","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","setPrestadora","prestadora","getPrestadoras","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","cd_prestadora","nuevaPrestadora","PrestadoraTable","prestadoras","listaPrestadoras","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","buscarTurnosPaciente","activos","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","setTimeout","clearTimeout","subHeaderComponentMemo","useMemo","e","onClear","columns","cell","row","sortable","selector","button","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","buscarActivos","tabSeleccionada","setValue","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","listaTurnos","armarListaTurnos","Card","CardContent","textTransform","gutterBottom","pos","CardActions","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","profesionalSeleccionado","deleteProfesional","FormSelect","handleChange","defaultState","sexo","email","seguroMalaPraxis","cuit","registroNacPrestadores","ProfesionalForm","useReducer","newState","setProfesionalForm","especialidadesOptions","keys","handleInputChange","nuevoProfesional","objProfesional","Profesional","pacienteSeleccionado","deletePaciente","fecha_nacimiento","nroAfiliado","PacienteForm","setPacienteForm","planesOptions","nuevoPaciente","objPlan","Paciente","setModalHistoriaClinica","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","armarListaHistoriaClinica","historia_clinica","id_historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","paddingBottom","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","pacientesOptions","p","profesionalesOptions","nuevaHistoriaClinica","gridInputs","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","open_modal","Modal","onClose","aria-labelledby","aria-describedby","PrimaryContainer","menuSelected","globalReducer","switchMenu","Logged","MenuSwitch","login_state","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","maxSnack","timeOut","newestOnTop","preventDuplicates","position","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bae16891.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\n\nexport default function LeftSideLogin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoLogin = () => {\n    dispatch(setLogin(1)); //Voy a marcar el login\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <form className={classes.form} noValidate>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Institución\"\n            fullWidth\n          >\n            <MenuItem value={30}>FSINET</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\n\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\n\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\n\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const MODAL_HISTORIA_CLINICA = \"MODAL_HISTORIA_CLINICA\";\r\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","export const menuOptions = {\n  HOME: \"home\",\n  CHARTS: \"charts\",\n  AGENDA: \"agenda\",\n  OBRAS_SOCIALES: \"obras_sociales\",\n  PROFESIONALES: \"profesionales\",\n  PACIENTES: \"pacientes\",\n  ESPECIALIDADES: \"especialidades\",\n  Agenda_DIARIA: \"agenda_diaria\",\n  Agenda_MENSUAL: \"agenda_mensual\",\n  Agenda_SEMANAL: \"agenda_semanal\",\n  PLAN: \"PLAN\",\n  PRESTADORA: \"PRESTADORA\",\n  SERVICIOS: \"SERVICIOS\",\n  TIPO_SERVICIO: \"TIPO_SERVICIO\",\n  COSTO_SERVICIO: \"COSTO_SERVICIO\",\n  HISTORIA_CLINICA: \"HISTORIA_CLINICA\",\n  BUSCAR_TURNO: \"BUSCAR_TURNO\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import React from \"react\";\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarAlt,\n  faBook,\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch } from \"react-redux\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\n\nexport default function LeftMenu() {\n  const dispatch = useDispatch();\n\n  return (\n    <SideNav\n      onSelect={(selected) => {\n        dispatch({\n          type: SWITCH_MENU,\n          payload: { menu: selected, limpiar: true },\n        });\n      }}\n    >\n      <SideNav.Toggle />\n      <SideNav.Nav>\n        <NavItem eventKey={menuOptions.AGENDA}>\n          <NavIcon>\n            <FontAwesomeIcon icon={faCalendarAlt} />\n          </NavIcon>\n          <NavText>Agenda</NavText>\n          <NavItem eventKey={menuOptions.Agenda_DIARIA}>\n            <NavText>Agenda Diaria</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_SEMANAL}>\n            <NavText>Agenda Semanal</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_MENSUAL}>\n            <NavText>Agenda Mensual</NavText>\n          </NavItem>\n        </NavItem>\n        <NavItem eventKey={menuOptions.BUSCAR_TURNO}>\n          <NavIcon eventKey={menuOptions.BUSCAR_TURNO}>\n            <FontAwesomeIcon icon={faSearch} />\n          </NavIcon>\n          <NavText>Buscar Turno</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.PROFESIONALES}>\n          <NavIcon eventKey={menuOptions.PROFESIONALES}>\n            <FontAwesomeIcon icon={faUserMd} />\n          </NavIcon>\n          <NavText>Profesionales</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.PACIENTES}>\n          <NavIcon eventKey={menuOptions.PACIENTES}>\n            <FontAwesomeIcon icon={faUser} />\n          </NavIcon>\n          <NavText>Pacientes</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.HISTORIA_CLINICA}>\n          <NavIcon eventKey={menuOptions.HISTORIA_CLINICA}>\n            <FontAwesomeIcon icon={faFileMedical} />\n          </NavIcon>\n          <NavText>Historia Clínica</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.CHARTS}>\n          <NavIcon>\n            <FontAwesomeIcon icon={faBook} />\n          </NavIcon>\n          <NavText>Información Empresa</NavText>\n          <NavItem eventKey={menuOptions.COSTO_SERVICIO}>\n            <NavText>Costo Servicio</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.ESPECIALIDADES}>\n            <NavText>Especialidades</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.OBRAS_SOCIALES}>\n            <NavText>Obras Sociales</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PLAN}>\n            <NavText>Planes</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PRESTADORA}>\n            <NavText>Prestadoras</NavText>\n          </NavItem>\n\n          <NavItem eventKey={menuOptions.SERVICIOS}>\n            <NavText>Servicios</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.TIPO_SERVICIO}>\n            <NavText>Tipo Servicio</NavText>\n          </NavItem>\n        </NavItem>\n      </SideNav.Nav>\n    </SideNav>\n  );\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.status === 200 && callback) {\n        cleanProgramar();\n        cleanEditTurno();\n        callback();\n      }\n    });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/1/horarios\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      });\n  };\n}\n","/* const getAllInputNames = () => {\n  const form = document.getElementById(\"form\");\n  if (form == null) return [];\n\n  let arrayOfInputNames = [];\n  const inputs = form.getElementsByTagName(\"input\");\n  for (let i = 0; i < inputs.length; i++) {\n    arrayOfInputNames.push(inputs[i].name);\n  }\n  return arrayOfInputNames;\n};\n\nexport const setDefaultFormInput = () => {\n  const names = getAllInputNames();\n\n  let state = {};\n  if (names != null && names.length > 0) {\n    state = names.reduce((acc, curr) => {\n      acc[curr] = \"\";\n      return acc;\n    }, {});\n  }\n  return state;\n}; */\n\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\n","import { url_servidor } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\n\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      programarAgenda: data.programarAgenda,\n    }),\n  }).then(function (response) {\n    if (response.status === 200) {\n      data.enqueueSnackbar(\"Se guardó el turno\", {\n        variant: \"success\",\n      });\n\n      data.dispatch(\n        getTurnos(data.fechaCalendario, data.profesional_seleccionado)\n      );\n      data.dispatch(cleanProgramar());\n      data.dispatch(setDefault());\n    } else {\n      data.enqueueSnackbar(\"Error al guardar el turno\", {\n        variant: \"error\",\n      });\n    }\n  });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n\n  enqueueSnackbar,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    enqueueSnackbar: enqueueSnackbar,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n  };\n\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nconst optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    console.log(fechaString(new Date()));\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (\n        turno_info.paciente !== \"\" &&\n        turno_info.doctor !== \"\" &&\n        turno_info.horario !== \"\" &&\n        turno_info.servicio !== \"\" &&\n        turno_info.tipoServicio !== \"\"\n      ) {\n        grabarTurno(\n          turno_info,\n          enqueueSnackbar,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      }\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const setFechaEsp = (fecha, hora) => {\n    fecha = fecha + \" \" + hora;\n    return new Date(fecha).toLocaleString(\"es-ES\", {\n      timeZone: \"America/Argentina/Buenos_Aires\",\n    });\n  };\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={turno_info.cdTurno > 0 ? false : true}\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  const editTurno = (turno) => {\n    turno.fecha = fechaString(new Date(turno.fecha));\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <Chip\n                        clickable={true}\n                        key={index}\n                        className={classes.chipTurnos}\n                        onClick={() => editTurno(turno)}\n                        color=\"primary\"\n                        label={\n                          turno.paciente.dni +\n                          \" - \" +\n                          turno.paciente.nombre +\n                          \" \" +\n                          turno.paciente.apellido +\n                          \" (\" +\n                          turno.tipoServicio.nombre +\n                          \")\"\n                        }\n                      ></Chip>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"90vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Obra Social\", {\n            variant: \"success\",\n          });\n          dispatch(getListaObrasSocial());\n        } else {\n          enqueueSnackbar(\"Error al guardar la Obra Social\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n          nuevoPlan();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPlan}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (nombre !== \"\" && cdServicio !== \"\") {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaServicios());\n          nuevServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(0);\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarServicio}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteServicio(servicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={1} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Mes Actual\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={3}\n          xs={5}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={6} xs={5} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={2} md={2} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={10} md={10} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.dni} - {turno.paciente.nombre}{\" \"}\n                      {turno.paciente.apellido} ({turno.tipoServicio.nombre})\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import { SET_TURNOS_VISTA_MENSUAL, SET_TURNOS_VISTA_SEMANAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/mes/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/semana/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Semana Actual\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={2} md={2} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={10} md={10} sm={8} xs={8}>\n                    <span\n                      key={\"span_paciente_\" + index_dia}\n                      style={{ fontSize: 9 }}\n                    >\n                      {turno.paciente.dni} {turno.paciente.nombre}{\" \"}\n                      {turno.paciente.apellido}{\" \"}\n                      <span style={{ fontSize: 8 }}>\n                        ({turno.tipoServicio.nombre})\n                      </span>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 10,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"85vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Especialidad\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n        } else {\n          enqueueSnackbar(\"Error al guardar la Especialidad\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Prestadora\", {\n            variant: \"success\",\n          });\n          dispatch(getPrestadoras());\n          nuevaPrestadora();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Prestadora\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarHorario}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deletePrestadora(prestadora)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== \"\" && cdTipoServicio !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaTipoServicios());\n          nuevoTipoServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { BUSCAR_TURNOS, BUSCAR_PACIENTE, BUSCAR_PROFESIONAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function buscarTurnosPaciente(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/paciente/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function buscarTurnosProfesinal(dni, activos) {\n  return (dispatch) => {\n    if (dni === 0) {\n      dispatch({\n        type: BUSCAR_TURNOS,\n        payload: [],\n      });\n    } else {\n      fetch(url_servidor + \"turnos/profesional/\" + dni + \"/\" + activos, {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .then((data) =>\n          dispatch({\n            type: BUSCAR_TURNOS,\n            payload: data,\n          })\n        );\n    }\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setBuscarProfesional,\n  buscarTurnosProfesinal,\n} from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal(buscarInfo.profesional, buscarInfo.actuales)\n      );\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.profesional]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  buscarTurnosPaciente,\n  setBuscarPaciente,\n} from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarActivos = useSelector((state) => state.buscarTurnos.actuales);\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarActivos === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarActivos === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaTurnos() {\n  const listaTurnos = useSelector((state) => state.buscarTurnos.turnos);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return listaTurnos.map((turno) => {\n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              Ver en Agenda\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return listaTurnos && listaTurnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaTurnos ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(buscarTurnosProfesinal(0, 1));\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n\n    paddingTop: 0,\n    height: \"100vh\",\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: {\n            cdPlan: cdPlan,\n            cdServicio: cdServicio,\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          servicio: { cd_servicio: cdServicio, nombre: \"\" },\n          plan: { cd_plan: cdPlan, nombre: \"\" },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          nuevoCostoServicio();\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.plan) setCdPlan(costoServicio.plan.cd_plan);\n    if (costoServicio.id)\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n    if (costoServicio.servicio)\n      setCdServicio(costoServicio.servicio.cd_servicio);\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPlan}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Confirmar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.cdServicio,\n                costoServicio.id.cdPlan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setProfesional(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n  disabled,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        disabled={disabled ? disabled : false}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option.value}-${index}`} value={option.value}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport FormSelect from \"../../FormSelect\";\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  const especialidadesOptions = listaEspecialidades\n    ? listaEspecialidades.map((e) => {\n        return { name: e.nombre, value: e.cd_especialidad };\n      })\n    : [];\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e.target.value });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objProfesional),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Profesional\", {\n            variant: \"success\",\n          });\n          dispatch(getListaProfesionales());\n          nuevoProfesional();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Profesional\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoProfesional = () => {\n    dispatch(setProfesional({}));\n    setProfesionalForm(defaultState);\n    setEspecialidad(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={profesional.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"especialidad\"\n            label=\"Especialidad\"\n            options={especialidadesOptions}\n            value={(especialidad && especialidad.cd_especialidad) || \"\"}\n            handleChange={handleEspecialidad}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={9} className={classes.lista}>\n        <ProfesionalTable />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={4}\n        lg={3}\n        style={{ width: \"100%\" }}\n        className={classes.borderForm}\n      >\n        <ProfesionalForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { buscarTurnosPaciente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setPaciente(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport FormSelect from \"components/Logged/FormSelect\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const planesOptions = listaPlanes\n    ? listaPlanes.map((e) => {\n        return { name: e.obraSocial.nombre + \" \" + e.nombre, value: e.cd_plan };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e.target.value });\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Paciente\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPacientes());\n          nuevoPaciente();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Paciente\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoPaciente = () => {\n    dispatch(setPaciente({}));\n    setPacienteForm(defaultState);\n    setPlan(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={paciente.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"plan\"\n            label=\"Plan\"\n            options={planesOptions}\n            value={(plan && plan.cd_plan) || \"\"}\n            handleChange={handlePlan}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPaciente}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={9} lg={9} className={classes.lista}>\n        <PacienteTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={3} lg={3} className={classes.borderForm}>\n        <PacienteForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setModalHistoriaClinica(open) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_HISTORIA_CLINICA,\n      payload: open,\n    });\n  };\n}\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getListaHistoriaClinica(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/dni/${dni}`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaHistoriaClinica() {\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaHistoriaClinica(paciente));\n  }, [dispatch, paciente]);\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n            >\n              Editar\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item md={9} sm={6} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootSeleccionado: {\n    minWidth: 275,\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport FormSelect from \"../../FormSelect\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  const pacientesOptions = listaPacientes\n    ? listaPacientes.map((p) => {\n        return { name: `${p.nombre} ${p.apellido} - ${p.dni}`, value: p.dni };\n      })\n    : [];\n\n  const profesionalesOptions = listaProfesionales\n    ? listaProfesionales.map((p) => {\n        return { name: `${p.nombre} ${p.apellido}`, value: p.dni };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (e) => {\n    setProfesional({ dni: e.target.value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objHistoriaClinica),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n            variant: \"success\",\n          });\n          dispatch(getListaHistoriaClinica(paciente));\n          nuevaHistoriaClinica();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <FormSelect\n            name=\"paciente\"\n            label=\"Paciente\"\n            options={pacientesOptions}\n            disabled={true}\n            value={paciente}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <FormSelect\n            name=\"profesional\"\n            label=\"Profesional\"\n            options={profesionalesOptions}\n            value={(profesional && profesional.dni) || \"\"}\n            handleChange={handleProfesional}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarHistoriaClinica}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10 },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../../BuscarTurno/TablaPacientes\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.historiaClinica.open_modal);\n  useEffect(() => {\n    dispatch(getListaHistoriaClinica());\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0));\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"100%\" }}>\n        <Grid item xs={12} style={{ height: \"100vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"100vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={{ backgroundColor: \"#fff\", margin: 20, height: \"50vh\" }}>\n          {\" \"}\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\n\nimport Profesional from \"./FormsABM/Profesional/Profesional\";\nimport Paciente from \"./FormsABM/Paciente/Paciente\";\nimport HistoriaClinica from \"./FormsABM/HistoriaClinica/HistoriaClinica\";\n\nexport default function PrimaryContainer() {\n  const menuSelected = useSelector((state) => state.globalReducer);\n\n  const switchMenu = () => {\n    switch (menuSelected.menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return <div>{switchMenu()}</div>;\n}\n","import React from \"react\";\nimport LeftMenu from \"./LeftMenu\";\nimport PrimaryContainer from \"./PrimaryContainer\";\n\nexport default function Logged() {\n  return (\n    <div\n      style={{\n        maxHeight: \"100vh\",\n        overflowY: \"auto\",\n        width: \"100vw\",\n      }}\n    >\n      <LeftMenu></LeftMenu>\n      <div style={{ paddingLeft: 65 }}>\n        <PrimaryContainer></PrimaryContainer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\n\nexport default function MenuSwitch() {\n  const GoToMenu = () => {\n    const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n    if (login === 0) {\n      return <Login></Login>;\n    } else {\n      return <Logged></Logged>;\n    }\n  };\n\n  return GoToMenu();\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n  open_modal: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n    case MODAL_HISTORIA_CLINICA:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}