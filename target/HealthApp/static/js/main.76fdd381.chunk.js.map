{"version":3,"sources":["imagenes/fondo.png","actions/types.js","Utils/constants.js","actions/PrestadoraActions.js","actions/LoginActions.js","components/Logged/Menu/MenuFunctions.js","Utils/functions.js","components/Login/LeftSideLogin.jsx","components/Login/LoginFunctions.js","components/Login/Login.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","components/Logged/Agenda/editAgendaFunctions.js","actions/AgendaActions.js","components/Logged/Agenda/grabarTurnoLogica.js","actions/ProfesionalActions.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/TurnoAgenda.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","actions/EstadosTurnoActions.js","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/HeaderListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","actions/UsuariosActions.js","components/Logged/FormsABM/Usuarios/UsuariosForm.jsx","components/Logged/FormsABM/Usuarios/UsuariosTable.jsx","actions/PerfilActions.js","components/Logged/FormsABM/Usuarios/Usuarios.jsx","actions/ModalActions.js","components/Logged/Profesional/ProfesionalTable.jsx","components/Logged/Profesional/ProfesionalForm.jsx","components/Logged/Profesional/Profesional.jsx","components/Logged/Paciente/PacienteTable.jsx","components/Logged/Paciente/PacienteForm.jsx","components/Logged/Paciente/Paciente.jsx","components/Logged/FormsABM/Perfil/PerfilForm.jsx","components/Logged/FormsABM/Perfil/PerfilTable.jsx","components/Logged/FormsABM/Perfil/Perfil.jsx","actions/HistoriaClinicaActions.js","components/Logged/HistoriaClinica/HeaderListaHistoriaClinica.jsx","components/Logged/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Menu/BigMenu/InformacionEmpresaMenu.jsx","components/Logged/Menu/BigMenu/AgendaMenu.jsx","components/Logged/Menu/BigMenu/ContainerBigMenu.jsx","components/Logged/Menu/BigMenu/BigMenu.jsx","components/Logged/Menu/SmallMenu/AgendaSmallMenu.jsx","components/Logged/Menu/SmallMenu/InformacionEmpresaSmallMenu.jsx","components/Logged/Menu/SmallMenu/ContainerSmallMenu.jsx","components/Logged/Menu/SmallMenu/SmallMenu.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/ErrorMessageReducer.js","reducers/UsuariosReducer.js","reducers/PerfilReducer.js","reducers/EstadosTurnoReducer.js","reducers/ModalReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ERROR_MESSAGE","menuOptions","url_servidor","error_generico","horarios","setPrestadora","prestadora","dispatch","type","payload","getPrestadoras","fetch","method","headers","Authorization","localStorage","getItem","then","response","json","data","catch","message","tipo","setLogin","login","gotoMenu","selected","menu","limpiar","agendaSeleccionada","menuSelected","informacionEmpresaSeleccionada","closeSession","removeItem","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","setLocalStorage","pair","setItem","console","log","calcularTimer","fechaExpiracion","hora_actual","Date","fecha_expiracion","parse","timer","differenceInSeconds","JSON","cd_prestadora","getPrestadora","nombre","LeftSideLogin","enqueueSnackbar","useSnackbar","classes","useStyles","useDispatch","useState","password","setPassword","usuario","setUsuario","prestadoras","useSelector","state","listaPrestadoras","selectPrestadora","useEffect","validateLogin","body","stringify","username","res","status","entries","variant","validarLogin","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","form","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","value","onChange","event","prestadoraSeleccionada","find","changePrestadora","target","map","MenuItem","key","name","TextField","margin","required","Button","color","submit","onClick","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","setDoctor","setHorario","EditAgendaHeader","profesional_seleccionado","agenda_reducer","headerGrid","lg","headerSpan","borderBottom","paddingBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","opcionRepetir","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","programar","optionsProfesional","listaProfesionales","options","profesional","push","dni","apellido","especialidad","optionsPaciente","listaPacientes","paciente","optionsServicios","listaServicios","servicio","cd_servicio","optionsTipoServicios","listaTipoServicios","tipoServicio","cdTipoServicio","optionsEstadosTurno","listaEstadosTurno","estadoTurno","cdEstado","dsEstado","optionsHorarios","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","getTurnos","grabarTurno","turnoInfo","fechaCalendario","token","cdTurno","hora","horario","doctor","notas","nota","dsEstasdo","colorHexa","sendTurno","setProfesional","getListaProfesionales","EditAgendaItem","turno_info","editTurnoReducer","fecha_agenda","estadosTurno","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","filter","option","isDisabled","noValidate","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","title","toLocaleString","timeZone","buttons","eliminarTurno","undefined","validarCamposTurno","borderTop","maxWidth","minWidth","base","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","icon","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","cursor","userSelect","TurnoAgenda","handleClick","e","Chip","clickable","background","chipTurnos","editTurno","menuContainer","estado","itemMenu","borderLeft","boxShadow","turnos","gridHorarios","labelHorario","containerTurnosGrid","ItemsAgendaContainer","overflowY","getEstadosTurno","Agenda","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","nuevaObraSocial","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","Error","error","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","button","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","minDeviceWidth","AgendaMensualDias","gotoDiaCalendario","numero_dia","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","especialidadesPaciente","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","nuevaEspecialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","nuevaPrestadora","PrestadoraTable","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","getPacientes","filterBuscar","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","setTimeout","clearTimeout","subHeaderComponentMemo","useMemo","onClear","columns","cell","row","sortable","selector","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","tabSeleccionada","setValue","estadoRecepcionado","estadoAsignado","estadoAtendido","estadoCancelado","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","buscarTurno","armarListaTurnos","Card","cd_turno","CardContent","textTransform","gutterBottom","pos","CardActions","marginLeft","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","HeaderListaTurnos","setEstadoRecepcionado","setEstadoAsignado","setEstadoAtendido","setEstadoCancelado","estados","getColorEstadoTurno","gridItems","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","getListaUsuarios","defaultState","cd_usuario","idUsuario","email","PacienteForm","perfil","setPerfil","usuarioSeleccionado","usuarios","listaPerfiles","useReducer","newState","setUsuarioForm","handleInputChange","nuevoUsuario","keys","cdPerfil","dsPerfil","objPlan","TablaUsuarios","listaUsuarios","deleteUsuario","TagPerfil","getListaPerfil","Usuarios","setModal","profesionalSeleccionado","deleteProfesional","sexo","seguroMalaPraxis","cuit","registroNacPrestadores","optionsSexo","ProfesionalForm","setProfesionalForm","optionsEspecialidad","listaEspecialidad","optionsSelectSexo","gridInputs","objProfesional","Profesional","open_modal","modalReducer","Modal","onClose","aria-labelledby","aria-describedby","pacienteSeleccionado","deletePaciente","selectPaciente","fecha_nacimiento","nroAfiliado","setPacienteForm","optionsPlan","Paciente","PerfilForm","nombrePerfil","setNombrePerfil","setCdPerfil","nuevoPerfil","PerfilTable","deletePerfil","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","HeaderListaHistoriaClinica","especialidadSeleccionada","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","deleteHistoriaClinica","id_historia_clinica","callBack","especialidadPaciente","armarListaHistoriaClinica","historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","nuevaHistoriaClinica","handleProfesional","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","PrimaryContainer","globalReducer","errorMessage","switchMenu","InformacionEmpresaMenu","faBook","textMenu","subMenuContainer","subMenuOptions","subMenuSelected","borderTopLeftRadius","position","left","top","AgendaMenu","faCalendarAlt","ContainerBigMenu","openAgenda","setOpenAgenda","openInformacionEmpresa","setOpenInformacionEmpresa","mainContainer","gridItemMenu","gridSelected","onMouseLeave","onMouseOver","faSearch","faUserMd","faUser","faFileMedical","faFileAlt","faSignOutAlt","justifyContent","borderBottomLeftRadius","BigMenu","containerBar","infoEmpresa","containerPrimary","float","selectedSubMenu","textSubMenu","InformacionEmpresaSmallMenu","ContainerSmallMenu","SmallMenu","gridHeader","faBars","Logged","refreshToken","refreshRefreshToken","maxDeviceWidth","MenuSwitch","login_state","stored_token","isAlive","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","maxSnack","timeOut","newestOnTop","preventDuplicates","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76fdd381.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\nexport const SET_USUARIO = \"SET_USUARIO\";\r\nexport const SET_LISTA_USUARIOS = \"SET_LISTA_USUARIOS\";\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const SET_MODAL = \"SET_MODAL\";\r\nexport const ERROR_MESSAGE = \"ERROR_MESSAGE\";\r\n\r\nexport const SET_LISTA_PERFIL = \"SET_LISTA_PERFIL\";\r\nexport const SET_PERFIL = \"SET_PERFIL\";\r\n\r\nexport const CLEAN_BUSCAR_TURNOS = \"CLEAN_BUSCAR_TURNOS\";\r\nexport const SET_LISTA_ESTADOS_TURNO = \"SET_LISTA_ESTADOS_TURNO\";\r\nexport const EDIT_ESTADO_TURNO = \"EDIT_ESTADO_TURNO\";\r\nexport const SET_ESTADOS_TURNO = \"SET_ESTADOS_TURNO\";\r\n","export const menuOptions = {\n  MENU: \"Menú\",\n  INFORMACION_EMPRESA: \"Información\",\n  AGENDA: \"Agenda\",\n  OBRAS_SOCIALES: \"Obras Sociales\",\n  PROFESIONALES: \"Profesionales \",\n  PACIENTES: \"Pacientes\",\n  ESPECIALIDADES: \"Especialidades\",\n  Agenda_DIARIA: \"Agenda Diaria\",\n  Agenda_MENSUAL: \"Agenda Mensual\",\n  Agenda_SEMANAL: \"Agenda Semanal\",\n  PLAN: \"Plan\",\n  PRESTADORA: \"Prestadora\",\n  SERVICIOS: \"Servicios\",\n  TIPO_SERVICIO: \"Tipo de Servicios\",\n  COSTO_SERVICIO: \"Costo del Servicio\",\n  HISTORIA_CLINICA: \"Historia Clínica\",\n  BUSCAR_TURNO: \"Buscar Turno\",\n  CERRAR_SESION: \"Cerrar Sesión\",\n  USUARIOS: \"Usuarios\",\n  PERFIL: \"Perfiles\",\n  REPORTES: \"Reportes\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\n\nexport const error_generico = \"Error interno en el servidor\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la prestadora\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la prestadora\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","import { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport { setLogin } from \"actions/LoginActions\";\n\nexport const gotoMenu = (selected, dispatch) => {\n  dispatch({\n    type: SWITCH_MENU,\n    payload: { menu: selected, limpiar: true },\n  });\n};\nexport const agendaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.AGENDA:\n      return true;\n\n    case menuOptions.Agenda_DIARIA:\n      return true;\n\n    case menuOptions.Agenda_MENSUAL:\n      return true;\n\n    case menuOptions.Agenda_SEMANAL:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const informacionEmpresaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.INFORMACION_EMPRESA:\n      return true;\n    case menuOptions.ESPECIALIDADES:\n      return true;\n\n    case menuOptions.OBRAS_SOCIALES:\n      return true;\n\n    case menuOptions.PLAN:\n      return true;\n\n    case menuOptions.SERVICIOS:\n      return true;\n\n    case menuOptions.TIPO_SERVICIO:\n      return true;\n\n    case menuOptions.PRESTADORA:\n      return true;\n\n    case menuOptions.COSTO_SERVICIO:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const closeSession = (dispatch) => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"usuario\");\n  localStorage.removeItem(\"expiration-time\");\n  localStorage.removeItem(\"refresh-expiration-time\");\n  localStorage.removeItem(\"refresh-token\");\n  localStorage.removeItem(\"prestadora\");\n\n  dispatch(setLogin(0));\n};\n","import { url_servidor, error_generico } from \"Utils/constants\";\nimport { parse, differenceInSeconds } from \"date-fns\";\nimport { setLogin } from \"actions/LoginActions\";\nimport { closeSession } from \"components/Logged/Menu/MenuFunctions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\n\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\nexport const refreshToken = (dispatch) => {\n  setTimeout(() => {\n    if (\n      localStorage.getItem(\"token\") !== undefined &&\n      localStorage.getItem(\"refresh-token\") !== undefined\n    ) {\n      fetch(`${url_servidor}refreshToken/${localStorage.getItem(\"usuario\")}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n          \"Refresh-Token\": localStorage.getItem(\"refresh-token\"),\n        },\n      })\n        .then(function (res) {\n          if (res.status === 200) {\n            setLocalStorage(res.headers.entries());\n            refreshToken(dispatch);\n          } else {\n            closeSession(dispatch);\n          }\n        })\n        .catch((error) => {\n          closeSession(dispatch);\n        });\n    }\n  }, calcularTimer(localStorage.getItem(\"expiration-time\")));\n};\nexport const refreshRefreshToken = (dispatch) => {\n  setTimeout(() => {\n    if (\n      localStorage.getItem(\"token\") !== undefined &&\n      localStorage.getItem(\"refresh-token\") !== undefined\n    ) {\n      fetch(\n        `${url_servidor}refreshRefreshToken/${localStorage.getItem(\"usuario\")}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n            \"Refresh-Token\": localStorage.getItem(\"refresh-token\"),\n          },\n        }\n      )\n        .then(function (res) {\n          if (res.status === 200) {\n            setLocalStorage(res.headers.entries());\n            refreshRefreshToken(dispatch);\n          } else {\n            closeSession(dispatch);\n          }\n        })\n        .catch((error) => {\n          closeSession(dispatch);\n        });\n    }\n  }, calcularTimer(localStorage.getItem(\"refresh-expiration-time\")));\n};\n\nexport const setLocalStorage = (headers) => {\n  for (var pair of headers) {\n    switch (pair[0]) {\n      case \"access-token\": //Token para consultas\n        localStorage.setItem(\"token\", pair[1]);\n        break;\n      case \"expiration-time\": //Expiration del token consultas\n        localStorage.setItem(\"expiration-time\", pair[1]);\n        break;\n      case \"refresh-token\": //Token para refrezcar\n        localStorage.setItem(\"refresh-token\", pair[1]);\n        break;\n      case \"refresh-expiration-time\":\n        localStorage.setItem(\"refresh-expiration-time\", pair[1]);\n        break;\n\n      default:\n        console.log(\"Header Not Needed\");\n    }\n  }\n};\n\nexport const calcularTimer = (fechaExpiracion) => {\n  const hora_actual = new Date();\n\n  const fecha_expiracion = parse(\n    fechaExpiracion,\n    \"dd/MM/yyyy HH:mm:ss\",\n    new Date()\n  );\n\n  let timer = differenceInSeconds(fecha_expiracion, hora_actual);\n\n  if (timer * 1000 - 60000 > 70000) {\n    //Dejo 10 segundos de espacio entre que se ejecuta y el tiempo en el que se venceria el token\n    //Si el timer queda configurado para ejecutarse 1 minuto antes de vencerse, acepto\n    return timer * 1000 - 60000;\n  } else {\n    // Si me queda menos de 1 minutos, lo ejecuto en ese momento\n    return 10;\n  }\n};\n\nexport const isAlive = (dispatch, login) => {\n  fetch(url_servidor + \"tokenALive\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  })\n    .then(function (res) {\n      if (res.status === 200) {\n        if (login === 0) dispatch(setLogin(1));\n      } else {\n        closeSession(dispatch);\n      }\n    })\n    .catch(() => {\n      dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: error_generico,\n          tipo: \"error\",\n        },\n      });\n    });\n};\nexport const prestadora = () => {\n  let prestadora = 0;\n\n  if (localStorage.getItem(\"prestadora\") !== null) {\n    prestadora = JSON.parse(localStorage.getItem(\"prestadora\")).cd_prestadora;\n  }\n\n  return prestadora;\n};\nexport const getPrestadora = () => {\n  const prestadora = JSON.parse(localStorage.getItem(\"prestadora\"));\n\n  return prestadora.nombre;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport { validarLogin } from \"components/Login/LoginFunctions\";\n\nexport default function LeftSideLogin() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"Gunsandrose\");\n  const [usuario, setUsuario] = useState(\"gonzalo\");\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n  const [prestadora, selectPrestadora] = useState(0);\n\n  const gotoLogin = () => {\n    validateLogin();\n  };\n\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  const validateLogin = () => {\n    if (password !== \"\" && usuario !== \"\" && prestadora.cd_prestadora > 0) {\n      validarLogin(usuario, password, prestadora, dispatch, enqueueSnackbar);\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco.\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const changePrestadora = (cd_prestadora) => {\n    const prestadoraSeleccionada = prestadoras.find((prestadora) => {\n      return prestadora.cd_prestadora === cd_prestadora;\n    });\n\n    selectPrestadora(prestadoraSeleccionada);\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <div className={classes.form}>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            label=\"Institución\"\n            fullWidth\n            value={prestadora.cd_prestadora}\n            onChange={(event) => changePrestadora(event.target.value)}\n          >\n            {prestadoras.map((prestadora) => {\n              return (\n                <MenuItem\n                  key={prestadora.cd_prestadora}\n                  name={prestadora.nombre}\n                  value={prestadora.cd_prestadora}\n                >\n                  {prestadora.nombre}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n          value={usuario}\n          onChange={(event) => setUsuario(event.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { setLogin } from \"../../actions/LoginActions\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { setLocalStorage } from \"Utils/functions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\n\nexport const validarLogin = (\n  usuario,\n  password,\n  prestadora,\n  dispatch,\n  enqueueSnackbar\n) => {\n  fetch(url_servidor + \"login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: usuario,\n      password: password,\n    }),\n  })\n    .then(function (res) {\n      if (res.status === 200) {\n        localStorage.setItem(\"usuario\", usuario);\n        localStorage.setItem(\"prestadora\", JSON.stringify(prestadora));\n\n        setLocalStorage(res.headers.entries());\n        dispatch(setLogin(1)); //Voy a marcar el login\n      } else {\n        enqueueSnackbar(\"Usuario o contraseña incorrectos.\", {\n          variant: \"error\",\n        });\n      }\n    })\n    .catch(() => {\n      dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: error_generico,\n          tipo: \"error\",\n        },\n      });\n    });\n};\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n  EDIT_ESTADO_TURNO,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\nexport function setEstadoTurno(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ESTADO_TURNO,\n      payload: data,\n    });\n  };\n}\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault, setDoctor } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n    dispatch(setDoctor(profesional_seleccionado));\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    paddingBottom: 17,\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","export const optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nexport const optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nexport const optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nexport const optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nexport const optionsEstadosTurno = (listaEstadosTurno) => {\n  const options = [];\n\n  listaEstadosTurno.map((estadoTurno) => {\n    return options.push({\n      value: estadoTurno.cdEstado,\n      label: estadoTurno.dsEstado,\n    });\n  });\n  return options;\n};\nexport const optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nexport const validarCamposTurno = (turno_info) => {\n  if (\n    turno_info.paciente !== undefined &&\n    turno_info.paciente !== \"\" &&\n    turno_info.doctor !== undefined &&\n    turno_info.doctor !== \"\" &&\n    turno_info.horario !== undefined &&\n    turno_info.horario !== \"\" &&\n    turno_info.servicio !== undefined &&\n    turno_info.servicio !== \"\" &&\n    turno_info.tipoServicio !== undefined &&\n    turno_info.tipoServicio !== \"\"\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const setFechaEsp = (fecha, hora) => {\n  fecha = fecha + \" \" + hora;\n  return new Date(fecha).toLocaleString(\"es-ES\", {\n    timeZone: \"America/Argentina/Buenos_Aires\",\n  });\n};\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status === 200 && callback) {\n          cleanProgramar();\n          cleanEditTurno();\n          callback();\n\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: { message: \"Se eliminó el turno\", tipo: \"success\" },\n          });\n        }\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + prestadora() + \"/horarios\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor + \"turnos/\" + prestadora() + \"/\" + profesional + \"/\" + fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import { url_servidor, error_generico } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      prestadora: JSON.parse(localStorage.getItem(\"prestadora\")),\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      estadoTurno: {\n        cdEstado: data.turnoInfo.estadoTurno,\n        dsEstasdo: \"\",\n        colorHexa: \"\",\n      },\n      programarAgenda: data.programarAgenda,\n    }),\n  })\n    .then(function (response) {\n      if (response.status === 200) {\n        data.dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se guardó el turno\",\n            tipo: \"success\",\n          },\n        });\n\n        data.dispatch(\n          getTurnos(data.fechaCalendario, data.profesional_seleccionado)\n        );\n        data.dispatch(cleanProgramar());\n        data.dispatch(setDefault());\n        data.dispatch(setDoctor(data.profesional_seleccionado));\n      } else {\n        data.dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Error al guardar el turno\",\n            tipo: \"error\",\n          },\n        });\n      }\n    })\n    .catch(() => {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: error_generico,\n          tipo: \"error\",\n        },\n      });\n    });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda,\n  token\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n    token: token,\n  };\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el profesional\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el profesional\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\nimport {\n  optionsTipoServicios,\n  optionsEstadosTurno,\n  optionsHorarios,\n  optionsProfesional,\n  optionsPaciente,\n  optionsServicios,\n  validarCamposTurno,\n  setFechaEsp,\n} from \"./editAgendaFunctions\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n  setEstadoTurno,\n  setFecha,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\nimport { setProfesional } from \"actions/ProfesionalActions\";\n\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaEstadosTurno = useSelector(\n    (state) => state.estadosTurno.listaEstadosTurno\n  );\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  /*useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);*/\n\n  useEffect(() => {\n    dispatch(setFecha(fechaCalendario));\n  }, [dispatch, fechaCalendario]);\n\n  useEffect(() => {\n    dispatch(setProfesional(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (validarCamposTurno(turno_info)) {\n        grabarTurno(\n          turno_info,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      } else {\n        enqueueSnackbar(\"No puede dejar campos vacíos.\", {\n          variant: \"warning\",\n        });\n      }\n    } else {\n      enqueueSnackbar(\"Debe seleccionar una fecha mayor a hoy.\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Select\n        options={optionsEstadosTurno(listaEstadosTurno)}\n        isSearchable={true}\n        placeholder={<div>Estado del Turno</div>}\n        isDisabled={turno_info.cdTurno === 0}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setEstadoTurno(value.value))}\n        value={optionsEstadosTurno(listaEstadosTurno).filter(\n          (option) => option.value === turno_info.estadoTurno\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={\n              turno_info.cdTurno > 0 &&\n              fechaString(fechaCalendario) >= fechaString(new Date())\n                ? false\n                : true\n            }\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PACIENTE, SET_LISTA_PACIENTE, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el paciente\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el paciente\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import {\n  SET_TIPO_SERVICIO,\n  SET_LISTA_TIPO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el tipo de servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el tipo de servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n      setOpen(false);\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { editTurnoComplete } from \"../../../actions/EditTurnoActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar } from \"notistack\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { fechaString } from \"Utils/functions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport { getTurnos } from \"actions/AgendaActions\";\n\nexport default function TurnoAgenda(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const listaEstadosTurno = useSelector(\n    (state) => state.estadosTurno.listaEstadosTurno\n  );\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  const editTurno = () => {\n    let turno = props.turno;\n    dispatch(editTurnoComplete(turno));\n  };\n\n  const handleClick = (e, data) => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      fetch(\n        url_servidor +\n          \"turnos/cambiarEstado/\" +\n          props.turno.cdTurno +\n          \"/\" +\n          data.cdEstado,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n          },\n        }\n      )\n        .then((response) => {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el turno.\", {\n              variant: \"success\",\n            });\n\n            dispatch(\n              getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n            );\n          } else {\n            enqueueSnackbar(\"Error al cambiar el estado del turno.\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede modificar un turno que ya pasó.\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: \"inline-block\", zIndex: 100 }}>\n      <ContextMenuTrigger id={props.turno.cdTurno}>\n        <Chip\n          clickable={true}\n          key={props.index}\n          style={{ background: props.turno.estadoTurno.colorHexa }}\n          className={classes.chipTurnos}\n          onClick={() => editTurno()}\n          label={\n            props.turno.paciente.dni +\n            \" - \" +\n            props.turno.paciente.nombre +\n            \" \" +\n            props.turno.paciente.apellido +\n            \" (\" +\n            props.turno.tipoServicio.nombre +\n            \")\"\n          }\n        ></Chip>\n      </ContextMenuTrigger>\n      <ContextMenu id={props.turno.cdTurno} className={classes.menuContainer}>\n        {listaEstadosTurno.map((estado) => {\n          return (\n            <MenuItem\n              data={{ cdEstado: estado.cdEstado }}\n              className={classes.itemMenu}\n              onClick={handleClick}\n            >\n              <span\n                style={{\n                  width: 10,\n                  height: 10,\n                  borderRadius: \"50%\",\n                  display: \"inline-block\",\n                  marginRight: 10,\n                  background: `${estado.colorHexa}`,\n                }}\n              ></span>\n              <span style={{ borderLeft: \"1px solid #ddd\", paddingLeft: 5 }}>\n                Turno {estado.dsEstado}\n              </span>\n            </MenuItem>\n          );\n        })}\n      </ContextMenu>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    color: \"#fff\",\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      color: \"#fff\",\n      border: \"1px solid #eee\",\n    },\n  },\n  menuContainer: {\n    background: \"#fff\",\n    color: \"#111\",\n    borderRadius: 5,\n    zIndex: 100,\n  },\n  itemMenu: {\n    padding: 10,\n    borderRadius: 5,\n    \"&:hover\": {\n      background: \"#eee\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setHorario } from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TurnoAgenda from \"./TurnoAgenda\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <TurnoAgenda index={index} turno={turno}></TurnoAgenda>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    color: \"#fff\",\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      color: \"#fff\",\n      border: \"1px solid #eee\",\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"84vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import { SET_LISTA_ESTADOS_TURNO, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function getEstadosTurno() {\n  return (dispatch) => {\n    fetch(url_servidor + \"estadosTurno\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESTADOS_TURNO,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\nimport { getEstadosTurno } from \"actions/EstadosTurnoActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getEstadosTurno());\n    dispatch(setDoctor(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import {\n  SET_OBRA_SOCIAL,\n  SET_LISTA_OBRA_SOCIAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la obra social\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la obra social\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== undefined && nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó la Obra Social\", {\n              variant: \"success\",\n            });\n            dispatch(getListaObrasSocial());\n            nuevaObraSocial();\n          } else {\n            enqueueSnackbar(\"Error al guardar la Obra Social\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el plan\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el plan\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== undefined && nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Plan\", {\n              variant: \"success\",\n            });\n            dispatch(getListaPlanes());\n            nuevoPlan();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Plan\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPlan}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (\n      nombre !== undefined &&\n      nombre !== \"\" &&\n      cdServicio !== undefined &&\n      cdServicio !== \"\"\n    ) {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Servicio\", {\n              variant: \"success\",\n            });\n            dispatch(getListaServicios());\n            nuevServicio();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Servicio\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(\"\");\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteServicio(servicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"13.5vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"11vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/mes/\" +\n        prestadora() +\n        \"/\" +\n        profesional +\n        \"/\" +\n        fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/semana/\" +\n        prestadora() +\n        \"/\" +\n        profesional +\n        \"/\" +\n        fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    borderBottom: \"none\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"81vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      borderBottom: \"none\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"81vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  SET_ESPECIALIDAD,\n  SET_LISTA_ESPECIALIDAD,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function especialidadesPaciente(dni) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/paciente/\" + dni, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad, token) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la especialidad\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó la especialidad\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== undefined && nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó la Especialidad\", {\n              variant: \"success\",\n            });\n            dispatch(getListaEspecialidad());\n            nuevaEspecialidad();\n          } else {\n            enqueueSnackbar(\"Error al guardar la Especialidad\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó la Prestadora\", {\n              variant: \"success\",\n            });\n            dispatch(getPrestadoras());\n            nuevaPrestadora();\n          } else {\n            enqueueSnackbar(\"Error al guardar la Prestadora\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                type=\"number\"\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            type=\"number\"\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarHorario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deletePrestadora(prestadora)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== undefined && nombre !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n              variant: \"success\",\n            });\n            dispatch(getListaTipoServicios());\n            nuevoTipoServicio();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PACIENTE,\n  BUSCAR_PROFESIONAL,\n  CLEAN_BUSCAR_TURNOS,\n  ERROR_MESSAGE,\n  SET_ESTADOS_TURNO,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function getPacientes(filterBuscar) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/paciente/\" + prestadora(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify(filterBuscar),\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function cleanTurnos() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_BUSCAR_TURNOS,\n    });\n  };\n}\nexport function setEstadosTurno(estados) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESTADOS_TURNO,\n      payload: estados,\n    });\n  };\n}\n\nexport function buscarTurnosProfesinal(filterBuscar) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/profesional/\" + prestadora(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify(filterBuscar),\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { setBuscarProfesional } from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\nimport {\n  buscarTurnosProfesinal,\n  getPacientes,\n  cleanTurnos,\n} from \"actions/BuscarTurnosActions\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(cleanTurnos());\n  };\n\n  useEffect(() => {\n    if (tabSeleccionada === 0 && buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal({\n          dni: buscarInfo.profesional,\n          actuales: buscarInfo.actuales,\n          estadoRecepcionado: buscarInfo.estadoRecepcionado,\n          estadoAsignado: buscarInfo.estadoAsignado,\n          estadoAtendido: buscarInfo.estadoAtendido,\n          estadoCancelado: buscarInfo.estadoCancelado,\n        })\n      );\n    } else if (buscarInfo.paciente !== 0) {\n      dispatch(\n        getPacientes({\n          dni: buscarInfo.paciente,\n          actuales: buscarInfo.actuales,\n          estadoRecepcionado: buscarInfo.estadoRecepcionado,\n          estadoAsignado: buscarInfo.estadoAsignado,\n          estadoAtendido: buscarInfo.estadoAtendido,\n          estadoCancelado: buscarInfo.estadoCancelado,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    buscarInfo.actuales,\n    buscarInfo.profesional,\n    buscarInfo.estadoAsignado,\n    buscarInfo.estadoAtendido,\n    buscarInfo.estadoCancelado,\n    buscarInfo.estadoRecepcionado,\n    tabSeleccionada,\n    buscarInfo.paciente,\n  ]);\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarInfo.actuales === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarInfo.actuales === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\nexport default function ListaTurnos() {\n  const buscarTurno = useSelector((state) => state.buscarTurnos);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return buscarTurno.turnos.map((turno) => {\n      return (\n        <Card className={classes.root} key={turno.cd_turno}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas} {turno.estadoTurno.dsEstado}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              <FontAwesomeIcon icon={faEye} />\n            </Button>\n          </CardActions>\n          <div\n            style={{\n              height: 5,\n              borderRadius: 5,\n              background: turno.estadoTurno.colorHexa,\n              marginBottom: 4,\n              marginLeft: 5,\n              marginRight: 5,\n            }}\n          ></div>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (buscarTurno.estadoRecepcionado ||\n      buscarTurno.estadoAsignado ||\n      buscarTurno.estadoAtendido ||\n      buscarTurno.estadoCancelado) &&\n      buscarTurno.turnos &&\n      buscarTurno.turnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {buscarTurno ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { setEstadosTurno } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function HeaderListaTurnos() {\n  const classes = useStyles();\n  const [estadoRecepcionado, setEstadoRecepcionado] = useState(false);\n  const [estadoAsignado, setEstadoAsignado] = useState(false);\n  const [estadoAtendido, setEstadoAtendido] = useState(false);\n  const [estadoCancelado, setEstadoCancelado] = useState(false);\n  const listaEstadosTurno = useSelector(\n    (state) => state.estadosTurno.listaEstadosTurno\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      setEstadosTurno({\n        estadoRecepcionado: estadoRecepcionado,\n        estadoAsignado: estadoAsignado,\n        estadoAtendido: estadoAtendido,\n        estadoCancelado: estadoCancelado,\n      })\n    );\n  }, [\n    dispatch,\n    estadoRecepcionado,\n    estadoAsignado,\n    estadoAtendido,\n    estadoCancelado,\n  ]);\n  const getColorEstadoTurno = (cdEstado) => {\n    let estadoTurno = listaEstadosTurno.find(\n      (estadoTurno) => estadoTurno.cdEstado === cdEstado\n    );\n\n    return estadoTurno.colorHexa;\n  };\n\n  return listaEstadosTurno.length > 0 ? (\n    <Grid container style={{ height: \"5vh\" }}>\n      <Grid md={3} sm={12} className={classes.gridItems}>\n        <Checkbox\n          checked={estadoAsignado}\n          name=\"checkedB\"\n          onChange={() => setEstadoAsignado(estadoAsignado ? false : true)}\n          color=\"primary\"\n        />\n        <span\n          style={{\n            width: 10,\n            height: 10,\n            borderRadius: \"50%\",\n            display: \"inline-block\",\n            marginRight: 10,\n            background: `${getColorEstadoTurno(1)}`,\n          }}\n        ></span>\n        Asignados\n      </Grid>\n      <Grid md={3} sm={12} className={classes.gridItems}>\n        <Checkbox\n          checked={estadoRecepcionado}\n          name=\"checkedB\"\n          onChange={() =>\n            setEstadoRecepcionado(estadoRecepcionado ? false : true)\n          }\n          color=\"primary\"\n        />\n        <span\n          style={{\n            width: 10,\n            height: 10,\n            borderRadius: \"50%\",\n            display: \"inline-block\",\n            marginRight: 10,\n            background: `${getColorEstadoTurno(2)}`,\n          }}\n        ></span>\n        Recepcionados\n      </Grid>\n      <Grid md={3} sm={12} className={classes.gridItems}>\n        <Checkbox\n          checked={estadoAtendido}\n          name=\"checkedB\"\n          onChange={() => setEstadoAtendido(estadoAtendido ? false : true)}\n          color=\"primary\"\n        />\n        <span\n          style={{\n            width: 10,\n            height: 10,\n            borderRadius: \"50%\",\n            display: \"inline-block\",\n            marginRight: 10,\n            background: `${getColorEstadoTurno(3)}`,\n          }}\n        ></span>\n        Atendidos\n      </Grid>\n      <Grid md={3} sm={12} className={classes.gridItems}>\n        <Checkbox\n          checked={estadoCancelado}\n          name=\"checkedB\"\n          onChange={() => setEstadoCancelado(estadoCancelado ? false : true)}\n          color=\"primary\"\n        />\n        <span\n          style={{\n            width: 10,\n            height: 10,\n            borderRadius: \"50%\",\n            display: \"inline-block\",\n            marginRight: 10,\n            background: `${getColorEstadoTurno(4)}`,\n          }}\n        ></span>\n        Cancelados\n      </Grid>\n    </Grid>\n  ) : (\n    <></>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridItems: { paddingTop: 5, textAlign: \"center\" },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { cleanTurnos } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport HeaderListaTurnos from \"./HeaderListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nimport { getEstadosTurno } from \"actions/EstadosTurnoActions\";\n\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(cleanTurnos());\n    dispatch(getListaProfesionales());\n    dispatch(getEstadosTurno());\n    dispatch(getListaPacientes());\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <HeaderListaTurnos />\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    borderBottom: \"none\",\n    paddingTop: 0,\n    height: \"94vh\",\n    maxHeight: \"94vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import {\n  SET_COSTO_SERVICIO,\n  SET_LISTA_COSTO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el costo del servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el costo del servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== undefined &&\n      costo > 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          id: {\n            servicio: { cd_servicio: cdServicio, nombre: \"\" },\n            plan: {\n              cd_plan: cdPlan,\n              nombre: \"\",\n            },\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          costo: costo,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se asigno el costo al servicio\", {\n              variant: \"success\",\n            });\n            nuevoCostoServicio();\n            dispatch(getListaCostoServicios());\n          } else {\n            enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.id) {\n      setCdPlan(costoServicio.id.plan.cd_plan);\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n      setCdServicio(costoServicio.id.servicio.cd_servicio);\n    }\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={guardarPlan}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n    paddingRight: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.servicio.cd_servicio,\n                costoServicio.id.plan.cd_plan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.id.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_USUARIO, ERROR_MESSAGE, SET_LISTA_USUARIOS } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setUsuario(usuario) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_USUARIO,\n      payload: usuario,\n    });\n  };\n}\n\nexport function eliminarUsuario(cd_usuario) {\n  return (dispatch) => {\n    fetch(`${url_servidor}usuario/${cd_usuario}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el usuario\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_USUARIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el usuario\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaUsuarios() {\n  return (dispatch) => {\n    fetch(`${url_servidor}usuario`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_USUARIOS,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUsuario, getListaUsuarios } from \"actions/UsuariosActions\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { validateForm } from \"Utils/functions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst defaultState = {\n  cd_usuario: 0,\n  idUsuario: \"\",\n  nombre: \"\",\n  password: \"\",\n  email: \"\",\n};\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [perfil, setPerfil] = useState(0);\n  const usuarioSeleccionado = useSelector((state) => state.usuarios.usuario);\n  const listaPerfiles = useSelector((state) => state.perfil.listaPerfiles);\n\n  const [usuario, setUsuarioForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUsuarioForm({ [name]: value });\n  };\n\n  const nuevoUsuario = () => {\n    dispatch(setUsuario({}));\n    setUsuarioForm(defaultState);\n    setPerfil(0);\n  };\n\n  useEffect(() => {\n    if (Object.keys(usuarioSeleccionado).length !== 0) {\n      setUsuarioForm(usuarioSeleccionado);\n      setPerfil(usuarioSeleccionado.perfil.cdPerfil);\n    }\n  }, [usuarioSeleccionado]);\n\n  const guardarUsuario = () => {\n    const objPlan = { ...usuario, perfil: { cdPerfil: perfil, dsPerfil: \"\" } };\n    if (validateForm(usuario) && perfil > 0) {\n      fetch(`${url_servidor}usuario`, {\n        method: usuario.cd_usuario > 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objPlan),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Usuario\", {\n              variant: \"success\",\n            });\n            dispatch(getListaUsuarios());\n            nuevoUsuario();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Usuario\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Usuario\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoUsuario}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Perfil\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Perfil\"\n              fullWidth\n              value={perfil}\n              onChange={(event) => setPerfil(event.target.value)}\n            >\n              {listaPerfiles &&\n                listaPerfiles.map((perfil) => {\n                  return (\n                    <MenuItem value={perfil.cdPerfil}>\n                      {perfil.dsPerfil}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            type=\"text\"\n            name=\"nombre\"\n            fullWidth\n            value={usuario.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Id Usuario\"\n            name=\"idUsuario\"\n            fullWidth\n            value={usuario.idUsuario}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"password\"\n            margin=\"normal\"\n            label=\"Contraseña\"\n            name=\"password\"\n            fullWidth\n            disabled={usuario.cd_usuario > 0}\n            value={usuario.password}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Email\"\n            name=\"email\"\n            fullWidth\n            value={usuario.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarUsuario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setUsuario, eliminarUsuario } from \"actions/UsuariosActions\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaUsuarios, filterText) => {\n  return listaUsuarios.filter(\n    (usuario) =>\n      usuario.email.toString().includes(filterText.toLowerCase()) ||\n      usuario.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      usuario.idUsuario.toLowerCase().includes(filterText.toLowerCase()) ||\n      usuario.perfil.dsPerfil.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaUsuarios() {\n  const classes = useStyles();\n\n  const listaUsuarios = useSelector((state) => state.usuarios.listaUsuarios);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const usuarioSeleccionado = useSelector((state) => state.usuarios.usuario);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaUsuarios, filterText);\n\n  /* FIN STATES DATATABLE */\n\n  const deleteUsuario = (row) => {\n    confirmAlert({\n      title: \"Usuario:\" + row.idUsuario,\n      message: \"Nombre: \" + row.nombre,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarUsuario(row.cd_usuario)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaUsuarios);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaUsuarios, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"Código Usuario\",\n      sortable: true,\n      selector: \"cd_usuario\",\n    },\n    {\n      name: \"Id Usuario\",\n      sortable: true,\n      selector: \"idUsuario\",\n    },\n\n    {\n      name: \"Nombre\",\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Perfil\",\n      cell: (row) => (\n        <div className={classes.TagPerfil}>{row.perfil.dsPerfil}</div>\n      ),\n      sortable: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setUsuario(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteUsuario(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.cd_usuario === usuarioSeleccionado.cd_usuario,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  TagPerfil: {\n    width: \"100%\",\n    textAlign: \"center\",\n    backgroundColor: \"#1fc51f\",\n    color: \"#fff\",\n    borderRadius: 5,\n    padding: 5,\n    fontWeight: \"bold\",\n  },\n}));\n","import { SET_PERFIL, SET_LISTA_PERFIL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPerfil(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PERFIL,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function eliminarPerfil(cd_especialidad, token) {\n  return (dispatch) => {\n    fetch(url_servidor + \"perfil/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el perfil\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PERFIL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el perfil\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPerfil() {\n  return (dispatch) => {\n    fetch(url_servidor + \"perfil\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PERFIL,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UsuariosForm from \"./UsuariosForm\";\nimport TablaUsuarios from \"./UsuariosTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getListaUsuarios } from \"actions/UsuariosActions\";\nimport { getListaPerfil } from \"actions/PerfilActions\";\n\nexport default function Usuarios() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaUsuarios());\n    dispatch(getListaPerfil());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TablaUsuarios />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <UsuariosForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_MODAL } from \"./types\";\n\nexport function setModal(open) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_MODAL,\n      payload: open,\n    });\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { setModal } from \"actions/ModalActions\";\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n    const nuevoProfesional = () => {\n      dispatch(setProfesional({}));\n      dispatch(setModal(true));\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={8} lg={8} sm={6} xs={6}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n        <Grid item md={4} lg={4} sm={6} xs={6}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo Profesional\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle, dispatch]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const selectProfesional = (row) => {\n    dispatch(setProfesional(row));\n    dispatch(setModal(true));\n  };\n\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => selectProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport { setModal } from \"actions/ModalActions\";\nimport Select from \"react-select\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst optionsSexo = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const optionsEspecialidad = (listaEspecialidad) => {\n    const options = [];\n\n    listaEspecialidad.map((especialidad) => {\n      return options.push({\n        value: especialidad.cd_especialidad,\n        label: especialidad.nombre,\n      });\n    });\n    return options;\n  };\n\n  const optionsSelectSexo = () => {\n    const options = [];\n\n    optionsSexo.map((sexo) => {\n      return options.push({\n        value: sexo.value,\n        label: sexo.name,\n      });\n    });\n    return options;\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleSexoChange = (e) => {\n    setProfesionalForm({ sexo: e.value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objProfesional),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Profesional\", {\n              variant: \"success\",\n            });\n            dispatch(getListaProfesionales());\n            handleClose();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Profesional\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const handleClose = () => {\n    dispatch(setProfesional({}));\n    dispatch(setModal(false));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <Select\n            options={optionsSelectSexo()}\n            isSearchable={true}\n            name=\"sexo\"\n            placeholder={<div>Sexo</div>}\n            styles={colourStyles}\n            onChange={(value) => handleSexoChange(value)}\n            value={\n              profesional.sexo\n                ? optionsSelectSexo().filter(\n                    (option) => option.value === profesional.sexo\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid\n          item\n          lg={6}\n          md={6}\n          sm={6}\n          xs={6}\n          className={classes.gridInputs}\n          style={{ marginTop: \"6px\" }}\n        >\n          <Select\n            options={optionsEspecialidad(listaEspecialidades)}\n            isSearchable={true}\n            placeholder={<div>Especialidad</div>}\n            styles={colourStyles}\n            onChange={(value) => handleEspecialidad(value.value)}\n            value={\n              especialidad\n                ? optionsEspecialidad(listaEspecialidades).filter(\n                    (option) => option.value === especialidad.cd_especialidad\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n\n        <Grid item xs={6} md={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n        <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            onClick={handleClose}\n          >\n            Cerrar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  getListaProfesionales,\n  setProfesional,\n} from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setModal } from \"actions/ModalActions\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.modalReducer.open_modal);\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setProfesional({}));\n    dispatch(setModal(false));\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12} sm={12} md={12} lg={12} className={classes.lista}>\n          <ProfesionalTable />\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <ProfesionalForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { getPacientes } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nimport { setModal } from \"actions/ModalActions\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(getPacientes(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    const nuevoPaciente = () => {\n      dispatch(setPaciente({}));\n      dispatch(setModal(true));\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={8} lg={8} sm={6} xs={6}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n        <Grid item md={4} lg={4} sm={6} xs={6}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo Paciente\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle, dispatch]);\n  /** FIN FILTROS TABLA */\n\n  const selectPaciente = (row) => {\n    dispatch(setPaciente(row));\n    dispatch(setModal(true));\n  };\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => selectPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport Select from \"react-select\";\nimport { setModal } from \"actions/ModalActions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst optionsSexo = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const optionsSelectSexo = () => {\n    const options = [];\n\n    optionsSexo.map((sexo) => {\n      return options.push({\n        value: sexo.value,\n        label: sexo.name,\n      });\n    });\n    return options;\n  };\n\n  const optionsPlan = (listaPlanes) => {\n    const options = [];\n\n    listaPlanes.map((plan) => {\n      return options.push({\n        value: plan.cd_plan,\n        label: plan.obraSocial.nombre.toUpperCase() + \" - \" + plan.nombre,\n      });\n    });\n    return options;\n  };\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n  const handleSexoChange = (e) => {\n    setPacienteForm({ sexo: e.value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e });\n  };\n\n  const handleClose = () => {\n    dispatch(setPaciente({}));\n    dispatch(setModal(false));\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objPlan),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Paciente\", {\n              variant: \"success\",\n            });\n            dispatch(getListaPacientes());\n            handleClose();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Paciente\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <Select\n            options={optionsSelectSexo()}\n            isSearchable={true}\n            name=\"sexo\"\n            placeholder={<div>Sexo</div>}\n            styles={colourStyles}\n            onChange={(value) => handleSexoChange(value)}\n            value={\n              paciente.sexo\n                ? optionsSelectSexo().filter(\n                    (option) => option.value === paciente.sexo\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={6} md={6} sm={6} xs={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPlan(listaPlanes)}\n            isSearchable={true}\n            placeholder={<div>Plan</div>}\n            styles={colourStyles}\n            onChange={(value) => handlePlan(value.value)}\n            value={\n              plan\n                ? optionsPlan(listaPlanes).filter(\n                    (option) => option.value === plan.cd_plan\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n\n        <Grid item xs={6} md={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarPaciente}\n          >\n            Guardar\n          </Button>\n        </Grid>\n        <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            onClick={handleClose}\n          >\n            Cerrar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes, setPaciente } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setModal } from \"actions/ModalActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.modalReducer.open_modal);\n\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setPaciente({}));\n    dispatch(setModal(false));\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12} sm={12} md={12} lg={12} className={classes.lista}>\n          <PacienteTable />\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <PacienteForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPerfil, getListaPerfil } from \"actions/PerfilActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nexport default function PerfilForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePerfil, setNombrePerfil] = useState(\"\");\n  const [cdPerfil, setCdPerfil] = useState(0);\n  const perfil = useSelector((state) => state.perfil.perfil);\n\n  const guardarPerfil = () => {\n    if (nombrePerfil !== undefined && nombrePerfil !== \"\") {\n      fetch(url_servidor + \"perfil\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cdPerfil: cdPerfil,\n          dsPerfil: nombrePerfil,\n        }),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó el Perfil\", {\n              variant: \"success\",\n            });\n            dispatch(getListaPerfil());\n            nuevoPerfil();\n          } else {\n            enqueueSnackbar(\"Error al guardar el Perfil\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (perfil.cdPerfil !== undefined) {\n      setNombrePerfil(perfil.dsPerfil);\n      setCdPerfil(perfil.cdPerfil);\n    }\n  }, [perfil]);\n\n  const nuevoPerfil = () => {\n    setNombrePerfil(\"\");\n    setCdPerfil(0);\n    dispatch(setPerfil({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Perfil\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPerfil}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Perfil\"}\n            fullWidth\n            value={nombrePerfil}\n            onChange={(event) => setNombrePerfil(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPerfil}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPerfil, eliminarPerfil } from \"actions/PerfilActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PerfilTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPerfiles = useSelector((state) => state.perfil.listaPerfiles);\n\n  const editPerfil = (cdPerfil, dsPerfil) => {\n    dispatch(\n      setPerfil({\n        cdPerfil: cdPerfil,\n        dsPerfil: dsPerfil,\n      })\n    );\n  };\n\n  const deletePerfil = (cdPerfil, dsPerfil) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + dsPerfil + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPerfil(cdPerfil)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Perfiles</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPerfiles &&\n            listaPerfiles.map((perfil) => {\n              return (\n                <TableRow\n                  key={perfil.dsPerfil}\n                  className={classes.rowTable}\n                  onClick={() => editPerfil(perfil.cdPerfil, perfil.dsPerfil)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {perfil.dsPerfil}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deletePerfil(perfil.cdPerfil, perfil.dsPerfil)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PerfilForm from \"./PerfilForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPerfil } from \"actions/PerfilActions\";\nimport PerfilTable from \"./PerfilTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPerfil());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PerfilTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PerfilForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id, callBack, especialidadPaciente) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          callBack();\n          especialidadPaciente();\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: \"Se elimnó la historia clinica\",\n              tipo: \"success\",\n            },\n          });\n        }\n      })\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function getListaHistoriaClinica(dni, especialidad) {\n  return (dispatch) => {\n    fetch(\n      `${url_servidor}historiaClinica/dni/${dni}/especialidad/${especialidad}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      )\n      .catch(() => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: error_generico,\n            tipo: \"error\",\n          },\n        });\n      });\n  };\n}\n\nexport function cleanHistoriaClinica() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LISTA_HISTORIA_CLINICA,\n      payload: [],\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { setEspecialidad } from \"actions/EspecialidadActions\";\nimport { setModal } from \"actions/ModalActions\";\n\nexport default function HeaderListaHistoriaClinica() {\n  const [especialidadSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n\n  useEffect(() => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: especialidadSeleccionada,\n        nombre: \"\",\n      })\n    );\n    setValue(especialidadSeleccionada);\n    dispatch(getListaHistoriaClinica(paciente, especialidadSeleccionada));\n    dispatch(especialidadesPaciente(paciente));\n  }, [dispatch, paciente, especialidadSeleccionada]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  const createTabs = () => {\n    return listaEspecialidades.map((especialidad) => {\n      return (\n        <Tab\n          key={especialidad.cd_especialidad}\n          label={especialidad.nombre}\n          value={especialidad.cd_especialidad}\n        />\n      );\n    });\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModal(true));\n  };\n\n  return (\n    <div style={{ height: \"10vh\" }}>\n      <Grid container style={{ margin: 10, marginRight: 20 }}>\n        <Grid item md={8} sm={4} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n        <Grid item md={1} sm={2} xs={12}></Grid>\n      </Grid>\n      <Paper square>\n        <Tabs\n          value={especialidadSeleccionada}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          {listaEspecialidades.length && paciente !== 0 ? (\n            <Tab key={0} label=\"Todas\" value={0} />\n          ) : (\n            \"\"\n          )}\n          {listaEspecialidades.length && paciente !== 0 ? createTabs() : \"\"}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  eliminarHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setModal } from \"actions/ModalActions\";\n\nexport default function ListaHistoriaClinica() {\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModal(true));\n  };\n  const deleteHistoriaClinica = (historiaClinica) => {\n    confirmAlert({\n      title: `Historia Clínica #${historiaClinica.id_historia_clinica}`,\n      message:\n        \"Paciente: \" +\n        historiaClinica.paciente.nombre +\n        \" \" +\n        historiaClinica.paciente.apellido +\n        \" - \" +\n        historiaClinica.paciente.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarHistoriaClinica(\n                historiaClinica.id_historia_clinica,\n                () =>\n                  dispatch(\n                    getListaHistoriaClinica(\n                      paciente,\n                      especialidad.cd_especialidad\n                    )\n                  ),\n                () => dispatch(especialidadesPaciente(paciente))\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              #{historia_clinica.id_historia_clinica} - Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido +\n                \" (\" +\n                historia_clinica.profesional.especialidad.nombre +\n                \")\"}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Grid container>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faEye} />\n                </Button>\n              </Grid>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => deleteHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 5,\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n      cursor: \"pointer\",\n    },\n  },\n  rootSeleccionado: {\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"80vh\",\n    minHeight: \"80vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Select from \"react-select\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nimport { setModal } from \"actions/ModalActions\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    } else {\n      historiaClinica.fechaQuirurgica = null;\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (value) => {\n    setProfesional({ dni: value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objHistoriaClinica),\n      })\n        .then(function (response) {\n          if (response.status === 200) {\n            enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n              variant: \"success\",\n            });\n            dispatch(\n              getListaHistoriaClinica(paciente, especialidad.cd_especialidad)\n            );\n            dispatch(especialidadesPaciente(paciente));\n            nuevaHistoriaClinica();\n          } else {\n            enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n              variant: \"error\",\n            });\n          }\n        })\n        .catch(() => {\n          dispatch({\n            type: ERROR_MESSAGE,\n            payload: {\n              message: error_generico,\n              tipo: \"error\",\n            },\n          });\n        });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModal(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPaciente(listaPacientes)}\n            isSearchable={true}\n            placeholder={<div>Paciente</div>}\n            styles={colourStyles}\n            isDisabled={true}\n            value={optionsPaciente(listaPacientes).filter(\n              (option) => option.value === paciente\n            )}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsProfesional(listaProfesionales)}\n            isSearchable={true}\n            placeholder={<div>Profesional</div>}\n            styles={colourStyles}\n            onChange={(value) => handleProfesional(value.value)}\n            value={\n              profesional\n                ? optionsProfesional(listaProfesionales).filter(\n                    (option) => option.value === profesional.dni\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={guardarHistoriaClinica}\n              >\n                Guardar\n              </Button>\n            </Grid>\n            <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => dispatch(setModal(false))}\n              >\n                Cerrar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  setHistoriaClinica,\n  cleanHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../BuscarTurno/TablaPacientes\";\nimport HeaderListaHistoriaClinica from \"./HeaderListaHistoriaClinica\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setModal } from \"actions/ModalActions\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.modalReducer.open_modal);\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0));\n    dispatch(cleanHistoriaClinica());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModal(false));\n    dispatch(setHistoriaClinica({}));\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12} style={{ height: \"95vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"95vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <HeaderListaHistoriaClinica />\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\nimport Usuarios from \"./FormsABM/Usuarios/Usuarios\";\nimport Profesional from \"./Profesional/Profesional\";\nimport Paciente from \"./Paciente/Paciente\";\nimport Perfil from \"./FormsABM/Perfil/Perfil\";\nimport HistoriaClinica from \"./HistoriaClinica/HistoriaClinica\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function PrimaryContainer() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const errorMessage = useSelector((state) => state.errorMessage.error);\n\n  useEffect(() => {\n    if (errorMessage.tipo !== undefined) {\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.tipo,\n      });\n    }\n  }, [enqueueSnackbar, errorMessage]);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.USUARIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Usuarios />\n          </div>\n        );\n\n      case menuOptions.PERFIL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Perfil />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div>{localStorage.getItem(\"token\") !== null ? switchMenu() : \"\"}</div>\n  );\n}\n","import React from \"react\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gotoMenu } from \"../MenuFunctions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function InformacionEmpresaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <Grid container style={{ zIndex: 10000 }}>\n      <Grid item xs={12}>\n        <Grid container>\n          <Grid item xs={12}>\n            <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n          </Grid>\n          <MediaQuery minDeviceWidth={1300}>\n            <Grid item xs={12} className={props.classes.textMenu}>\n              Información\n            </Grid>\n          </MediaQuery>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {props.open ? (\n          <div className={classes.subMenuContainer}>\n            <Grid container style={{ width: \"auto\", display: \"block\" }}>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.COSTO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n              >\n                {menuOptions.COSTO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.ESPECIALIDADES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n              >\n                {menuOptions.ESPECIALIDADES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.OBRAS_SOCIALES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n              >\n                {menuOptions.OBRAS_SOCIALES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PERFIL === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PERFIL, dispatch)}\n              >\n                {menuOptions.PERFIL}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PLAN === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n              >\n                {menuOptions.PLAN}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PRESTADORA === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n              >\n                {menuOptions.PRESTADORA}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.SERVICIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n              >\n                {menuOptions.SERVICIOS}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.TIPO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n              >\n                {menuOptions.TIPO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.USUARIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.USUARIOS, dispatch)}\n              >\n                {menuOptions.USUARIOS}\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 0,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"42vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React from \"react\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div container style={{ zIndex: 10000 }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n        </Grid>\n        <MediaQuery minDeviceWidth={1300}>\n          <Grid item xs={12} className={props.classes.textMenu}>\n            {menuOptions.AGENDA}\n          </Grid>\n        </MediaQuery>\n      </Grid>\n\n      {props.open ? (\n        <div className={classes.subMenuContainer}>\n          <Grid container style={{ width: \"auto\", display: \"block\" }}>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_DIARIA === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n            >\n              {menuOptions.Agenda_DIARIA}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_SEMANAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n            >\n              {menuOptions.Agenda_SEMANAL}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_MENSUAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n            >\n              {menuOptions.Agenda_MENSUAL}\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 0,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"2vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faSignOutAlt,\n  faFileAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport InformacionEmpresaMenu from \"./InformacionEmpresaMenu\";\nimport AgendaMenu from \"./AgendaMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerBigMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openAgenda, setOpenAgenda] = useState(false);\n  const [openInformacionEmpresa, setOpenInformacionEmpresa] = useState(false);\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  useEffect(() => {\n    setOpenAgenda(false);\n    setOpenInformacionEmpresa(false);\n  }, [menuSelected]);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onMouseLeave={() => setOpenAgenda(false)}\n          onMouseOver={() => setOpenAgenda(true)}\n        >\n          <AgendaMenu open={openAgenda} classes={classes} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          onMouseLeave={() => setOpenInformacionEmpresa(false)}\n          onMouseOver={() => setOpenInformacionEmpresa(true)}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n        >\n          <InformacionEmpresaMenu\n            open={openInformacionEmpresa}\n            classes={classes}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.gridItemMenu}>\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faFileAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.REPORTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={classes.gridItemMenu}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n\n    \"&:Hover\": {\n      fontWeight: \"bold\",\n      backgroundColor: \"#bf2231\",\n      cursor: \"pointer\",\n      color: \"#fff\",\n    },\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"center\",\n    marginTop: 10,\n    fontSize: 9,\n  },\n  mainContainer: {\n    borderRight: \"2px solid #de3444\",\n    height: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport ContainerBigMenu from \"./ContainerBigMenu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadora } from \"Utils/functions\";\n\nexport default function BigMenu(props) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.container}>\n        <ContainerBigMenu />\n      </div>\n      <div>\n        <div className={classes.containerBar}>\n          <div className={classes.infoEmpresa}>\n            Prestadora: {getPrestadora()}\n          </div>\n        </div>\n        <div className={classes.containerPrimary}>\n          <PrimaryContainer></PrimaryContainer>\n        </div>\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"5%\",\n    minHeight: \"100%\",\n    backgroundColor: \"#333\",\n    zIndex: 20,\n  },\n  infoEmpresa: {\n    width: \"95%\",\n    padding: 10,\n    paddingTop: 15,\n  },\n  containerBar: {\n    float: \"right\",\n    width: \"95%\",\n    height: \"5vh\",\n    minHeight: \"10%\",\n    borderBottom: \"1px solid #de3444\",\n    backgroundColor: \"#fff\",\n    fontWeight: \"bold\",\n    color: \"#de3444\",\n    zIndex: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"95%\",\n    height: \"93vh\",\n    zIndex: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_DIARIA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_DIARIA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_SEMANAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_SEMANAL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_MENSUAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_MENSUAL}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function InformacionEmpresaSmallMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.COSTO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.COSTO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n          className={\n            menuSelected === menuOptions.ESPECIALIDADES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.ESPECIALIDADES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n          className={\n            menuSelected === menuOptions.OBRAS_SOCIALES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.OBRAS_SOCIALES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PERFIL, dispatch)}\n          className={\n            menuSelected === menuOptions.PERFIL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PERFIL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n          className={\n            menuSelected === menuOptions.PLAN\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PLAN}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n          className={\n            menuSelected === menuOptions.PRESTADORA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PRESTADORA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n          className={\n            menuSelected === menuOptions.SERVICIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.SERVICIOS}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.TIPO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.TIPO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.USUARIOS, dispatch)}\n          className={\n            menuSelected === menuOptions.USUARIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.USUARIOS}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faCalendarAlt,\n  faBook,\n  faSignOutAlt,\n  faFileAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaSmallMenu from \"./AgendaSmallMenu\";\nimport InformacionEmpresaSmallMenu from \"./InformacionEmpresaSmallMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerSmallMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.AGENDA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.AGENDA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {agendaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <AgendaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.INFORMACION_EMPRESA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.INFORMACION_EMPRESA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {informacionEmpresaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <InformacionEmpresaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faFileAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.REPORTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n    fontSize: 35,\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"left\",\n    fontSize: 35,\n  },\n\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContainerSmallMenu from \"./ContainerSmallMenu\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { getPrestadora } from \"Utils/functions\";\n\nexport default function SmallMenu(props) {\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const classes = useStyles();\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <Grid container className={classes.gridHeader}>\n          <Grid item xs={2} sm={1} onClick={() => gotoMenu(menuOptions.MENU)}>\n            <FontAwesomeIcon icon={faBars} />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <span style={{ fontSize: 27 }}>{menuSelected}</span>\n          </Grid>\n          <Grid item xs={4} sm={5}>\n            <span style={{ fontSize: 27 }}>Prestadora: {getPrestadora()}</span>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className={classes.containerPrimary}>\n        {menuSelected !== menuOptions.AGENDA &&\n        menuSelected !== menuOptions.INFORMACION_EMPRESA &&\n        menuSelected !== menuOptions.MENU ? (\n          <PrimaryContainer />\n        ) : (\n          <ContainerSmallMenu />\n        )}\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"100%\",\n    minHeight: \"6%\",\n    backgroundColor: \"#de3444\",\n    zIndex: 20,\n    paddingLeft: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n  gridHeader: { height: \"100%\", fontSize: 35, color: \"white\", marginTop: \"1%\" },\n}));\n","import React, { useEffect } from \"react\";\nimport MediaQuery from \"react-responsive\";\nimport BigMenu from \"./Menu/BigMenu/BigMenu\";\nimport SmallMenu from \"./Menu/SmallMenu/SmallMenu\";\nimport { refreshRefreshToken, refreshToken } from \"Utils/functions\";\nimport { useDispatch } from \"react-redux\";\nexport default function Logged() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    refreshToken(dispatch);\n    refreshRefreshToken(dispatch);\n  });\n\n  return (\n    <div\n      style={{\n        height: \"99vh\",\n        width: \"100vw\",\n      }}\n    >\n      <MediaQuery minDeviceWidth={1300}>\n        <BigMenu />\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={1300}>\n        <SmallMenu />\n      </MediaQuery>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\nimport { isAlive } from \"Utils/functions\";\n\nexport default function MenuSwitch() {\n  const dispatch = useDispatch();\n  const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n  useEffect(() => {\n    const stored_token = localStorage.getItem(\"token\");\n\n    if (stored_token !== null && stored_token !== \"\") {\n      isAlive(dispatch, login);\n    }\n  });\n\n  return login === 0 ? <Login></Login> : <Logged></Logged>;\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n  EDIT_ESTADO_TURNO,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n  estadoTurno: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n        estadoTurno: action.payload.estadoTurno.cdEstado,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n        estadoTurno: 1,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case EDIT_ESTADO_TURNO:\n      return {\n        ...state,\n        estadoTurno: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n  CLEAN_BUSCAR_TURNOS,\n  SET_ESTADOS_TURNO,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n  estadoRecepcionado: false,\n  estadoAsignado: false,\n  estadoAtendido: false,\n  estadoCancelado: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n        paciente: 0,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n        profesional: 0,\n      };\n    case SET_ESTADOS_TURNO:\n      return {\n        ...state,\n        estadoRecepcionado: action.payload.estadoRecepcionado,\n        estadoAsignado: action.payload.estadoAsignado,\n        estadoAtendido: action.payload.estadoAtendido,\n        estadoCancelado: action.payload.estadoCancelado,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n    case CLEAN_BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: [],\n        profesional: 0,\n        paciente: 0,\n        actuales: 1,\n        estadoRecepcionado: false,\n        estadoAsignado: false,\n        estadoAtendido: false,\n        estadoCancelado: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { ERROR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_USUARIO, SET_LISTA_USUARIOS } from \"actions/types\";\n\nconst initialState = {\n  usuario: {},\n  listaUsuarios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USUARIO:\n      return {\n        ...state,\n        usuario: action.payload,\n      };\n    case SET_LISTA_USUARIOS:\n      return {\n        ...state,\n        listaUsuarios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PERFIL, SET_LISTA_PERFIL } from \"actions/types\";\nconst initialState = {\n  perfil: {},\n  listaPerfiles: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PERFIL:\n      return {\n        ...state,\n        perfil: action.payload,\n      };\n    case SET_LISTA_PERFIL:\n      return {\n        ...state,\n        listaPerfiles: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_LISTA_ESTADOS_TURNO } from \"actions/types\";\nconst initialState = {\n  listaEstadosTurno: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LISTA_ESTADOS_TURNO:\n      return {\n        ...state,\n        listaEstadosTurno: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_MODAL } from \"actions/types\";\nconst initialState = { open_modal: false };\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_MODAL:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\nimport ErrorMessageReducer from \"./ErrorMessageReducer\";\nimport UsuariosReducer from \"./UsuariosReducer\";\nimport PerfilReducer from \"./PerfilReducer\";\nimport EstadosTurnoReducer from \"./EstadosTurnoReducer\";\nimport ModalReducer from \"./ModalReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n  errorMessage: ErrorMessageReducer,\n  usuarios: UsuariosReducer,\n  perfil: PerfilReducer,\n  estadosTurno: EstadosTurnoReducer,\n  modalReducer: ModalReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}