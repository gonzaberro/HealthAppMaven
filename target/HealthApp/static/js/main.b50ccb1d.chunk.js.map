{"version":3,"sources":["imagenes/fondo.png","actions/types.js","Utils/constants.js","actions/PrestadoraActions.js","actions/LoginActions.js","components/Logged/Menu/MenuFunctions.js","Utils/functions.js","components/Login/LeftSideLogin.jsx","components/Login/LoginFunctions.js","components/Login/Login.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","actions/AgendaActions.js","components/Logged/Agenda/grabarTurnoLogica.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/ProfesionalActions.js","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","actions/UsuariosActions.js","components/Logged/FormsABM/Usuarios/UsuariosForm.jsx","components/Logged/FormsABM/Usuarios/UsuariosTable.jsx","actions/PerfilActions.js","components/Logged/FormsABM/Usuarios/Usuarios.jsx","components/Logged/Profesional/ProfesionalTable.jsx","components/Logged/FormsABM/FormSelect.jsx","components/Logged/Profesional/ProfesionalForm.jsx","components/Logged/Profesional/Profesional.jsx","components/Logged/Paciente/PacienteTable.jsx","components/Logged/Paciente/PacienteForm.jsx","components/Logged/Paciente/Paciente.jsx","components/Logged/FormsABM/Perfil/PerfilForm.jsx","components/Logged/FormsABM/Perfil/PerfilTable.jsx","components/Logged/FormsABM/Perfil/Perfil.jsx","actions/HistoriaClinicaActions.js","components/Logged/HistoriaClinica/HeaderListaHistoriaClinica.jsx","components/Logged/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Menu/BigMenu/InformacionEmpresaMenu.jsx","components/Logged/Menu/BigMenu/AgendaMenu.jsx","components/Logged/Menu/BigMenu/ContainerBigMenu.jsx","components/Logged/Menu/BigMenu/BigMenu.jsx","components/Logged/Menu/SmallMenu/AgendaSmallMenu.jsx","components/Logged/Menu/SmallMenu/InformacionEmpresaSmallMenu.jsx","components/Logged/Menu/SmallMenu/ContainerSmallMenu.jsx","components/Logged/Menu/SmallMenu/SmallMenu.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/ErrorMessageReducer.js","reducers/UsuariosReducer.js","reducers/PerfilReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ERROR_MESSAGE","menuOptions","url_servidor","error_generico","horarios","setPrestadora","prestadora","dispatch","type","payload","getPrestadoras","fetch","method","headers","Authorization","localStorage","getItem","then","response","json","data","setLogin","login","gotoMenu","selected","menu","limpiar","agendaSeleccionada","menuSelected","informacionEmpresaSeleccionada","closeSession","removeItem","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","setLocalStorage","pair","setItem","console","log","calcularTimer","fechaExpiracion","hora_actual","Date","fecha_expiracion","parse","timer","differenceInSeconds","JSON","cd_prestadora","LeftSideLogin","enqueueSnackbar","useSnackbar","classes","useStyles","useDispatch","useState","password","setPassword","usuario","setUsuario","prestadoras","useSelector","state","listaPrestadoras","selectPrestadora","useEffect","validateLogin","body","stringify","username","res","status","entries","variant","validarLogin","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","form","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","value","onChange","event","prestadoraSeleccionada","find","changePrestadora","target","map","MenuItem","key","name","nombre","TextField","margin","required","Button","color","submit","onClick","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","setDoctor","setHorario","EditAgendaHeader","headerGrid","lg","headerSpan","borderBottom","paddingBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","opcionRepetir","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","tipo","programar","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","dni","getTurnos","profesional","grabarTurno","turnoInfo","fechaCalendario","profesional_seleccionado","token","cdTurno","hora","horario","paciente","doctor","servicio","cd_servicio","tipoServicio","cdTipoServicio","notas","nota","message","sendTurno","optionsProfesional","listaProfesionales","options","push","apellido","especialidad","optionsPaciente","listaPacientes","optionsServicios","listaServicios","optionsTipoServicios","listaTipoServicios","optionsHorarios","EditAgendaItem","turno_info","editTurnoReducer","agenda_reducer","fecha_agenda","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","filter","option","isDisabled","noValidate","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","title","toLocaleString","timeZone","buttons","eliminarTurno","undefined","validarCamposTurno","borderTop","maxWidth","minWidth","base","setProfesional","getListaProfesionales","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","icon","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","cursor","userSelect","turnos","gridHorarios","labelHorario","containerTurnosGrid","Chip","clickable","chipTurnos","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","nuevaObraSocial","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","Error","catch","error","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","button","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","minDeviceWidth","AgendaMensualDias","gotoDiaCalendario","numero_dia","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","especialidadesPaciente","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","nuevaEspecialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","nuevaPrestadora","PrestadoraTable","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","getPacientes","activos","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","setTimeout","clearTimeout","subHeaderComponentMemo","useMemo","e","onClear","columns","cell","row","sortable","selector","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","buscarActivos","tabSeleccionada","setValue","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","listaTurnos","armarListaTurnos","Card","CardContent","textTransform","gutterBottom","pos","CardActions","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","getListaUsuarios","defaultState","cd_usuario","idUsuario","email","PacienteForm","perfil","setPerfil","usuarioSeleccionado","usuarios","listaPerfiles","useReducer","newState","setUsuarioForm","handleInputChange","nuevoUsuario","keys","cdPerfil","dsPerfil","objPlan","TablaUsuarios","listaUsuarios","deleteUsuario","TagPerfil","getListaPerfil","Usuarios","profesionalSeleccionado","deleteProfesional","FormSelect","handleChange","sexo","seguroMalaPraxis","cuit","registroNacPrestadores","ProfesionalForm","setProfesionalForm","especialidadesOptions","nuevoProfesional","objProfesional","Profesional","pacienteSeleccionado","deletePaciente","fecha_nacimiento","nroAfiliado","setPacienteForm","planesOptions","nuevoPaciente","Paciente","PerfilForm","nombrePerfil","setNombrePerfil","setCdPerfil","nuevoPerfil","PerfilTable","deletePerfil","setModalHistoriaClinica","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","HeaderListaHistoriaClinica","especialidadSeleccionada","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","deleteHistoriaClinica","id_historia_clinica","callBack","especialidadPaciente","armarListaHistoriaClinica","historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","nuevaHistoriaClinica","gridInputs","handleProfesional","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","open_modal","Modal","onClose","aria-labelledby","aria-describedby","PrimaryContainer","globalReducer","errorMessage","switchMenu","InformacionEmpresaMenu","faBook","textMenu","subMenuContainer","subMenuOptions","subMenuSelected","borderTopLeftRadius","position","left","top","AgendaMenu","faCalendarAlt","ContainerBigMenu","openAgenda","setOpenAgenda","openInformacionEmpresa","setOpenInformacionEmpresa","mainContainer","gridItemMenu","gridSelected","onMouseLeave","onMouseOver","faSearch","faUserMd","faUser","faFileMedical","faSignOutAlt","justifyContent","borderBottomLeftRadius","BigMenu","containerBar","infoEmpresa","containerPrimary","float","selectedSubMenu","textSubMenu","InformacionEmpresaSmallMenu","ContainerSmallMenu","SmallMenu","gridHeader","faBars","Logged","refreshToken","refreshRefreshToken","maxDeviceWidth","MenuSwitch","login_state","stored_token","isAlive","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","maxSnack","timeOut","newestOnTop","preventDuplicates","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b50ccb1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\nexport const SET_USUARIO = \"SET_USUARIO\";\r\nexport const SET_LISTA_USUARIOS = \"SET_LISTA_USUARIOS\";\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const MODAL_HISTORIA_CLINICA = \"MODAL_HISTORIA_CLINICA\";\r\nexport const ERROR_MESSAGE = \"ERROR_MESSAGE\";\r\n\r\nexport const SET_LISTA_PERFIL = \"SET_LISTA_PERFIL\";\r\nexport const SET_PERFIL = \"SET_PERFIL\";\r\n\r\nexport const CLEAN_BUSCAR_TURNOS = \"CLEAN_BUSCAR_TURNOS\";\r\n","export const menuOptions = {\n  MENU: \"Menú\",\n  INFORMACION_EMPRESA: \"Información\",\n  AGENDA: \"Agenda\",\n  OBRAS_SOCIALES: \"Obras Sociales\",\n  PROFESIONALES: \"Profesionales \",\n  PACIENTES: \"Pacientes\",\n  ESPECIALIDADES: \"Especialidades\",\n  Agenda_DIARIA: \"Agenda Diaria\",\n  Agenda_MENSUAL: \"Agenda Mensual\",\n  Agenda_SEMANAL: \"Agenda Semanal\",\n  PLAN: \"Plan\",\n  PRESTADORA: \"Prestadora\",\n  SERVICIOS: \"Servicios\",\n  TIPO_SERVICIO: \"Tipo de Servicios\",\n  COSTO_SERVICIO: \"Costo del Servicio\",\n  HISTORIA_CLINICA: \"Historia Clínica\",\n  BUSCAR_TURNO: \"Buscar Turno\",\n  CERRAR_SESION: \"Cerrar Sesión\",\n  USUARIOS: \"Usuarios\",\n  PERFIL: \"Perfiles\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\n\nexport const error_generico = \"Error interno en el servidor\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la prestadora\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la prestadora\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","import { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport { setLogin } from \"actions/LoginActions\";\n\nexport const gotoMenu = (selected, dispatch) => {\n  dispatch({\n    type: SWITCH_MENU,\n    payload: { menu: selected, limpiar: true },\n  });\n};\nexport const agendaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.AGENDA:\n      return true;\n\n    case menuOptions.Agenda_DIARIA:\n      return true;\n\n    case menuOptions.Agenda_MENSUAL:\n      return true;\n\n    case menuOptions.Agenda_SEMANAL:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const informacionEmpresaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.INFORMACION_EMPRESA:\n      return true;\n    case menuOptions.ESPECIALIDADES:\n      return true;\n\n    case menuOptions.OBRAS_SOCIALES:\n      return true;\n\n    case menuOptions.PLAN:\n      return true;\n\n    case menuOptions.SERVICIOS:\n      return true;\n\n    case menuOptions.TIPO_SERVICIO:\n      return true;\n\n    case menuOptions.PRESTADORA:\n      return true;\n\n    case menuOptions.COSTO_SERVICIO:\n      return true;\n\n    default:\n      return false;\n  }\n};\nexport const closeSession = (dispatch) => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"usuario\");\n  localStorage.removeItem(\"expiration-time\");\n  localStorage.removeItem(\"refresh-expiration-time\");\n  localStorage.removeItem(\"refresh-token\");\n  localStorage.removeItem(\"prestadora\");\n\n  dispatch(setLogin(0));\n};\n","import { url_servidor } from \"Utils/constants\";\nimport { parse, differenceInSeconds } from \"date-fns\";\nimport { setLogin } from \"actions/LoginActions\";\nimport { closeSession } from \"components/Logged/Menu/MenuFunctions\";\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\nexport const refreshToken = (dispatch) => {\n  setTimeout(() => {\n    if (\n      localStorage.getItem(\"token\") !== undefined &&\n      localStorage.getItem(\"refresh-token\") !== undefined\n    ) {\n      fetch(`${url_servidor}refreshToken/${localStorage.getItem(\"usuario\")}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n          \"Refresh-Token\": localStorage.getItem(\"refresh-token\"),\n        },\n      })\n        .then(function (res) {\n          if (res.status === 200) {\n            setLocalStorage(res.headers.entries());\n            refreshToken(dispatch);\n          } else {\n            closeSession(dispatch);\n          }\n        })\n        .catch((error) => {\n          closeSession(dispatch);\n        });\n    }\n  }, calcularTimer(localStorage.getItem(\"expiration-time\")));\n};\nexport const refreshRefreshToken = (dispatch) => {\n  setTimeout(() => {\n    if (\n      localStorage.getItem(\"token\") !== undefined &&\n      localStorage.getItem(\"refresh-token\") !== undefined\n    ) {\n      fetch(\n        `${url_servidor}refreshRefreshToken/${localStorage.getItem(\"usuario\")}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n            \"Refresh-Token\": localStorage.getItem(\"refresh-token\"),\n          },\n        }\n      )\n        .then(function (res) {\n          if (res.status === 200) {\n            setLocalStorage(res.headers.entries());\n            refreshRefreshToken(dispatch);\n          } else {\n            closeSession(dispatch);\n          }\n        })\n        .catch((error) => {\n          closeSession(dispatch);\n        });\n    }\n  }, calcularTimer(localStorage.getItem(\"refresh-expiration-time\")));\n};\n\nexport const setLocalStorage = (headers) => {\n  for (var pair of headers) {\n    switch (pair[0]) {\n      case \"access-token\": //Token para consultas\n        localStorage.setItem(\"token\", pair[1]);\n        break;\n      case \"expiration-time\": //Expiration del token consultas\n        localStorage.setItem(\"expiration-time\", pair[1]);\n        break;\n      case \"refresh-token\": //Token para refrezcar\n        localStorage.setItem(\"refresh-token\", pair[1]);\n        break;\n      case \"refresh-expiration-time\":\n        localStorage.setItem(\"refresh-expiration-time\", pair[1]);\n        break;\n\n      default:\n        console.log(\"Header Not Needed\");\n    }\n  }\n};\n\nexport const calcularTimer = (fechaExpiracion) => {\n  const hora_actual = new Date();\n\n  const fecha_expiracion = parse(\n    fechaExpiracion,\n    \"dd/MM/yyyy HH:mm:ss\",\n    new Date()\n  );\n\n  let timer = differenceInSeconds(fecha_expiracion, hora_actual);\n\n  if (timer * 1000 - 60000 > 70000) {\n    //Dejo 10 segundos de espacio entre que se ejecuta y el tiempo en el que se venceria el token\n    //Si el timer queda configurado para ejecutarse 1 minuto antes de vencerse, acepto\n    return timer * 1000 - 60000;\n  } else {\n    // Si me queda menos de 1 minutos, lo ejecuto en ese momento\n    return 10;\n  }\n};\n\nexport const isAlive = (dispatch, login) => {\n  fetch(url_servidor + \"tokenALive\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  }).then(function (res) {\n    if (res.status === 200) {\n      if (login === 0) dispatch(setLogin(1));\n    } else {\n      closeSession(dispatch);\n    }\n  });\n};\nexport const prestadora = () => {\n  let prestadora = 0;\n\n  if (localStorage.getItem(\"prestadora\") !== null) {\n    prestadora = JSON.parse(localStorage.getItem(\"prestadora\")).cd_prestadora;\n  }\n\n  return prestadora;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport { validarLogin } from \"components/Login/LoginFunctions\";\n\nexport default function LeftSideLogin() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"Gunsandrose\");\n  const [usuario, setUsuario] = useState(\"gonzalo\");\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n  const [prestadora, selectPrestadora] = useState(0);\n\n  const gotoLogin = () => {\n    validateLogin();\n  };\n\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  const validateLogin = () => {\n    if (password !== \"\" && usuario !== \"\" && prestadora.cd_prestadora > 0) {\n      validarLogin(usuario, password, prestadora, dispatch, enqueueSnackbar);\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco.\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const changePrestadora = (cd_prestadora) => {\n    const prestadoraSeleccionada = prestadoras.find((prestadora) => {\n      return prestadora.cd_prestadora === cd_prestadora;\n    });\n\n    selectPrestadora(prestadoraSeleccionada);\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <div className={classes.form}>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            label=\"Institución\"\n            fullWidth\n            value={prestadora.cd_prestadora}\n            onChange={(event) => changePrestadora(event.target.value)}\n          >\n            {prestadoras.map((prestadora) => {\n              return (\n                <MenuItem\n                  key={prestadora.cd_prestadora}\n                  name={prestadora.nombre}\n                  value={prestadora.cd_prestadora}\n                >\n                  {prestadora.nombre}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n          value={usuario}\n          onChange={(event) => setUsuario(event.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { setLogin } from \"../../actions/LoginActions\";\nimport { url_servidor } from \"Utils/constants\";\nimport { setLocalStorage } from \"Utils/functions\";\n\nexport const validarLogin = (\n  usuario,\n  password,\n  prestadora,\n  dispatch,\n  enqueueSnackbar\n) => {\n  fetch(url_servidor + \"login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: usuario,\n      password: password,\n    }),\n  }).then(function (res) {\n    if (res.status === 200) {\n      localStorage.setItem(\"usuario\", usuario);\n      localStorage.setItem(\"prestadora\", JSON.stringify(prestadora));\n\n      setLocalStorage(res.headers.entries());\n      dispatch(setLogin(1)); //Voy a marcar el login\n    } else {\n      enqueueSnackbar(\"Usuario o contraseña incorrectos.\", {\n        variant: \"error\",\n      });\n    }\n  });\n};\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    paddingBottom: 17,\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants/\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      if (response.status === 200 && callback) {\n        cleanProgramar();\n        cleanEditTurno();\n        callback();\n\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el turno\", tipo: \"success\" },\n        });\n      }\n    });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + prestadora() + \"/horarios\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor + \"turnos/\" + prestadora() + \"/\" + profesional + \"/\" + fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      });\n  };\n}\n","import { url_servidor } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      prestadora: JSON.parse(localStorage.getItem(\"prestadora\")),\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      programarAgenda: data.programarAgenda,\n    }),\n  }).then(function (response) {\n    if (response.status === 200) {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Se guardó el turno\",\n          tipo: \"success\",\n        },\n      });\n\n      data.dispatch(\n        getTurnos(\n          data.fechaCalendario,\n          data.profesional_seleccionado,\n          data.token\n        )\n      );\n      data.dispatch(cleanProgramar());\n      data.dispatch(setDefault());\n    } else {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Error al guardar el turno\",\n          tipo: \"error\",\n        },\n      });\n    }\n  });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda,\n  token\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n    token: token,\n  };\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nconst optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nconst validarCamposTurno = (turno_info) => {\n  if (\n    turno_info.paciente !== undefined &&\n    turno_info.paciente !== \"\" &&\n    turno_info.doctor !== undefined &&\n    turno_info.doctor !== \"\" &&\n    turno_info.horario !== undefined &&\n    turno_info.horario !== \"\" &&\n    turno_info.servicio !== undefined &&\n    turno_info.servicio !== \"\" &&\n    turno_info.tipoServicio !== undefined &&\n    turno_info.tipoServicio !== \"\"\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (validarCamposTurno(turno_info)) {\n        grabarTurno(\n          turno_info,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      } else {\n        enqueueSnackbar(\"No puede dejar campos vacíos.\", {\n          variant: \"warning\",\n        });\n      }\n    } else {\n    }\n  };\n  const setFechaEsp = (fecha, hora) => {\n    fecha = fecha + \" \" + hora;\n    return new Date(fecha).toLocaleString(\"es-ES\", {\n      timeZone: \"America/Argentina/Buenos_Aires\",\n    });\n  };\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={\n              turno_info.cdTurno > 0 &&\n              fechaString(fechaCalendario) >= fechaString(new Date())\n                ? false\n                : true\n            }\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el profesional\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el profesional\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el paciente\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el paciente\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import {\n  SET_TIPO_SERVICIO,\n  SET_LISTA_TIPO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el tipo de servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el tipo de servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n      setOpen(false);\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  const editTurno = (turno) => {\n    turno.fecha = fechaString(new Date(turno.fecha));\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <Chip\n                        clickable={true}\n                        key={index}\n                        className={classes.chipTurnos}\n                        onClick={() => editTurno(turno)}\n                        color=\"primary\"\n                        label={\n                          turno.paciente.dni +\n                          \" - \" +\n                          turno.paciente.nombre +\n                          \" \" +\n                          turno.paciente.apellido +\n                          \" (\" +\n                          turno.tipoServicio.nombre +\n                          \")\"\n                        }\n                      ></Chip>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"84vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(setDoctor(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import {\n  SET_OBRA_SOCIAL,\n  SET_LISTA_OBRA_SOCIAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la obra social\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la obra social\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== undefined && nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Obra Social\", {\n            variant: \"success\",\n          });\n          dispatch(getListaObrasSocial());\n          nuevaObraSocial();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Obra Social\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el plan\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el plan\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== undefined && nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n          nuevoPlan();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPlan}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (\n      nombre !== undefined &&\n      nombre !== \"\" &&\n      cdServicio !== undefined &&\n      cdServicio !== \"\"\n    ) {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaServicios());\n          nuevServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(\"\");\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteServicio(servicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"13.5vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"11vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import { SET_TURNOS_VISTA_MENSUAL, SET_TURNOS_VISTA_SEMANAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants/\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/mes/\" +\n        prestadora() +\n        \"/\" +\n        profesional +\n        \"/\" +\n        fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/semana/\" +\n        prestadora() +\n        \"/\" +\n        profesional +\n        \"/\" +\n        fecha,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    borderBottom: \"none\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"81vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      borderBottom: \"none\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"81vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  SET_ESPECIALIDAD,\n  SET_LISTA_ESPECIALIDAD,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function especialidadesPaciente(dni) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/paciente/\" + dni, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad, token) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la especialidad\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó la especialidad\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== undefined && nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Especialidad\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n          nuevaEspecialidad();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Especialidad\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Prestadora\", {\n            variant: \"success\",\n          });\n          dispatch(getPrestadoras());\n          nuevaPrestadora();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Prestadora\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                type=\"number\"\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            type=\"number\"\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarHorario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deletePrestadora(prestadora)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== undefined && nombre !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaTipoServicios());\n          nuevoTipoServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PACIENTE,\n  BUSCAR_PROFESIONAL,\n  CLEAN_BUSCAR_TURNOS,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\nimport { prestadora } from \"Utils/functions\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function getPacientes(dni, activos) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/paciente/\" +\n        prestadora() +\n        \"/\" +\n        dni +\n        \"/\" +\n        activos,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanTurnos() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_BUSCAR_TURNOS,\n      payload: [],\n    });\n  };\n}\n\nexport function buscarTurnosProfesinal(dni, activos) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"turnos/profesional/\" +\n        prestadora() +\n        \"/\" +\n        dni +\n        \"/\" +\n        activos,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setBuscarProfesional,\n  buscarTurnosProfesinal,\n} from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal(buscarInfo.profesional, buscarInfo.actuales)\n      );\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.profesional]);\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { getPacientes, setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0 && buscarInfo.actuales !== undefined) {\n      dispatch(getPacientes(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarActivos = useSelector((state) => state.buscarTurnos.actuales);\n\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarActivos === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarActivos === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaTurnos() {\n  const listaTurnos = useSelector((state) => state.buscarTurnos.turnos);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return listaTurnos.map((turno) => {\n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              <FontAwesomeIcon icon={faEye} />\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return listaTurnos && listaTurnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaTurnos ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { cleanTurnos } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(cleanTurnos());\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    borderBottom: \"none\",\n    paddingTop: 0,\n    height: \"94vh\",\n    maxHeight: \"94vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import {\n  SET_COSTO_SERVICIO,\n  SET_LISTA_COSTO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el costo del servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el costo del servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== undefined &&\n      costo > 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          id: {\n            servicio: { cd_servicio: cdServicio, nombre: \"\" },\n            plan: {\n              cd_plan: cdPlan,\n              nombre: \"\",\n            },\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          nuevoCostoServicio();\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.id) {\n      setCdPlan(costoServicio.id.plan.cd_plan);\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n      setCdServicio(costoServicio.id.servicio.cd_servicio);\n    }\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={guardarPlan}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n    paddingRight: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.servicio.cd_servicio,\n                costoServicio.id.plan.cd_plan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.id.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_USUARIO, ERROR_MESSAGE, SET_LISTA_USUARIOS } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setUsuario(usuario) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_USUARIO,\n      payload: usuario,\n    });\n  };\n}\n\nexport function eliminarUsuario(cd_usuario) {\n  return (dispatch) => {\n    fetch(`${url_servidor}usuario/${cd_usuario}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el usuario\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_USUARIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el usuario\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaUsuarios() {\n  return (dispatch) => {\n    fetch(`${url_servidor}usuario`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_USUARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUsuario, getListaUsuarios } from \"actions/UsuariosActions\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  cd_usuario: 0,\n  idUsuario: \"\",\n  nombre: \"\",\n  password: \"\",\n  email: \"\",\n};\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [perfil, setPerfil] = useState(0);\n  const usuarioSeleccionado = useSelector((state) => state.usuarios.usuario);\n  const listaPerfiles = useSelector((state) => state.perfil.listaPerfiles);\n\n  const [usuario, setUsuarioForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUsuarioForm({ [name]: value });\n  };\n\n  const nuevoUsuario = () => {\n    dispatch(setUsuario({}));\n    setUsuarioForm(defaultState);\n    setPerfil(0);\n  };\n\n  useEffect(() => {\n    if (Object.keys(usuarioSeleccionado).length !== 0) {\n      setUsuarioForm(usuarioSeleccionado);\n      setPerfil(usuarioSeleccionado.perfil.cdPerfil);\n    }\n  }, [usuarioSeleccionado]);\n\n  const guardarUsuario = () => {\n    const objPlan = { ...usuario, perfil: { cdPerfil: perfil, dsPerfil: \"\" } };\n    if (validateForm(usuario) && perfil > 0) {\n      fetch(`${url_servidor}usuario`, {\n        method: usuario.cd_usuario > 0 ? \"PUT\" : \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Usuario\", {\n            variant: \"success\",\n          });\n          dispatch(getListaUsuarios());\n          nuevoUsuario();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Usuario\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Usuario\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoUsuario}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Perfil\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Perfil\"\n              fullWidth\n              value={perfil}\n              onChange={(event) => setPerfil(event.target.value)}\n            >\n              {listaPerfiles &&\n                listaPerfiles.map((perfil) => {\n                  return (\n                    <MenuItem value={perfil.cdPerfil}>\n                      {perfil.dsPerfil}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            type=\"text\"\n            name=\"nombre\"\n            fullWidth\n            value={usuario.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Id Usuario\"\n            name=\"idUsuario\"\n            fullWidth\n            value={usuario.idUsuario}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"password\"\n            margin=\"normal\"\n            label=\"Contraseña\"\n            name=\"password\"\n            fullWidth\n            disabled={usuario.cd_usuario > 0}\n            value={usuario.password}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Email\"\n            name=\"email\"\n            fullWidth\n            value={usuario.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarUsuario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setUsuario, eliminarUsuario } from \"actions/UsuariosActions\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaUsuarios, filterText) => {\n  return listaUsuarios.filter(\n    (usuario) =>\n      usuario.email.toString().includes(filterText.toLowerCase()) ||\n      usuario.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      usuario.idUsuario.toLowerCase().includes(filterText.toLowerCase()) ||\n      usuario.perfil.dsPerfil.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaUsuarios() {\n  const classes = useStyles();\n\n  const listaUsuarios = useSelector((state) => state.usuarios.listaUsuarios);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const usuarioSeleccionado = useSelector((state) => state.usuarios.usuario);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaUsuarios, filterText);\n\n  /* FIN STATES DATATABLE */\n\n  const deleteUsuario = (row) => {\n    confirmAlert({\n      title: \"Usuario:\" + row.idUsuario,\n      message: \"Nombre: \" + row.nombre,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarUsuario(row.cd_usuario)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaUsuarios);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaUsuarios, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"Código Usuario\",\n      sortable: true,\n      selector: \"cd_usuario\",\n    },\n    {\n      name: \"Id Usuario\",\n      sortable: true,\n      selector: \"idUsuario\",\n    },\n\n    {\n      name: \"Nombre\",\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Perfil\",\n      cell: (row) => (\n        <div className={classes.TagPerfil}>{row.perfil.dsPerfil}</div>\n      ),\n      sortable: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setUsuario(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteUsuario(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.cd_usuario === usuarioSeleccionado.cd_usuario,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  TagPerfil: {\n    width: \"100%\",\n    textAlign: \"center\",\n    backgroundColor: \"#1fc51f\",\n    color: \"#fff\",\n    borderRadius: 5,\n    padding: 5,\n    fontWeight: \"bold\",\n  },\n}));\n","import { SET_PERFIL, SET_LISTA_PERFIL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPerfil(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PERFIL,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function eliminarPerfil(cd_especialidad, token) {\n  return (dispatch) => {\n    fetch(url_servidor + \"perfil/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el perfil\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PERFIL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el perfil\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPerfil() {\n  return (dispatch) => {\n    fetch(url_servidor + \"perfil\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PERFIL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UsuariosForm from \"./UsuariosForm\";\nimport TablaUsuarios from \"./UsuariosTable\";\nimport { useDispatch } from \"react-redux\";\nimport { getListaUsuarios } from \"actions/UsuariosActions\";\nimport { getListaPerfil } from \"actions/PerfilActions\";\n\nexport default function Usuarios() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaUsuarios());\n    dispatch(getListaPerfil());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TablaUsuarios />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <UsuariosForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setProfesional(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n  disabled,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        disabled={disabled ? disabled : false}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option.value}-${index}`} value={option.value}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport FormSelect from \"../FormsABM/FormSelect\";\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  const especialidadesOptions = listaEspecialidades\n    ? listaEspecialidades.map((e) => {\n        return { name: e.nombre, value: e.cd_especialidad };\n      })\n    : [];\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e.target.value });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objProfesional),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Profesional\", {\n            variant: \"success\",\n          });\n          dispatch(getListaProfesionales());\n          nuevoProfesional();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Profesional\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoProfesional = () => {\n    dispatch(setProfesional({}));\n    setProfesionalForm(defaultState);\n    setEspecialidad(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={profesional.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"especialidad\"\n            label=\"Especialidad\"\n            options={especialidadesOptions}\n            value={(especialidad && especialidad.cd_especialidad) || \"\"}\n            handleChange={handleEspecialidad}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <ProfesionalTable />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={3}\n        style={{ width: \"100%\" }}\n        className={classes.borderForm}\n      >\n        <ProfesionalForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { getPacientes } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(getPacientes(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setPaciente(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport FormSelect from \"components/Logged/FormsABM/FormSelect\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const planesOptions = listaPlanes\n    ? listaPlanes.map((e) => {\n        return { name: e.obraSocial.nombre + \" \" + e.nombre, value: e.cd_plan };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e.target.value });\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Paciente\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPacientes());\n          nuevoPaciente();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Paciente\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoPaciente = () => {\n    dispatch(setPaciente({}));\n    setPacienteForm(defaultState);\n    setPlan(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={paciente.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"plan\"\n            label=\"Plan\"\n            options={planesOptions}\n            value={(plan && plan.cd_plan) || \"\"}\n            handleChange={handlePlan}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarPaciente}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <PacienteTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={3} className={classes.borderForm}>\n        <PacienteForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPerfil, getListaPerfil } from \"actions/PerfilActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PerfilForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePerfil, setNombrePerfil] = useState(\"\");\n  const [cdPerfil, setCdPerfil] = useState(0);\n  const perfil = useSelector((state) => state.perfil.perfil);\n\n  const guardarPerfil = () => {\n    if (nombrePerfil !== undefined && nombrePerfil !== \"\") {\n      fetch(url_servidor + \"perfil\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          cdPerfil: cdPerfil,\n          dsPerfil: nombrePerfil,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Perfil\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPerfil());\n          nuevoPerfil();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Perfil\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (perfil.cdPerfil !== undefined) {\n      setNombrePerfil(perfil.dsPerfil);\n      setCdPerfil(perfil.cdPerfil);\n    }\n  }, [perfil]);\n\n  const nuevoPerfil = () => {\n    setNombrePerfil(\"\");\n    setCdPerfil(0);\n    dispatch(setPerfil({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Perfil\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPerfil}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Perfil\"}\n            fullWidth\n            value={nombrePerfil}\n            onChange={(event) => setNombrePerfil(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPerfil}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPerfil, eliminarPerfil } from \"actions/PerfilActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PerfilTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPerfiles = useSelector((state) => state.perfil.listaPerfiles);\n\n  const editPerfil = (cdPerfil, dsPerfil) => {\n    dispatch(\n      setPerfil({\n        cdPerfil: cdPerfil,\n        dsPerfil: dsPerfil,\n      })\n    );\n  };\n\n  const deletePerfil = (cdPerfil, dsPerfil) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + dsPerfil + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPerfil(cdPerfil)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Perfiles</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPerfiles &&\n            listaPerfiles.map((perfil) => {\n              return (\n                <TableRow\n                  key={perfil.dsPerfil}\n                  className={classes.rowTable}\n                  onClick={() => editPerfil(perfil.cdPerfil, perfil.dsPerfil)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {perfil.dsPerfil}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      button\n                      onClick={() =>\n                        deletePerfil(perfil.cdPerfil, perfil.dsPerfil)\n                      }\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PerfilForm from \"./PerfilForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPerfil } from \"actions/PerfilActions\";\nimport PerfilTable from \"./PerfilTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaPerfil());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PerfilTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PerfilForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setModalHistoriaClinica(open) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_HISTORIA_CLINICA,\n      payload: open,\n    });\n  };\n}\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id, callBack, especialidadPaciente) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        callBack();\n        especialidadPaciente();\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se elimnó la historia clinica\",\n            tipo: \"success\",\n          },\n        });\n      }\n    });\n  };\n}\n\nexport function getListaHistoriaClinica(dni, especialidad) {\n  return (dispatch) => {\n    fetch(\n      `${url_servidor}historiaClinica/dni/${dni}/especialidad/${especialidad}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanHistoriaClinica() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LISTA_HISTORIA_CLINICA,\n      payload: [],\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { setEspecialidad } from \"actions/EspecialidadActions\";\n\nexport default function HeaderListaHistoriaClinica() {\n  const [especialidadSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n\n  useEffect(() => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: especialidadSeleccionada,\n        nombre: \"\",\n      })\n    );\n    setValue(especialidadSeleccionada);\n    dispatch(getListaHistoriaClinica(paciente, especialidadSeleccionada));\n    dispatch(especialidadesPaciente(paciente));\n  }, [dispatch, paciente, especialidadSeleccionada]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  const createTabs = () => {\n    return listaEspecialidades.map((especialidad) => {\n      return (\n        <Tab\n          key={especialidad.cd_especialidad}\n          label={especialidad.nombre}\n          value={especialidad.cd_especialidad}\n        />\n      );\n    });\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModalHistoriaClinica(true));\n  };\n\n  return (\n    <div style={{ height: \"10vh\" }}>\n      <Grid container style={{ margin: 10, marginRight: 20 }}>\n        <Grid item md={8} sm={4} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n        <Grid item md={1} sm={2} xs={12}></Grid>\n      </Grid>\n      <Paper square>\n        <Tabs\n          value={especialidadSeleccionada}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          {listaEspecialidades.length && paciente !== 0 ? (\n            <Tab key={0} label=\"Todas\" value={0} />\n          ) : (\n            \"\"\n          )}\n          {listaEspecialidades.length && paciente !== 0 ? createTabs() : \"\"}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n  eliminarHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ListaHistoriaClinica() {\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const deleteHistoriaClinica = (historiaClinica) => {\n    confirmAlert({\n      title: `Historia Clínica #${historiaClinica.id_historia_clinica}`,\n      message:\n        \"Paciente: \" +\n        historiaClinica.paciente.nombre +\n        \" \" +\n        historiaClinica.paciente.apellido +\n        \" - \" +\n        historiaClinica.paciente.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarHistoriaClinica(\n                historiaClinica.id_historia_clinica,\n                () =>\n                  dispatch(\n                    getListaHistoriaClinica(\n                      paciente,\n                      especialidad.cd_especialidad\n                    )\n                  ),\n                () => dispatch(especialidadesPaciente(paciente))\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              #{historia_clinica.id_historia_clinica} - Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Grid container>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faEye} />\n                </Button>\n              </Grid>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => deleteHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 5,\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n      cursor: \"pointer\",\n    },\n  },\n  rootSeleccionado: {\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"80vh\",\n    minHeight: \"80vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Select from \"react-select\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    } else {\n      historiaClinica.fechaQuirurgica = null;\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (value) => {\n    setProfesional({ dni: value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify(objHistoriaClinica),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n            variant: \"success\",\n          });\n          dispatch(\n            getListaHistoriaClinica(paciente, especialidad.cd_especialidad)\n          );\n          dispatch(especialidadesPaciente(paciente));\n          nuevaHistoriaClinica();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPaciente(listaPacientes)}\n            isSearchable={true}\n            placeholder={<div>Paciente</div>}\n            styles={colourStyles}\n            isDisabled={true}\n            value={optionsPaciente(listaPacientes).filter(\n              (option) => option.value === paciente\n            )}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsProfesional(listaProfesionales)}\n            isSearchable={true}\n            placeholder={<div>Profesional</div>}\n            styles={colourStyles}\n            onChange={(value) => handleProfesional(value.value)}\n            value={\n              profesional\n                ? optionsProfesional(listaProfesionales).filter(\n                    (option) => option.value === profesional.dni\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={guardarHistoriaClinica}\n              >\n                Guardar\n              </Button>\n            </Grid>\n            <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => dispatch(setModalHistoriaClinica(false))}\n              >\n                Cerrar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  setModalHistoriaClinica,\n  setHistoriaClinica,\n  cleanHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../BuscarTurno/TablaPacientes\";\nimport HeaderListaHistoriaClinica from \"./HeaderListaHistoriaClinica\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.historiaClinica.open_modal);\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0));\n    dispatch(cleanHistoriaClinica());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModalHistoriaClinica(false));\n    dispatch(setHistoriaClinica({}));\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12} style={{ height: \"95vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"95vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <HeaderListaHistoriaClinica />\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\nimport Usuarios from \"./FormsABM/Usuarios/Usuarios\";\nimport Profesional from \"./Profesional/Profesional\";\nimport Paciente from \"./Paciente/Paciente\";\nimport Perfil from \"./FormsABM/Perfil/Perfil\";\nimport HistoriaClinica from \"./HistoriaClinica/HistoriaClinica\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function PrimaryContainer() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const errorMessage = useSelector((state) => state.errorMessage.error);\n\n  useEffect(() => {\n    if (errorMessage.tipo !== undefined) {\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.tipo,\n      });\n    }\n  }, [enqueueSnackbar, errorMessage]);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.USUARIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Usuarios />\n          </div>\n        );\n\n      case menuOptions.PERFIL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Perfil />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div>{localStorage.getItem(\"token\") !== null ? switchMenu() : \"\"}</div>\n  );\n}\n","import React from \"react\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gotoMenu } from \"../MenuFunctions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function InformacionEmpresaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <Grid container style={{ zIndex: 10000 }}>\n      <Grid item xs={12}>\n        <Grid container>\n          <Grid item xs={12}>\n            <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n          </Grid>\n          <MediaQuery minDeviceWidth={1300}>\n            <Grid item xs={12} className={props.classes.textMenu}>\n              Información\n            </Grid>\n          </MediaQuery>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {props.open ? (\n          <div className={classes.subMenuContainer}>\n            <Grid container style={{ width: \"auto\", display: \"block\" }}>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.COSTO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n              >\n                {menuOptions.COSTO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.ESPECIALIDADES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n              >\n                {menuOptions.ESPECIALIDADES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.OBRAS_SOCIALES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n              >\n                {menuOptions.OBRAS_SOCIALES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PERFIL === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PERFIL, dispatch)}\n              >\n                {menuOptions.PERFIL}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PLAN === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n              >\n                {menuOptions.PLAN}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PRESTADORA === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n              >\n                {menuOptions.PRESTADORA}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.SERVICIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n              >\n                {menuOptions.SERVICIOS}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.TIPO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n              >\n                {menuOptions.TIPO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.USUARIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.USUARIOS, dispatch)}\n              >\n                {menuOptions.USUARIOS}\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 0,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"42vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React from \"react\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div container style={{ zIndex: 10000 }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n        </Grid>\n        <MediaQuery minDeviceWidth={1300}>\n          <Grid item xs={12} className={props.classes.textMenu}>\n            {menuOptions.AGENDA}\n          </Grid>\n        </MediaQuery>\n      </Grid>\n\n      {props.open ? (\n        <div className={classes.subMenuContainer}>\n          <Grid container style={{ width: \"auto\", display: \"block\" }}>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_DIARIA === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n            >\n              {menuOptions.Agenda_DIARIA}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_SEMANAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n            >\n              {menuOptions.Agenda_SEMANAL}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_MENSUAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n            >\n              {menuOptions.Agenda_MENSUAL}\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 0,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"2vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport InformacionEmpresaMenu from \"./InformacionEmpresaMenu\";\nimport AgendaMenu from \"./AgendaMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerBigMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openAgenda, setOpenAgenda] = useState(false);\n  const [openInformacionEmpresa, setOpenInformacionEmpresa] = useState(false);\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  useEffect(() => {\n    setOpenAgenda(false);\n    setOpenInformacionEmpresa(false);\n  }, [menuSelected]);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onMouseLeave={() => setOpenAgenda(false)}\n          onMouseOver={() => setOpenAgenda(true)}\n        >\n          <AgendaMenu open={openAgenda} classes={classes} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          onMouseLeave={() => setOpenInformacionEmpresa(false)}\n          onMouseOver={() => setOpenInformacionEmpresa(true)}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n        >\n          <InformacionEmpresaMenu\n            open={openInformacionEmpresa}\n            classes={classes}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={classes.gridItemMenu}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n\n    \"&:Hover\": {\n      fontWeight: \"bold\",\n      backgroundColor: \"#bf2231\",\n      cursor: \"pointer\",\n      color: \"#fff\",\n    },\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"center\",\n    marginTop: 10,\n    fontSize: 10,\n  },\n  mainContainer: {\n    borderRight: \"2px solid #de3444\",\n    height: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport ContainerBigMenu from \"./ContainerBigMenu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function BigMenu(props) {\n  const classes = useStyles();\n\n  const getPrestadora = () => {\n    const prestadora = JSON.parse(localStorage.getItem(\"prestadora\"));\n\n    return prestadora.nombre;\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <ContainerBigMenu />\n      </div>\n      <div>\n        <div className={classes.containerBar}>\n          <div className={classes.infoEmpresa}>\n            Prestadora: {getPrestadora()}\n          </div>\n        </div>\n        <div className={classes.containerPrimary}>\n          <PrimaryContainer></PrimaryContainer>\n        </div>\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"5%\",\n    minHeight: \"100%\",\n    backgroundColor: \"#333\",\n    zIndex: 20,\n  },\n  infoEmpresa: {\n    width: \"95%\",\n    padding: 10,\n    paddingTop: 15,\n  },\n  containerBar: {\n    float: \"right\",\n    width: \"95%\",\n    height: \"5vh\",\n    minHeight: \"10%\",\n    borderBottom: \"1px solid #de3444\",\n    backgroundColor: \"#fff\",\n    fontWeight: \"bold\",\n    color: \"#de3444\",\n    zIndex: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"95%\",\n    height: \"93vh\",\n    zIndex: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_DIARIA, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_DIARIA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_DIARIA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_SEMANAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_SEMANAL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL, dispatch)}\n          className={\n            menuSelected === menuOptions.Agenda_MENSUAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_MENSUAL}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { gotoMenu } from \"../MenuFunctions\";\n\nexport default function InformacionEmpresaSmallMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.COSTO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.COSTO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.ESPECIALIDADES, dispatch)}\n          className={\n            menuSelected === menuOptions.ESPECIALIDADES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.ESPECIALIDADES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES, dispatch)}\n          className={\n            menuSelected === menuOptions.OBRAS_SOCIALES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.OBRAS_SOCIALES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PERFIL, dispatch)}\n          className={\n            menuSelected === menuOptions.PERFIL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PERFIL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PLAN, dispatch)}\n          className={\n            menuSelected === menuOptions.PLAN\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PLAN}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PRESTADORA, dispatch)}\n          className={\n            menuSelected === menuOptions.PRESTADORA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PRESTADORA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.SERVICIOS, dispatch)}\n          className={\n            menuSelected === menuOptions.SERVICIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.SERVICIOS}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO, dispatch)}\n          className={\n            menuSelected === menuOptions.TIPO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.TIPO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.USUARIOS, dispatch)}\n          className={\n            menuSelected === menuOptions.USUARIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.USUARIOS}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faCalendarAlt,\n  faBook,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaSmallMenu from \"./AgendaSmallMenu\";\nimport InformacionEmpresaSmallMenu from \"./InformacionEmpresaSmallMenu\";\nimport {\n  gotoMenu,\n  agendaSeleccionada,\n  informacionEmpresaSeleccionada,\n  closeSession,\n} from \"../MenuFunctions\";\n\nexport default function ContainerSmallMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            agendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.AGENDA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.AGENDA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {agendaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <AgendaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            informacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.INFORMACION_EMPRESA, dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.INFORMACION_EMPRESA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {informacionEmpresaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <InformacionEmpresaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => closeSession(dispatch)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSignOutAlt} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.CERRAR_SESION}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n    fontSize: 35,\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"left\",\n    fontSize: 35,\n  },\n\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContainerSmallMenu from \"./ContainerSmallMenu\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nexport default function SmallMenu(props) {\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const classes = useStyles();\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <Grid container className={classes.gridHeader}>\n          <Grid item xs={2} sm={1} onClick={() => gotoMenu(menuOptions.MENU)}>\n            <FontAwesomeIcon icon={faBars} />\n          </Grid>\n          <Grid item xs={9} sm={10}>\n            <span style={{ fontSize: 27 }}>{menuSelected}</span>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className={classes.containerPrimary}>\n        {menuSelected !== menuOptions.AGENDA &&\n        menuSelected !== menuOptions.INFORMACION_EMPRESA &&\n        menuSelected !== menuOptions.MENU ? (\n          <PrimaryContainer />\n        ) : (\n          <ContainerSmallMenu />\n        )}\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"100%\",\n    minHeight: \"6%\",\n    backgroundColor: \"#de3444\",\n    zIndex: 20,\n    paddingLeft: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n  gridHeader: { height: \"100%\", fontSize: 35, color: \"white\", marginTop: \"1%\" },\n}));\n","import React, { useEffect } from \"react\";\nimport MediaQuery from \"react-responsive\";\nimport BigMenu from \"./Menu/BigMenu/BigMenu\";\nimport SmallMenu from \"./Menu/SmallMenu/SmallMenu\";\nimport { refreshRefreshToken, refreshToken } from \"Utils/functions\";\nimport { useDispatch } from \"react-redux\";\nexport default function Logged() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    refreshToken(dispatch);\n    refreshRefreshToken(dispatch);\n  });\n\n  return (\n    <div\n      style={{\n        height: \"99vh\",\n        width: \"100vw\",\n      }}\n    >\n      <MediaQuery minDeviceWidth={1300}>\n        <BigMenu />\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={1300}>\n        <SmallMenu />\n      </MediaQuery>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\nimport { isAlive } from \"Utils/functions\";\nexport default function MenuSwitch() {\n  const dispatch = useDispatch();\n  const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n  useEffect(() => {\n    const stored_token = localStorage.getItem(\"token\");\n\n    if (stored_token !== null && stored_token !== \"\") {\n      isAlive(dispatch, login);\n    }\n  });\n\n  return login === 0 ? <Login></Login> : <Logged></Logged>;\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n  open_modal: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n    case MODAL_HISTORIA_CLINICA:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n  CLEAN_BUSCAR_TURNOS,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n    case CLEAN_BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: [],\n        profesional: 0,\n        paciente: 0,\n        actuales: 1,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { ERROR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_USUARIO, SET_LISTA_USUARIOS } from \"actions/types\";\n\nconst initialState = {\n  usuario: {},\n  listaUsuarios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USUARIO:\n      return {\n        ...state,\n        usuario: action.payload,\n      };\n    case SET_LISTA_USUARIOS:\n      return {\n        ...state,\n        listaUsuarios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PERFIL, SET_LISTA_PERFIL } from \"actions/types\";\nconst initialState = {\n  perfil: {},\n  listaPerfiles: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PERFIL:\n      return {\n        ...state,\n        perfil: action.payload,\n      };\n    case SET_LISTA_PERFIL:\n      return {\n        ...state,\n        listaPerfiles: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\nimport ErrorMessageReducer from \"./ErrorMessageReducer\";\nimport UsuariosReducer from \"./UsuariosReducer\";\nimport PerfilReducer from \"./PerfilReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n  errorMessage: ErrorMessageReducer,\n  usuarios: UsuariosReducer,\n  perfil: PerfilReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}