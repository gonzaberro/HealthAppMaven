{"version":3,"sources":["imagenes/fondo.png","actions/types.js","components/Login/LeftSideLogin.jsx","actions/LoginActions.js","components/Login/Login.jsx","Utils/constants.js","components/Logged/LeftMenu.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","actions/AgendaActions.js","Utils/functions.js","components/Logged/Agenda/grabarTurnoLogica.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/ProfesionalActions.js","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","actions/PrestadoraActions.js","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","components/Logged/FormsABM/Profesional/ProfesionalTable.jsx","components/Logged/FormSelect.jsx","components/Logged/FormsABM/Profesional/ProfesionalForm.jsx","components/Logged/FormsABM/Profesional/Profesional.jsx","components/Logged/FormsABM/Paciente/PacienteTable.jsx","components/Logged/FormsABM/Paciente/PacienteForm.jsx","components/Logged/FormsABM/Paciente/Paciente.jsx","actions/HistoriaClinicaActions.js","components/Logged/FormsABM/HistoriaClinica/HeaderListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/ErrorMessageReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ERROR_MESSAGE","LeftSideLogin","classes","useStyles","dispatch","useDispatch","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","variant","form","noValidate","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","MenuItem","value","TextField","margin","required","name","type","Button","color","submit","onClick","login","payload","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","menuOptions","url_servidor","error_generico","horarios","LeftMenu","menuSelected","useSelector","state","globalReducer","useState","clickedMenu","setClickedMenu","expanded","setExpanded","clickOnMenu","menu","onMouseLeave","onSelect","selected","limpiar","Nav","eventKey","navitemStyle","onMouseOver","cursor","subnavStyle","title","icon","faCalendarAlt","faSearch","faUserMd","faUser","faFileMedical","faBook","setDoctor","data","setHorario","EditAgendaHeader","headerGrid","lg","headerSpan","borderBottom","paddingBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","opcionRepetir","onChange","event","target","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","Date","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","tipo","programar","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","dni","getTurnos","profesional","fetch","method","headers","then","response","json","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","grabarTurno","turnoInfo","fechaCalendario","profesional_seleccionado","console","log","body","JSON","stringify","cdTurno","hora","horario","paciente","doctor","servicio","cd_servicio","tipoServicio","cdTipoServicio","notas","nota","status","message","sendTurno","optionsProfesional","listaProfesionales","options","map","push","nombre","apellido","especialidad","optionsPaciente","listaPacientes","optionsServicios","listaServicios","optionsTipoServicios","listaTipoServicios","optionsHorarios","EditAgendaItem","turno_info","editTurnoReducer","agenda_reducer","enqueueSnackbar","useSnackbar","fecha_agenda","useEffect","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","filter","option","isDisabled","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","toLocaleString","timeZone","buttons","eliminarTurno","borderTop","maxWidth","minWidth","base","setProfesional","getListaProfesionales","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","undefined","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","userSelect","turnos","key","gridHorarios","labelHorario","containerTurnosGrid","Chip","clickable","chipTurnos","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","Error","catch","error","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","AgendaMensualDias","gotoDiaCalendario","numero_dia","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","especialidadesPaciente","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","setPrestadora","prestadora","getPrestadoras","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","cd_prestadora","nuevaPrestadora","PrestadoraTable","prestadoras","listaPrestadoras","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","buscarTurnosPaciente","activos","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","setTimeout","clearTimeout","subHeaderComponentMemo","useMemo","e","onClear","columns","cell","row","sortable","selector","button","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","buscarActivos","tabSeleccionada","setValue","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","listaTurnos","armarListaTurnos","Card","CardContent","textTransform","gutterBottom","pos","CardActions","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","profesionalSeleccionado","deleteProfesional","FormSelect","handleChange","defaultState","sexo","email","seguroMalaPraxis","cuit","registroNacPrestadores","ProfesionalForm","useReducer","newState","setProfesionalForm","especialidadesOptions","keys","handleInputChange","nuevoProfesional","objProfesional","Profesional","pacienteSeleccionado","deletePaciente","fecha_nacimiento","nroAfiliado","PacienteForm","setPacienteForm","planesOptions","nuevoPaciente","objPlan","Paciente","setModalHistoriaClinica","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","HeaderListaHistoriaClinica","especialidadSeleccionada","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","deleteHistoriaClinica","id_historia_clinica","callBack","especialidadPaciente","armarListaHistoriaClinica","historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","nuevaHistoriaClinica","gridInputs","handleProfesional","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","open_modal","Modal","onClose","aria-labelledby","aria-describedby","PrimaryContainer","errorMessage","switchMenu","Logged","MenuSwitch","login_state","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","maxSnack","timeOut","newestOnTop","preventDuplicates","position","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.084da146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\n\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\n\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\n\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const MODAL_HISTORIA_CLINICA = \"MODAL_HISTORIA_CLINICA\";\r\nexport const ERROR_MESSAGE = \"ERROR_MESSAGE\";\r\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\n\nexport default function LeftSideLogin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoLogin = () => {\n    dispatch(setLogin(1)); //Voy a marcar el login\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <form className={classes.form} noValidate>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Institución\"\n            fullWidth\n          >\n            <MenuItem value={30}>FSINET</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","export const menuOptions = {\n  HOME: \"home\",\n  CHARTS: \"charts\",\n  AGENDA: \"agenda\",\n  OBRAS_SOCIALES: \"obras_sociales\",\n  PROFESIONALES: \"profesionales\",\n  PACIENTES: \"pacientes\",\n  ESPECIALIDADES: \"especialidades\",\n  Agenda_DIARIA: \"agenda_diaria\",\n  Agenda_MENSUAL: \"agenda_mensual\",\n  Agenda_SEMANAL: \"agenda_semanal\",\n  PLAN: \"PLAN\",\n  PRESTADORA: \"PRESTADORA\",\n  SERVICIOS: \"SERVICIOS\",\n  TIPO_SERVICIO: \"TIPO_SERVICIO\",\n  COSTO_SERVICIO: \"COSTO_SERVICIO\",\n  HISTORIA_CLINICA: \"HISTORIA_CLINICA\",\n  BUSCAR_TURNO: \"BUSCAR_TURNO\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\nexport const error_generico = \"Error interno en el servidor\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import React, { useState } from \"react\";\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarAlt,\n  faBook,\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\n\nexport default function LeftMenu() {\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const [clickedMenu, setClickedMenu] = useState(0);\n  const [expanded, setExpanded] = useState(false);\n\n  const clickOnMenu = (menu) => {\n    if (clickedMenu === menu) {\n      setExpanded(expanded ? false : true);\n    } else {\n      setExpanded(true);\n    }\n    setClickedMenu(menu);\n  };\n\n  return (\n    <SideNav\n      onMouseLeave={() => setExpanded(false)}\n      onSelect={(selected) => {\n        dispatch({\n          type: SWITCH_MENU,\n          payload: { menu: selected, limpiar: true },\n        });\n        setExpanded(false);\n      }}\n      expanded={false}\n    >\n      <SideNav.Nav selected={menuSelected}>\n        <NavItem\n          eventKey={menuSelected}\n          navitemStyle={{ backgroundColor: \"#db3d44\" }}\n        ></NavItem>\n        <NavItem\n          onMouseOver={() => clickOnMenu(1)}\n          navitemStyle={{ cursor: \"pointer\" }}\n          subnavStyle={\n            clickedMenu === 1 && expanded\n              ? { display: \"block\" }\n              : { display: \"none\" }\n          }\n          eventKey={menuOptions.AGENDA}\n          title=\"Agenda\"\n        >\n          <NavIcon>\n            <FontAwesomeIcon icon={faCalendarAlt} />\n          </NavIcon>\n          <NavText>Agenda</NavText>\n          <NavItem eventKey={menuOptions.Agenda_DIARIA}>\n            <NavText>Agenda Diaria</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_SEMANAL}>\n            <NavText>Agenda Semanal</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.Agenda_MENSUAL}>\n            <NavText>Agenda Mensual</NavText>\n          </NavItem>\n        </NavItem>\n        <NavItem eventKey={menuOptions.BUSCAR_TURNO} title=\"Buscar Turno\">\n          <NavIcon eventKey={menuOptions.BUSCAR_TURNO}>\n            <FontAwesomeIcon icon={faSearch} />\n          </NavIcon>\n          <NavText>Buscar Turno</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.PROFESIONALES} title=\"Profesionales\">\n          <NavIcon eventKey={menuOptions.PROFESIONALES}>\n            <FontAwesomeIcon icon={faUserMd} />\n          </NavIcon>\n          <NavText>Profesionales</NavText>\n        </NavItem>\n        <NavItem eventKey={menuOptions.PACIENTES} title=\"Pacientes\">\n          <NavIcon eventKey={menuOptions.PACIENTES}>\n            <FontAwesomeIcon icon={faUser} />\n          </NavIcon>\n          <NavText>Pacientes</NavText>\n        </NavItem>\n        <NavItem\n          eventKey={menuOptions.HISTORIA_CLINICA}\n          title=\"Historia Clínica\"\n        >\n          <NavIcon eventKey={menuOptions.HISTORIA_CLINICA}>\n            <FontAwesomeIcon icon={faFileMedical} />\n          </NavIcon>\n          <NavText>Historia Clínica</NavText>\n        </NavItem>\n        <NavItem\n          onMouseOver={() => clickOnMenu(2)}\n          navitemStyle={{ cursor: \"pointer\" }}\n          subnavStyle={\n            clickedMenu === 2 && expanded\n              ? { display: \"block\" }\n              : { display: \"none\" }\n          }\n          title=\"Información Empresa\"\n        >\n          <NavIcon>\n            <FontAwesomeIcon icon={faBook} />\n          </NavIcon>\n          <NavText>Información Empresa</NavText>\n          <NavItem eventKey={menuOptions.COSTO_SERVICIO}>\n            <NavText>Costo Servicio</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.ESPECIALIDADES}>\n            <NavText>Especialidades</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.OBRAS_SOCIALES}>\n            <NavText>Obras Sociales</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PLAN}>\n            <NavText>Planes</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.PRESTADORA}>\n            <NavText>Prestadoras</NavText>\n          </NavItem>\n\n          <NavItem eventKey={menuOptions.SERVICIOS}>\n            <NavText>Servicios</NavText>\n          </NavItem>\n          <NavItem eventKey={menuOptions.TIPO_SERVICIO}>\n            <NavText>Tipo Servicio</NavText>\n          </NavItem>\n        </NavItem>\n      </SideNav.Nav>\n    </SideNav>\n  );\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    paddingBottom: 17,\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.status === 200 && callback) {\n        cleanProgramar();\n        cleanEditTurno();\n        callback();\n\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el turno\", tipo: \"success\" },\n        });\n      }\n    });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/1/horarios\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      });\n  };\n}\n","/* const getAllInputNames = () => {\n  const form = document.getElementById(\"form\");\n  if (form == null) return [];\n\n  let arrayOfInputNames = [];\n  const inputs = form.getElementsByTagName(\"input\");\n  for (let i = 0; i < inputs.length; i++) {\n    arrayOfInputNames.push(inputs[i].name);\n  }\n  return arrayOfInputNames;\n};\n\nexport const setDefaultFormInput = () => {\n  const names = getAllInputNames();\n\n  let state = {};\n  if (names != null && names.length > 0) {\n    state = names.reduce((acc, curr) => {\n      acc[curr] = \"\";\n      return acc;\n    }, {});\n  }\n  return state;\n}; */\n\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\n","import { url_servidor } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      programarAgenda: data.programarAgenda,\n    }),\n  }).then(function (response) {\n    if (response.status === 200) {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Se guardó el turno\",\n          tipo: \"success\",\n        },\n      });\n\n      data.dispatch(\n        getTurnos(data.fechaCalendario, data.profesional_seleccionado)\n      );\n      data.dispatch(cleanProgramar());\n      data.dispatch(setDefault());\n    } else {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Error al guardar el turno\",\n          tipo: \"error\",\n        },\n      });\n    }\n  });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n  };\n  console.log(data.programar);\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nconst optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (\n        turno_info.paciente !== \"\" &&\n        turno_info.doctor !== \"\" &&\n        turno_info.horario !== \"\" &&\n        turno_info.servicio !== \"\" &&\n        turno_info.tipoServicio !== \"\"\n      ) {\n        grabarTurno(\n          turno_info,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      }\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const setFechaEsp = (fecha, hora) => {\n    fecha = fecha + \" \" + hora;\n    return new Date(fecha).toLocaleString(\"es-ES\", {\n      timeZone: \"America/Argentina/Buenos_Aires\",\n    });\n  };\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={turno_info.cdTurno > 0 ? false : true}\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el profesional\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el profesional\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el paciente\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el paciente\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import {\n  SET_TIPO_SERVICIO,\n  SET_LISTA_TIPO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el tipo de servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el tipo de servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n      setOpen(false);\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  const editTurno = (turno) => {\n    turno.fecha = fechaString(new Date(turno.fecha));\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <Chip\n                        clickable={true}\n                        key={index}\n                        className={classes.chipTurnos}\n                        onClick={() => editTurno(turno)}\n                        color=\"primary\"\n                        label={\n                          turno.paciente.dni +\n                          \" - \" +\n                          turno.paciente.nombre +\n                          \" \" +\n                          turno.paciente.apellido +\n                          \" (\" +\n                          turno.tipoServicio.nombre +\n                          \")\"\n                        }\n                      ></Chip>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"90vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(setDoctor(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import {\n  SET_OBRA_SOCIAL,\n  SET_LISTA_OBRA_SOCIAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la obra social\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la obra social\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Obra Social\", {\n            variant: \"success\",\n          });\n          dispatch(getListaObrasSocial());\n        } else {\n          enqueueSnackbar(\"Error al guardar la Obra Social\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el plan\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el plan\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n          nuevoPlan();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPlan}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (nombre !== \"\" && cdServicio !== \"\") {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaServicios());\n          nuevServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(0);\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteServicio(servicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={2} md={2} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={10} md={10} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.dni} - {turno.paciente.nombre}{\" \"}\n                      {turno.paciente.apellido} ({turno.tipoServicio.nombre})\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import { SET_TURNOS_VISTA_MENSUAL, SET_TURNOS_VISTA_SEMANAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/mes/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/semana/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={2} md={2} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={10} md={10} sm={8} xs={8}>\n                    <span\n                      key={\"span_paciente_\" + index_dia}\n                      style={{ fontSize: 9 }}\n                    >\n                      {turno.paciente.dni} {turno.paciente.nombre}{\" \"}\n                      {turno.paciente.apellido}{\" \"}\n                      <span style={{ fontSize: 8 }}>\n                        ({turno.tipoServicio.nombre})\n                      </span>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 10,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"85vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  SET_ESPECIALIDAD,\n  SET_LISTA_ESPECIALIDAD,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function especialidadesPaciente(dni) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/paciente/\" + dni, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la especialidad\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó la especialidad\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Especialidad\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n        } else {\n          enqueueSnackbar(\"Error al guardar la Especialidad\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la prestadora\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la prestadora\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Prestadora\", {\n            variant: \"success\",\n          });\n          dispatch(getPrestadoras());\n          nuevaPrestadora();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Prestadora\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarHorario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deletePrestadora(prestadora)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== \"\" && cdTipoServicio !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaTipoServicios());\n          nuevoTipoServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { BUSCAR_TURNOS, BUSCAR_PACIENTE, BUSCAR_PROFESIONAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function buscarTurnosPaciente(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/paciente/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanTurnos() {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_TURNOS,\n      payload: [],\n    });\n  };\n}\n\nexport function buscarTurnosProfesinal(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/profesional/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setBuscarProfesional,\n  buscarTurnosProfesinal,\n} from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal(buscarInfo.profesional, buscarInfo.actuales)\n      );\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.profesional]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  buscarTurnosPaciente,\n  setBuscarPaciente,\n} from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0 && buscarInfo.actuales !== undefined) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarActivos = useSelector((state) => state.buscarTurnos.actuales);\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarActivos === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarActivos === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaTurnos() {\n  const listaTurnos = useSelector((state) => state.buscarTurnos.turnos);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return listaTurnos.map((turno) => {\n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              <FontAwesomeIcon icon={faEye} />\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return listaTurnos && listaTurnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaTurnos ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { cleanTurnos } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(cleanTurnos());\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n\n    paddingTop: 0,\n    height: \"100vh\",\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import {\n  SET_COSTO_SERVICIO,\n  SET_LISTA_COSTO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el costo del servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el costo del servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: {\n            cdPlan: cdPlan,\n            cdServicio: cdServicio,\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          servicio: { cd_servicio: cdServicio, nombre: \"\" },\n          plan: { cd_plan: cdPlan, nombre: \"\" },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          nuevoCostoServicio();\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.plan) setCdPlan(costoServicio.plan.cd_plan);\n    if (costoServicio.id)\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n    if (costoServicio.servicio)\n      setCdServicio(costoServicio.servicio.cd_servicio);\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={guardarPlan}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n    paddingRight: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.cdServicio,\n                costoServicio.id.cdPlan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={4} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setProfesional(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n  disabled,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        disabled={disabled ? disabled : false}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option.value}-${index}`} value={option.value}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport FormSelect from \"../../FormSelect\";\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  const especialidadesOptions = listaEspecialidades\n    ? listaEspecialidades.map((e) => {\n        return { name: e.nombre, value: e.cd_especialidad };\n      })\n    : [];\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e.target.value });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objProfesional),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Profesional\", {\n            variant: \"success\",\n          });\n          dispatch(getListaProfesionales());\n          nuevoProfesional();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Profesional\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoProfesional = () => {\n    dispatch(setProfesional({}));\n    setProfesionalForm(defaultState);\n    setEspecialidad(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={profesional.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"especialidad\"\n            label=\"Especialidad\"\n            options={especialidadesOptions}\n            value={(especialidad && especialidad.cd_especialidad) || \"\"}\n            handleChange={handleEspecialidad}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={8} lg={9} className={classes.lista}>\n        <ProfesionalTable />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={4}\n        lg={3}\n        style={{ width: \"100%\" }}\n        className={classes.borderForm}\n      >\n        <ProfesionalForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { buscarTurnosPaciente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setPaciente(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport FormSelect from \"components/Logged/FormSelect\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const planesOptions = listaPlanes\n    ? listaPlanes.map((e) => {\n        return { name: e.obraSocial.nombre + \" \" + e.nombre, value: e.cd_plan };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e.target.value });\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Paciente\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPacientes());\n          nuevoPaciente();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Paciente\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoPaciente = () => {\n    dispatch(setPaciente({}));\n    setPacienteForm(defaultState);\n    setPlan(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={paciente.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"plan\"\n            label=\"Plan\"\n            options={planesOptions}\n            value={(plan && plan.cd_plan) || \"\"}\n            handleChange={handlePlan}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarPaciente}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={9} lg={9} className={classes.lista}>\n        <PacienteTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={3} lg={3} className={classes.borderForm}>\n        <PacienteForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setModalHistoriaClinica(open) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_HISTORIA_CLINICA,\n      payload: open,\n    });\n  };\n}\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id, callBack, especialidadPaciente) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.status === 200) {\n        callBack();\n        especialidadPaciente();\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se elimnó la historia clinica\",\n            tipo: \"success\",\n          },\n        });\n      }\n    });\n  };\n}\n\nexport function getListaHistoriaClinica(dni, especialidad) {\n  return (dispatch) => {\n    fetch(\n      `${url_servidor}historiaClinica/dni/${dni}/especialidad/${especialidad}`,\n      {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanHistoriaClinica() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LISTA_HISTORIA_CLINICA,\n      payload: [],\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { setEspecialidad } from \"actions/EspecialidadActions\";\n\nexport default function HeaderListaHistoriaClinica() {\n  const [especialidadSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n\n  useEffect(() => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: especialidadSeleccionada,\n        nombre: \"\",\n      })\n    );\n    setValue(especialidadSeleccionada);\n    dispatch(getListaHistoriaClinica(paciente, especialidadSeleccionada));\n    dispatch(especialidadesPaciente(paciente));\n  }, [dispatch, paciente, especialidadSeleccionada]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  const createTabs = () => {\n    return listaEspecialidades.map((especialidad) => {\n      return (\n        <Tab\n          key={especialidad.cd_especialidad}\n          label={especialidad.nombre}\n          value={especialidad.cd_especialidad}\n        />\n      );\n    });\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModalHistoriaClinica(true));\n  };\n\n  return (\n    <div style={{ height: \"10vh\" }}>\n      <Grid container style={{ margin: 10, marginRight: 20 }}>\n        <Grid item md={8} sm={4} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n        <Grid item md={1} sm={2} xs={12}></Grid>\n      </Grid>\n      <Paper square>\n        <Tabs\n          value={especialidadSeleccionada}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          {listaEspecialidades.length && paciente !== 0 ? (\n            <Tab key={0} label=\"Todas\" value={0} />\n          ) : (\n            \"\"\n          )}\n          {listaEspecialidades.length && paciente !== 0 ? createTabs() : \"\"}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n  eliminarHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ListaHistoriaClinica() {\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const deleteHistoriaClinica = (historiaClinica) => {\n    confirmAlert({\n      title: `Historia Clínica #${historiaClinica.id_historia_clinica}`,\n      message:\n        \"Paciente: \" +\n        historiaClinica.paciente.nombre +\n        \" \" +\n        historiaClinica.paciente.apellido +\n        \" - \" +\n        historiaClinica.paciente.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarHistoriaClinica(\n                historiaClinica.id_historia_clinica,\n                () =>\n                  dispatch(\n                    getListaHistoriaClinica(\n                      paciente,\n                      especialidad.cd_especialidad\n                    )\n                  ),\n                () => dispatch(especialidadesPaciente(paciente))\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              #{historia_clinica.id_historia_clinica} - Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Grid container>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faEye} />\n                </Button>\n              </Grid>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => deleteHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n      cursor: \"pointer\",\n    },\n  },\n  rootSeleccionado: {\n    minWidth: 275,\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"85vh\",\n    minHeight: \"85vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Select from \"react-select\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    } else {\n      historiaClinica.fechaQuirurgica = null;\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (value) => {\n    setProfesional({ dni: value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objHistoriaClinica),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n            variant: \"success\",\n          });\n          dispatch(\n            getListaHistoriaClinica(paciente, especialidad.cd_especialidad)\n          );\n          dispatch(especialidadesPaciente(paciente));\n          nuevaHistoriaClinica();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPaciente(listaPacientes)}\n            isSearchable={true}\n            placeholder={<div>Paciente</div>}\n            styles={colourStyles}\n            isDisabled={true}\n            value={optionsPaciente(listaPacientes).filter(\n              (option) => option.value === paciente\n            )}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsProfesional(listaProfesionales)}\n            isSearchable={true}\n            placeholder={<div>Profesional</div>}\n            styles={colourStyles}\n            onChange={(value) => handleProfesional(value.value)}\n            value={\n              profesional\n                ? optionsProfesional(listaProfesionales).filter(\n                    (option) => option.value === profesional.dni\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={guardarHistoriaClinica}\n              >\n                Guardar\n              </Button>\n            </Grid>\n            <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => dispatch(setModalHistoriaClinica(false))}\n              >\n                Cerrar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  setModalHistoriaClinica,\n  setHistoriaClinica,\n  cleanHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../../BuscarTurno/TablaPacientes\";\nimport HeaderListaHistoriaClinica from \"./HeaderListaHistoriaClinica\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.historiaClinica.open_modal);\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0));\n    dispatch(cleanHistoriaClinica());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModalHistoriaClinica(false));\n    dispatch(setHistoriaClinica({}));\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"100vh\" }}>\n        <Grid item xs={12} style={{ height: \"100vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"100vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <HeaderListaHistoriaClinica />\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\n\nimport Profesional from \"./FormsABM/Profesional/Profesional\";\nimport Paciente from \"./FormsABM/Paciente/Paciente\";\nimport HistoriaClinica from \"./FormsABM/HistoriaClinica/HistoriaClinica\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function PrimaryContainer() {\n  const { enqueueSnackbar } = useSnackbar();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const errorMessage = useSelector((state) => state.errorMessage.error);\n  useEffect(() => {\n    if (errorMessage.tipo !== undefined) {\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.tipo,\n      });\n    }\n  }, [enqueueSnackbar, errorMessage]);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return <div>{switchMenu()}</div>;\n}\n","import React from \"react\";\nimport LeftMenu from \"./LeftMenu\";\nimport PrimaryContainer from \"./PrimaryContainer\";\n\nexport default function Logged() {\n  return (\n    <div\n      style={{\n        maxHeight: \"100vh\",\n        overflowY: \"auto\",\n        width: \"100vw\",\n      }}\n    >\n      <LeftMenu></LeftMenu>\n      <div style={{ paddingLeft: 65 }}>\n        <PrimaryContainer></PrimaryContainer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\n\nexport default function MenuSwitch() {\n  const GoToMenu = () => {\n    const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n    if (login === 0) {\n      return <Login></Login>;\n    } else {\n      return <Logged></Logged>;\n    }\n  };\n\n  return GoToMenu();\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 1, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n  open_modal: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n    case MODAL_HISTORIA_CLINICA:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { ERROR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\nimport ErrorMessageReducer from \"./ErrorMessageReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n  errorMessage: ErrorMessageReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}