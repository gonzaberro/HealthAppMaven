{"version":3,"sources":["imagenes/fondo.png","actions/types.js","components/Login/LeftSideLogin.jsx","actions/LoginActions.js","components/Login/Login.jsx","actions/EditTurnoActions.js","components/Logged/Agenda/EditAgendaHeader.jsx","actions/ProgramarAgendaActions.js","components/Logged/Agenda/RepetirDirariamente.jsx","components/Logged/Agenda/RepetirMensualmente.jsx","components/Logged/Agenda/RepetirSemanalmente.jsx","components/Logged/Agenda/ProgramarAgenda.jsx","Utils/constants.js","actions/AgendaActions.js","Utils/functions.js","components/Logged/Agenda/grabarTurnoLogica.js","components/Logged/Agenda/EditAgendaItem.jsx","actions/ProfesionalActions.js","actions/PacienteActions.js","actions/ServicioActions.js","actions/TipoServicioActions.js","components/Logged/Agenda/FilterDoctorAgenda.jsx","components/Logged/Agenda/ItemsAgendaHeader.jsx","components/Logged/Agenda/ItemsAgenda.jsx","components/Logged/Agenda/ItemsAgendaContainer.jsx","components/Logged/Agenda/Agenda.jsx","actions/ObraSocialActions.js","components/Logged/FormsABM/ObraSocial/ObraSocialForm.jsx","components/Logged/FormsABM/ObraSocial/ObraSocialTable.jsx","components/Logged/FormsABM/ObraSocial/ObraSocial.jsx","actions/PlanActions.js","components/Logged/FormsABM/Plan/PlanForm.jsx","components/Logged/FormsABM/Plan/PlanTable.jsx","components/Logged/FormsABM/Plan/Plan.jsx","components/Logged/FormsABM/Servicio/ServicioForm.jsx","components/Logged/FormsABM/Servicio/ServicioTable.jsx","components/Logged/FormsABM/Servicio/Servicio.jsx","components/Logged/Agenda Mensual/AgendaMensualHeader.jsx","components/Logged/Agenda Mensual/AgendaMensualHeaderDias.jsx","components/Logged/Agenda Mensual/TurnosDiaAgendaMensual.jsx","components/Logged/Agenda Mensual/AgendaMensualDias.jsx","actions/VistaMensualYSemanalActions.js","components/Logged/Agenda Mensual/AgendaMensualContainer.jsx","components/Logged/Agenda Mensual/AgendaMensual.jsx","components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx","components/Logged/Agenda Semanal/TurnosDiaAgendaSemanal.jsx","components/Logged/Agenda Semanal/AgendaSemanalDias.jsx","components/Logged/Agenda Semanal/AgendaSemanalContainer.jsx","components/Logged/Agenda Semanal/AgendaSemanal.jsx","actions/EspecialidadActions.js","components/Logged/FormsABM/Especialidad/EspecialidadForm.jsx","components/Logged/FormsABM/Especialidad/EspecialidadTable.jsx","components/Logged/FormsABM/Especialidad/Especialidad.jsx","actions/PrestadoraActions.js","components/Logged/FormsABM/Prestadora/PrestadoraForm.jsx","components/Logged/FormsABM/Prestadora/PrestadoraTable.jsx","components/Logged/FormsABM/Prestadora/Prestadora.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioForm.jsx","components/Logged/FormsABM/TipoServicio/TipoServicioTable.jsx","components/Logged/FormsABM/TipoServicio/TipoServicio.jsx","actions/BuscarTurnosActions.js","components/Logged/BuscarTurno/TablaProfesional.jsx","components/Logged/BuscarTurno/TablaPacientes.jsx","components/Logged/BuscarTurno/BuscarTurnoTabla.jsx","components/Logged/BuscarTurno/ListaTurnos.jsx","components/Logged/BuscarTurno/BuscarTurno.jsx","actions/CostoServicioActions.js","components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx","components/Logged/FormsABM/CostoServicio/CostoServicioTable.jsx","components/Logged/FormsABM/CostoServicio/CostoServicio.jsx","components/Logged/FormsABM/Profesional/ProfesionalTable.jsx","components/Logged/FormsABM/FormSelect.jsx","components/Logged/FormsABM/Profesional/ProfesionalForm.jsx","components/Logged/FormsABM/Profesional/Profesional.jsx","components/Logged/FormsABM/Paciente/PacienteTable.jsx","components/Logged/FormsABM/Paciente/PacienteForm.jsx","components/Logged/FormsABM/Paciente/Paciente.jsx","actions/HistoriaClinicaActions.js","components/Logged/FormsABM/HistoriaClinica/HeaderListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/ListaHistoriaClinica.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinicaForm.jsx","components/Logged/FormsABM/HistoriaClinica/HistoriaClinica.jsx","components/Logged/PrimaryContainer.jsx","components/Logged/Menu/BigMenu/InformacionEmpresaMenu.jsx","components/Logged/Menu/BigMenu/AgendaMenu.jsx","components/Logged/Menu/BigMenu/ContainerBigMenu.jsx","components/Logged/Menu/BigMenu/BigMenu.jsx","components/Logged/Menu/SmallMenu/AgendaSmallMenu.jsx","components/Logged/Menu/SmallMenu/InformacionEmpresaSmallMenu.jsx","components/Logged/Menu/SmallMenu/ContainerSmallMenu.jsx","components/Logged/Menu/SmallMenu/SmallMenu.jsx","components/Logged/Logged.jsx","components/MenuSwitch/MenuSwitch.jsx","reducers/LoginReducer.js","reducers/GlobalReducer.js","reducers/AgendaReducer.js","reducers/EditTurnoReducer.js","reducers/VistaMensualySemanalReducer.js","reducers/PlanReducer.js","reducers/ObraSocialReducer.js","reducers/EspecialidadReducer.js","reducers/PrestadoraReducer.js","reducers/ServicioReducer.js","reducers/TipoServicioReducer.js","reducers/CostoServicioReducer.js","reducers/ProfesionalReducer.js","reducers/PacienteReducer.js","reducers/HistoriaClinicaReducer.js","reducers/BuscarTurnoReducer.js","reducers/ProgramarAgendaReducer.js","reducers/ErrorMessageReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ERROR_MESSAGE","LeftSideLogin","classes","useStyles","dispatch","useDispatch","className","paper","Avatar","avatar","style","backgroundColor","Typography","component","variant","form","noValidate","FormControl","fullWidth","formControl","InputLabel","id","Select","labelId","label","MenuItem","value","TextField","margin","required","name","type","Button","color","submit","onClick","login","payload","Grid","container","display","item","xs","Link","href","colorText","makeStyles","theme","root","backgroundImage","require","palette","grey","backgroundSize","backgroundPosition","spacing","flexDirection","alignItems","colorBorder","borderColor","secondary","main","width","marginTop","paddingLeft","paddingRight","Login","CssBaseline","sm","md","Paper","elevation","square","height","paddingTop","setDoctor","data","setHorario","EditAgendaHeader","headerGrid","lg","headerSpan","borderBottom","paddingBottom","minHeight","textAlign","fontWeight","setRepetir","repetir","setCantidad","cantidad","RepetirDiariamente","props","programarAgenda","useSelector","state","opcionRepetir","onChange","event","target","InputLabelProps","shrink","marginRight","textField","spanRepetir","checkBoxContainer","textArea","maxHeight","borderRadius","gridContainer","border","padding","RepetirMensualmente","defaultValue","Date","numeroDia","dia","changeDiaRepeticion","RepetirSemanalmente","useState","seleccionado","diasSeleccionados","setDiasSeleccionados","cambiarDiaSeleccionado","dia_changed","arrayDias","aux_dias","ButtonGroup","aria-label","buttonSeleccionado","primary","custom_hover","ProgramarAgenda","opcionProgramar","tipo","programar","menuOptions","url_servidor","error_generico","horarios","setFechaAgenda","fecha","setDiaMesSeleccionado","selectProfesionalAgenda","dni","getTurnos","profesional","fetch","method","headers","then","response","json","fechaString","date","Intl","DateTimeFormat","year","format","month","day","validateForm","object","Object","values","some","field","formatDateString","parseInt","getMonth","getDate","getFullYear","grabarTurno","turnoInfo","fechaCalendario","profesional_seleccionado","console","log","body","JSON","stringify","cdTurno","hora","horario","paciente","doctor","servicio","cd_servicio","tipoServicio","cdTipoServicio","notas","nota","status","message","sendTurno","optionsProfesional","listaProfesionales","options","map","push","nombre","apellido","especialidad","optionsPaciente","listaPacientes","optionsServicios","listaServicios","optionsTipoServicios","listaTipoServicios","optionsHorarios","EditAgendaItem","turno_info","editTurnoReducer","agenda_reducer","enqueueSnackbar","useSnackbar","fecha_agenda","useEffect","confirmDeleteTurno","turno","cleanProgramar","cleanEditTurno","callback","isSearchable","placeholder","styles","colourStyles","filter","option","isDisabled","TextareaAutosize","rowsMax","FormControlLabel","control","Checkbox","checked","disabled","pacienteTurno","profesionalTurno","confirmAlert","title","toLocaleString","timeZone","buttons","eliminarTurno","borderTop","maxWidth","minWidth","base","setProfesional","getListaProfesionales","setPaciente","getListaPacientes","setServicio","getListaServicios","setTipoServicio","getListaTipoServicios","FilterDoctorAgenda","open","setOpen","anchorRef","React","useRef","selectedProfesional","setSelectedProfesional","selectedNombreProfesional","setSelectedNombreProfesional","selectProfesional","useCallback","undefined","handleClose","current","contains","ref","size","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","index","selected","ItemsAgendaHeader","diaActual","diaHoy","toDateString","minheight","arrowAgenda","valueOf","icon","faChevronLeft","gridContainerButtons","gridButtonHoy","fechaAgendaHoy","fechaAgenda","ye","mo","da","weekday","Array","getDay","gridFilterDoctor","faChevronRight","cursor","userSelect","turnos","key","gridHorarios","labelHorario","containerTurnosGrid","Chip","clickable","chipTurnos","editTurno","borderLeft","boxShadow","ItemsAgendaContainer","overflowY","Agenda","limpiar","setObraSocial","obraSocial","getListaObrasSocial","ObraSocialForm","nombreObraSocial","setNombreObraSocial","cdObraSocial","setCdObraSocial","obra_social","cd_os","nuevaObraSocial","headerForm","buttonForm","gridForm","ObraSocialTable","listaObrasSociales","deleteObraSocial","Error","catch","error","eliminarObraSocial","TableContainer","Table","TableHead","TableRow","TableCell","titleTable","TableBody","rowTable","scope","align","faTrash","table","fontSize","ObraSocial","listaOS","borderForm","borderRight","setPlan","Plan","getListaPlanes","PlanForm","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","cd_plan","nuevoPlan","PlanTable","listaPlanes","eliminarPlan","nombre_os","lista","ServicioForm","setNombre","cdServicio","setCdServicio","nuevServicio","ServicioTable","deleteServicio","editServicio","AgendaMensualHeader","crearFechaPrimerDia","mesActual","fechaSeleccionada","fechaActual","setMonth","toUpperCase","Hidden","only","borderGridDias","TurnosDiaAgendaMensual","dia_mes","vista_mensual_semanal","mes_calendario","index_dia","marginBottom","divTurno","minDeviceWidth","AgendaMensualDias","gotoDiaCalendario","numero_dia","menu","fecha_semana","dia_primer_dia","dias_calendario","dias","badge_numero","gridDias","Badge","badgeContent","showZero","gridTurnosDia","setDate","renderDiasCalendario","overflowX","AgendaMensualContainer","AgendaMensual","AgendaSemanalHeader","getMonday","diff","semanaActual","onejan","Math","ceil","anterior_lunes","dia_lunes","ye_lunes","fecha_sabado","mo_sabado","ye_sabado","siguiente_lunes","TurnosDiaAgendaSemanal","lineHeight","AgendaSemanalDias","fecha_seleccionada","badge_fecha","AgendaSemanal","setEspecialidad","especialidadesPaciente","getListaEspecialidad","EspecialidadForm","nombreEspecialidad","setNombreEspecialidad","cdEspecialidad","setCdEspecialidad","cd_especialidad","nuevaEspecialidad","EspecialidadTable","listaEspecialidades","deleteEspecialidad","eliminarEspecialidad","setPrestadora","prestadora","getPrestadoras","PrestadoraForm","cdPrestadora","setCdPrestadora","direccion","setDireccion","telefono","setTelefono","logo","setLogo","intervalo","setIntervalo","horaDesde","setHoraDesde","horaHasta","setHoraHasta","validarCampos","cd_prestadora","nuevaPrestadora","PrestadoraTable","prestadoras","listaPrestadoras","deletePrestadora","editPrestadora","TipoServicioForm","setCdTipoServicio","nuevoTipoServicio","TipoServicioTable","deleteTipoServicio","cd_tipo_servicio","setBuscarPaciente","actuales","buscarTurnosPaciente","activos","buscarTurnosProfesinal","FilterComponent","filterText","onFilter","Circular","CircularProgress","TablaProfesional","buscarInfo","buscarTurnos","pending","setPending","rows","setRows","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","toString","includes","toLowerCase","matricula","buscarEnTabla","timeout","setTimeout","clearTimeout","subHeaderComponentMemo","useMemo","e","onClear","columns","cell","row","sortable","selector","button","seleccionarProfesional","faEye","ignoreRowClick","allowOverflow","conditionalRowStyles","when","noHeader","subHeader","progressPending","progressComponent","pointerOnHover","subHeaderComponent","TablaPaciente","seleccionarPaciente","BuscarTurnoTabla","buscarActivos","tabSeleccionada","setValue","Tabs","indicatorColor","textColor","newValue","Tab","ListaTurnos","listaTurnos","armarListaTurnos","Card","CardContent","textTransform","gutterBottom","pos","CardActions","containerTurnos","length","rootAlert","Alert","severity","bullet","transform","BuscarTurno","setCostoServicio","costoServicio","getListaCostoServicios","CostoServicioForm","costo","setCosto","listaTipoServicio","nuevoCostoServicio","CostoServicioTable","listaCostoServicios","deleteCostoServicio","editCostoServicio","profesionalSeleccionado","deleteProfesional","FormSelect","handleChange","defaultState","sexo","email","seguroMalaPraxis","cuit","registroNacPrestadores","ProfesionalForm","useReducer","newState","setProfesionalForm","especialidadesOptions","keys","handleInputChange","nuevoProfesional","objProfesional","Profesional","pacienteSeleccionado","deletePaciente","fecha_nacimiento","nroAfiliado","PacienteForm","setPacienteForm","planesOptions","nuevoPaciente","objPlan","Paciente","setModalHistoriaClinica","setHistoriaClinica","historiaClinica","getListaHistoriaClinica","HeaderListaHistoriaClinica","especialidadSeleccionada","ListaHistoriaClinica","listaHistoriaClinica","historiaClinicaSeleccionada","deleteHistoriaClinica","id_historia_clinica","callBack","especialidadPaciente","armarListaHistoriaClinica","historia_clinica","rootSeleccionado","fechaIngreso","cantidadSesiones","fechaQuirurgica","diagnostico","tratamiento","seleccionarHistoriaClinica","fechaAutorizacion","cdFacturacion","cdValidacion","HistoriaClinicaForm","cirugia","setCirugia","historiaClinicaForm","setHistoriaClinicaForm","nuevaHistoriaClinica","gridInputs","handleProfesional","checkFechaCirugia","objHistoriaClinica","HistoriaClinica","open_modal","Modal","onClose","aria-labelledby","aria-describedby","PrimaryContainer","menuSelected","globalReducer","errorMessage","switchMenu","InformacionEmpresaMenu","gotoMenu","faBook","textMenu","subMenuContainer","subMenuOptions","subMenuSelected","borderTopLeftRadius","position","left","top","AgendaMenu","faCalendarAlt","AgendaSeleccionada","InformacionEmpresaSeleccionada","MenuLeft","openAgenda","setOpenAgenda","openInformacionEmpresa","setOpenInformacionEmpresa","mainContainer","gridItemMenu","gridSelected","onMouseLeave","onMouseOver","faSearch","faUserMd","faUser","faFileMedical","justifyContent","borderBottomLeftRadius","BigMenu","containerPrimary","float","selectedSubMenu","textSubMenu","InformacionEmpresaSmallMenu","ContainerSmallMenu","SmallMenu","gridHeader","faBars","Logged","maxDeviceWidth","MenuSwitch","login_state","initialState","borrarTurnos","listTurnos","info_turno","foundIndexHorario","findIndex","turnos_aux","splice","agregarTurnos","nuevo_turno","combineReducers","action","toastr","toastrReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","maxSnack","timeOut","newestOnTop","preventDuplicates","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a388a1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fondo.a7499bbf.png\";","/* ACCIONES AL CARGAR UN NUEVO NEGOCIO */\r\nexport const NEW_TURNO = \"NEW_TURNO\";\r\nexport const SET_LOGIN = \"SET_LOGIN\";\r\n\r\nexport const SWITCH_MENU = \"SWITCH_MENU\";\r\n\r\nexport const EDIT_PACIENTE = \"EDIT_PACIENTE\";\r\nexport const EDIT_SERVICIO = \"EDIT_SERVICIO\";\r\nexport const EDIT_DOCTOR = \"EDIT_DOCTOR\";\r\nexport const EDIT_PROGRAMAR = \"EDIT_PROGRAMAR\";\r\nexport const EDIT_HORARIO = \"EDIT_HORARIO\";\r\nexport const EDIT_FECHA = \"EDIT_FECHA\";\r\nexport const FECHA_AGENDA = \"FECHA_AGENDA\";\r\nexport const EDIT_ALL = \"EDIT_ALL\";\r\nexport const BORRAR_TURNO = \"BORRAR_TURNO\";\r\nexport const EDIT_NOTA = \"EDIT_NOTA\";\r\nexport const EDIT_TIPO_SERVICIO = \"EDIT_TIPO_SERVICIO\";\r\nexport const EDIT_CD_TURNO = \"EDIT_CD_TURNO\";\r\nexport const SET_DEFAULT = \"SET_DEFAULT\";\r\n\r\nexport const SELECT_DIA_MES = \"SELECT_DIA_MES\";\r\nexport const VISTAMENSUALSEMANAL = \"VISTAMENSUALSEMANAL\";\r\n\r\nexport const SET_OBRA_SOCIAL = \"SET_OBRA_SOCIAL\";\r\nexport const SET_LISTA_OBRA_SOCIAL = \"SET_LISTA_OBRA_SOCIAL\";\r\nexport const SET_PLAN = \"SET_PLAN\";\r\nexport const SET_LISTA_PLANES = \"SET_LISTA_PLANES\";\r\n\r\nexport const SET_ESPECIALIDAD = \"SET_ESPECIALIDAD\";\r\nexport const SET_LISTA_ESPECIALIDAD = \"SET_LISTA_ESPECIALIDAD\";\r\n\r\nexport const SET_SERVICIO = \"SET_SERVICIO\";\r\nexport const SET_LISTA_SERVICIOS = \"SET_LISTA_SERVICIOS\";\r\n\r\nexport const SET_PRESTADORA = \"SET_PRESTADORA\";\r\nexport const SET_LISTA_PRESTADORA = \"SET_LISTA_PRESTADORA\";\r\n\r\nexport const SET_TIPO_SERVICIO = \"SET_TIPO_SERVICIO\";\r\nexport const SET_LISTA_TIPO_SERVICIO = \"SET_LISTA_TIPO_SERVICIO\";\r\n\r\nexport const SET_COSTO_SERVICIO = \"SET_COSTO_SERVICIO\";\r\nexport const SET_LISTA_COSTO_SERVICIO = \"SET_LISTA_COSTO_SERVICIO\";\r\n\r\nexport const SET_PROFESIONAL = \"SET_PROFESIONAL\";\r\nexport const SET_LISTA_PROFESIONAL = \"SET_LISTA_PROFESIONAL\";\r\n\r\nexport const SET_PACIENTE = \"SET_PACIENTE\";\r\nexport const SET_LISTA_PACIENTE = \"SET_LISTA_PACIENTE\";\r\n\r\nexport const SET_HORARIOS = \"SET_HORARIOS\";\r\n\r\nexport const SET_TURNOS = \"SET_TURNOS\";\r\nexport const SELECT_PROFESIONAL = \"SELECT_PROFESIONAL\";\r\n\r\nexport const SET_HISTORIA_CLINICA = \"SET_HISTORIA_CLINICA\";\r\nexport const SET_LISTA_HISTORIA_CLINICA = \"SET_LISTA_HISTORIA_CLINICA\";\r\n\r\nexport const SET_TURNOS_VISTA_MENSUAL = \"SET_TURNOS_VISTA_MENSUAL\";\r\nexport const SET_TURNOS_VISTA_SEMANAL = \"SET_TURNOS_VISTA_SEMANAL\";\r\n\r\nexport const BUSCAR_TURNOS = \"BUSCAR_TURNOS\";\r\n\r\nexport const SET_TIPO = \"SET_TIPO\";\r\nexport const SET_REPETIR = \"SET_REPETIR\";\r\nexport const SET_CANTIDAD = \"SET_CANTIDAD\";\r\nexport const SET_ARRAY_DIAS = \"SET_ARRAY_DIAS\";\r\nexport const SET_DIA = \"SET_DIA\";\r\nexport const CLEAN_PROGRAMAR = \"CLEAN_PROGRAMAR\";\r\n\r\nexport const CLEAN_GLOBAL = \"CLEAN_GLOBAL\";\r\nexport const BUSCAR_PACIENTE = \"BUSCAR_PACIENTE\";\r\nexport const BUSCAR_PROFESIONAL = \"BUSCAR_PROFESIONAL\";\r\nexport const BUSCAR_ACTUALES = \"BUSCAR_ACTUALES\";\r\nexport const MODAL_HISTORIA_CLINICA = \"MODAL_HISTORIA_CLINICA\";\r\nexport const ERROR_MESSAGE = \"ERROR_MESSAGE\";\r\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../actions/LoginActions\";\n\nexport default function LeftSideLogin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoLogin = () => {\n    dispatch(setLogin(1)); //Voy a marcar el login\n  };\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar} style={{ backgroundColor: \"#de3444\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ingresar\n      </Typography>\n      <form className={classes.form} noValidate>\n        <FormControl\n          variant=\"outlined\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Institución\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            label=\"Institución\"\n            fullWidth\n          >\n            <MenuItem value={30}>FSINET</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"usuario\"\n          label=\"Usuario\"\n          name=\"usuario\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          id=\"password\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.submit}\n          onClick={gotoLogin}\n          style={{ backgroundColor: \"#de3444\" }}\n        >\n          Ingresar\n        </Button>\n        <Grid container style={{ display: \"none\" }}>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              Olvidó la contraseña?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" className={classes.colorText}>\n              {\"No tiene usuario? Registrese\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import { SET_LOGIN } from \"../actions/types\";\n\nexport function setLogin(login) {\n  //Cambio el valor del login para saber si estoy o no logueado\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGIN,\n      payload: login,\n    });\n  };\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeftSideLogin from \"./LeftSideLogin\";\n\nexport default function Login() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <LeftSideLogin />\n      </Grid>\n      <Grid item xs={12} sm={8} md={6}></Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: \"url(\" + require(\"../../imagenes/fondo.png\") + \")\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"20%\",\n  },\n  colorText: {\n    color: \"#de3444\",\n  },\n  colorBorder: {\n    borderColor: theme.palette.secondary.main + \" !important\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    paddingLeft: \"20%\",\n    paddingRight: \"20%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nexport function setDefault() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DEFAULT,\n    });\n  };\n}\n\nexport function setProgramar(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PROGRAMAR,\n      payload: data,\n    });\n  };\n}\nexport function setServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SERVICIO,\n      payload: data,\n    });\n  };\n}\n\nexport function setNota(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_NOTA,\n      payload: data,\n    });\n  };\n}\n\nexport function setPaciente(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_PACIENTE,\n      payload: data,\n    });\n  };\n}\nexport function setDoctor(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_DOCTOR,\n      payload: data,\n    });\n  };\n}\nexport function setFecha(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_FECHA,\n      payload: data,\n    });\n  };\n}\nexport function setHorario(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_HORARIO,\n      payload: data,\n    });\n  };\n}\nexport function editTurnoComplete(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_ALL,\n      payload: data,\n    });\n  };\n}\n\nexport function setTipoServicio(data) {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_TIPO_SERVICIO,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function EditAgendaHeader() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const nuevoTurno = () => {\n    dispatch(setDefault());\n  };\n\n  return (\n    <Grid className={classes.headerGrid} container>\n      <Grid item lg={8} md={8} sm={12} xs={12}>\n        <div className={classes.headerSpan}>Crear/Modificar Turnos</div>\n      </Grid>\n      <Grid item lg={4} md={4} sm={12} xs={12}>\n        <Button\n          variant=\"contained\"\n          onClick={() => nuevoTurno()}\n          style={{ width: \"100%\", marginTop: 5 }}\n        >\n          Nuevo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerGrid: {\n    borderBottom: \"1px solid #ccc\",\n    paddingBottom: 17,\n    minHeight: \"5%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n  },\n  headerSpan: {\n    paddingTop: 15,\n  },\n}));\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nexport function setTipo(tipo) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO,\n      payload: tipo,\n    });\n  };\n}\n\nexport function setRepetir(repetir) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_REPETIR,\n      payload: repetir,\n    });\n  };\n}\nexport function cleanProgramar() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAN_PROGRAMAR,\n    });\n  };\n}\n\nexport function setCantidad(cantidad) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_CANTIDAD,\n      payload: cantidad,\n    });\n  };\n}\n\nexport function setArrayDias(arrayDias) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ARRAY_DIAS,\n      payload: arrayDias,\n    });\n  };\n}\n\nexport function setDia(dia) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_DIA,\n      payload: dia,\n    });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setRepetir, setCantidad } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirDiariamente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 1 ? (\n        <Grid container>\n          <Grid item xs={6}>\n            <TextField\n              id=\"espacio_repeticion\"\n              label={\"Repetir Cada \" + programarAgenda.repetir + \" dia(s)\"}\n              type=\"number\"\n              value={programarAgenda.repetir}\n              onChange={(event) => changeEspacioRepeticion(event.target.value)}\n              variant=\"outlined\"\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"cantidad_repeticiones\"\n              label=\"Cantidad de Repeticiones\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={programarAgenda.cantidad}\n              onChange={(event) => changeCantidadRepeticion(event.target.value)}\n              className={classes.formControl}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setDia,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirMensualmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeDiaRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setDia(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1 && value <= 31) dispatch(setCantidad(value));\n  };\n  return (\n    <>\n      {props.opcionRepetir === 3 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" mes(es)\"}\n                type=\"number\"\n                value={programarAgenda.repetir}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"dia_repeticion\"\n                label={\n                  \"Repetir el dia nro '\" +\n                  programarAgenda.numeroDia +\n                  \"' del mes\"\n                }\n                value={programarAgenda.numeroDia}\n                onChange={(event) => changeDiaRepeticion(event.target.value)}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  setRepetir,\n  setCantidad,\n  setArrayDias,\n} from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n    dispatch(setArrayDias(aux_dias));\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) dispatch(setRepetir(value));\n  };\n  const changeCantidadRepeticion = (value) => {\n    if (value >= 1) dispatch(setCantidad(value));\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + programarAgenda.repetir + \" semana(s)\"}\n                type=\"number\"\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={programarAgenda.repetir}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                value={programarAgenda.cantidad}\n                variant=\"outlined\"\n                onChange={(event) =>\n                  changeCantidadRepeticion(event.target.value)\n                }\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} md={12} sm={12} item style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    programarAgenda.arrayDias[1] &&\n                    programarAgenda.arrayDias[1].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    programarAgenda.arrayDias[2] &&\n                    programarAgenda.arrayDias[2].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    programarAgenda.arrayDias[3] &&\n                    programarAgenda.arrayDias[3].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    programarAgenda.arrayDias[4] &&\n                    programarAgenda.arrayDias[4].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    programarAgenda.arrayDias[5] &&\n                    programarAgenda.arrayDias[5].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    programarAgenda.arrayDias[6] &&\n                    programarAgenda.arrayDias[6].seleccionado\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RepetirDiriamente from \"./RepetirDirariamente\";\nimport RepetirMensualmente from \"./RepetirMensualmente\";\nimport RepetirSemanalmente from \"./RepetirSemanalmente\";\nimport { setTipo } from \"actions/ProgramarAgendaActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ProgramarAgenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const opcionProgramar = useSelector((state) => state.programarAgenda.tipo);\n\n  return (\n    <>\n      {props.programar === 1 ? (\n        <>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Repetir\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={opcionProgramar}\n              onChange={(event) => dispatch(setTipo(event.target.value))}\n            >\n              <MenuItem value={1}>Diariamente</MenuItem>\n              <MenuItem value={2}>Semanalmente</MenuItem>\n              <MenuItem value={3}>Mensualmente</MenuItem>\n            </Select>\n          </FormControl>\n\n          <RepetirDiriamente opcionRepetir={opcionProgramar} />\n          <RepetirSemanalmente opcionRepetir={opcionProgramar} />\n          <RepetirMensualmente opcionRepetir={opcionProgramar} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: { margin: 10, color: \"#0000008a\" },\n  textArea: {\n    width: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n","export const menuOptions = {\n  MENU: \"Menú\",\n  INFORMACION_EMPRESA: \"Información\",\n  AGENDA: \"Agenda\",\n  OBRAS_SOCIALES: \"Obras Sociales\",\n  PROFESIONALES: \"Profesionales \",\n  PACIENTES: \"Pacientes\",\n  ESPECIALIDADES: \"Especialidades\",\n  Agenda_DIARIA: \"Agenda Diaria\",\n  Agenda_MENSUAL: \"Agenda Mensual\",\n  Agenda_SEMANAL: \"Agenda Semanal\",\n  PLAN: \"Plan\",\n  PRESTADORA: \"Prestadora\",\n  SERVICIOS: \"Servicios\",\n  TIPO_SERVICIO: \"Tipo de Servicios\",\n  COSTO_SERVICIO: \"Costo del Servicio\",\n  HISTORIA_CLINICA: \"Historia Clínica\",\n  BUSCAR_TURNO: \"Buscar Turno\",\n};\nexport const url_servidor = \"http://190.190.115.14:8580/HealthBackApp/\";\n//export const url_servidor = \"http://localhost:8080/HealthBackApp/\";\nexport const error_generico = \"Error interno en el servidor\";\nexport const horarios = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n];\n","import {\n  FECHA_AGENDA,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function setFechaAgenda(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: FECHA_AGENDA, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function setDiaMesSeleccionado(fecha) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_DIA_MES, //Aparece en AgendaReducer\n      payload: fecha,\n    });\n  };\n}\nexport function selectProfesionalAgenda(dni) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PROFESIONAL, //Aparece en AgendaReducer\n      payload: dni,\n    });\n  };\n}\n\nexport function borrarTurno(cdTurno, cleanProgramar, cleanEditTurno, callback) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turno/\" + cdTurno, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.status === 200 && callback) {\n        cleanProgramar();\n        cleanEditTurno();\n        callback();\n\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó el turno\", tipo: \"success\" },\n        });\n      }\n    });\n  };\n}\nexport function setHorariosAgenda() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/1/horarios\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_HORARIOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function getTurnos(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS,\n          payload: data,\n        });\n      });\n  };\n}\n","/* const getAllInputNames = () => {\n  const form = document.getElementById(\"form\");\n  if (form == null) return [];\n\n  let arrayOfInputNames = [];\n  const inputs = form.getElementsByTagName(\"input\");\n  for (let i = 0; i < inputs.length; i++) {\n    arrayOfInputNames.push(inputs[i].name);\n  }\n  return arrayOfInputNames;\n};\n\nexport const setDefaultFormInput = () => {\n  const names = getAllInputNames();\n\n  let state = {};\n  if (names != null && names.length > 0) {\n    state = names.reduce((acc, curr) => {\n      acc[curr] = \"\";\n      return acc;\n    }, {});\n  }\n  return state;\n}; */\n\nexport function parseISOString(s, format) {\n  let b = s.split(/\\D+/);\n  const date = new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  return format !== undefined && format === 2\n    ? fechaStringFormat2(date)\n    : fechaString(date);\n}\n\nexport const fechaString = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return ye + \"-\" + mo + \"-\" + da;\n};\n\nexport const fechaStringFormat2 = (date) => {\n  const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(date);\n  const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(date);\n  const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(date);\n  return da + \"/\" + mo + \"/\" + ye;\n};\n\nexport const validateForm = (object) => {\n  const arrPro = Object.values(object);\n  const hayCamposVacios = arrPro.some((field) => field === \"\");\n\n  return !hayCamposVacios;\n};\n\nexport const formatDateString = (date) => {\n  let month = parseInt(date.getMonth()) + 1;\n\n  return (\n    date.getDate() +\n    \"/\" +\n    (month < 10 ? \"0\" + month : month) +\n    \"/\" +\n    date.getFullYear()\n  );\n};\n","import { url_servidor } from \"Utils/constants\";\nimport { getTurnos } from \"../../../actions/AgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { ERROR_MESSAGE } from \"actions/types\";\nconst sendTurno = (data) => {\n  fetch(url_servidor + \"turno\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      cdTurno: data.turnoInfo.cdTurno !== 0 ? data.turnoInfo.cdTurno : 0,\n      hora: data.turnoInfo.horario,\n      paciente: { dni: data.turnoInfo.paciente },\n      profesional: { dni: data.turnoInfo.doctor },\n      servicio: { cd_servicio: data.turnoInfo.servicio },\n      tipoServicio: { cdTipoServicio: data.turnoInfo.tipoServicio },\n      fecha: new Date(data.fechaCalendario + \" \" + data.turnoInfo.horario),\n      notas: data.turnoInfo.nota,\n      programarAgenda: data.programarAgenda,\n    }),\n  }).then(function (response) {\n    if (response.status === 200) {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Se guardó el turno\",\n          tipo: \"success\",\n        },\n      });\n\n      data.dispatch(\n        getTurnos(data.fechaCalendario, data.profesional_seleccionado)\n      );\n      data.dispatch(cleanProgramar());\n      data.dispatch(setDefault());\n    } else {\n      data.dispatch({\n        type: ERROR_MESSAGE,\n        payload: {\n          message: \"Error al guardar el turno\",\n          tipo: \"error\",\n        },\n      });\n    }\n  });\n};\n\nexport const grabarTurno = (\n  turnoInfo,\n  dispatch,\n  fechaCalendario,\n  profesional_seleccionado,\n  programarAgenda\n) => {\n  const data = {\n    turnoInfo: turnoInfo,\n    dispatch: dispatch,\n    fechaCalendario: fechaCalendario,\n    profesional_seleccionado: profesional_seleccionado,\n    programarAgenda: programarAgenda,\n  };\n  console.log(data.programar);\n  data.programarAgenda.tipo =\n    data.turnoInfo.programar === 0 ? 0 : data.programarAgenda.tipo;\n\n  sendTurno(data);\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  getTurnos,\n  borrarTurno,\n  selectProfesionalAgenda,\n} from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n  setTipoServicio,\n} from \"../../../actions/EditTurnoActions\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSnackbar } from \"notistack\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { fechaString } from \"Utils/functions\";\nimport { grabarTurno } from \"./grabarTurnoLogica\";\nimport { cleanProgramar } from \"actions/ProgramarAgendaActions\";\nimport { setDefault } from \"../../../actions/EditTurnoActions\";\nimport { CLEAN_GLOBAL } from \"actions/types\";\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\nconst optionsServicios = (listaServicios) => {\n  const options = [];\n\n  listaServicios.map((servicio) => {\n    return options.push({\n      value: servicio.cd_servicio,\n      label: servicio.cd_servicio + \" - \" + servicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsTipoServicios = (listaTipoServicios) => {\n  const options = [];\n\n  listaTipoServicios.map((tipoServicio) => {\n    return options.push({\n      value: tipoServicio.cdTipoServicio,\n      label: tipoServicio.nombre,\n    });\n  });\n  return options;\n};\nconst optionsHorarios = (horarios) => {\n  const options = [];\n\n  horarios.map((horarios) => {\n    return options.push({\n      value: horarios,\n      label: horarios,\n    });\n  });\n  return options;\n};\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector((state) => state.editTurnoReducer);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const { enqueueSnackbar } = useSnackbar();\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const programarAgenda = useSelector((state) => state.programarAgenda);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n\n  useEffect(() => {\n    dispatch(cleanProgramar());\n  }, [dispatch, turno_info, fechaCalendario]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const seleccionarFechaTurno = (fecha) => {\n    if (fecha >= fechaString(new Date())) {\n      dispatch(setFechaAgenda(new Date(fecha + \" \" + turno_info.horario)));\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const guardarTurno = () => {\n    if (fechaString(fechaCalendario) >= fechaString(new Date())) {\n      if (\n        turno_info.paciente !== \"\" &&\n        turno_info.doctor !== \"\" &&\n        turno_info.horario !== \"\" &&\n        turno_info.servicio !== \"\" &&\n        turno_info.tipoServicio !== \"\"\n      ) {\n        grabarTurno(\n          turno_info,\n          dispatch,\n          fechaString(fechaCalendario),\n          profesional_seleccionado,\n          programarAgenda\n        );\n      }\n    } else {\n      enqueueSnackbar(\"No puede seleccionar una fecha anterior al día de hoy\", {\n        variant: \"warning\",\n      });\n    }\n  };\n  const setFechaEsp = (fecha, hora) => {\n    fecha = fecha + \" \" + hora;\n    return new Date(fecha).toLocaleString(\"es-ES\", {\n      timeZone: \"America/Argentina/Buenos_Aires\",\n    });\n  };\n  const eliminarTurno = (turno) => {\n    let pacienteTurno = listaPacientes.filter(\n      (paciente) => paciente.dni === turno.paciente\n    )[0];\n    let profesionalTurno = listaProfesionales.filter(\n      (profesional) => profesional.dni === turno.doctor\n    )[0];\n\n    if (turno.cdTurno !== 0) {\n      confirmAlert({\n        title: \"Turno: \" + pacienteTurno.nombre + \" \" + pacienteTurno.apellido,\n        message:\n          \"Día \" +\n          setFechaEsp(turno.fecha, turno.horario) +\n          \" Profesional: \" +\n          profesionalTurno.nombre +\n          \" \" +\n          profesionalTurno.apellido,\n\n        buttons: [\n          {\n            label: \"Eliminar\",\n            onClick: () => confirmDeleteTurno(turno),\n          },\n          {\n            label: \"Cancelar\",\n          },\n        ],\n      });\n    }\n  };\n\n  const confirmDeleteTurno = (turno) => {\n    dispatch(\n      borrarTurno(\n        turno.cdTurno,\n        () => dispatch(cleanProgramar()),\n        () => dispatch(setDefault()),\n        () =>\n          dispatch(\n            getTurnos(fechaString(fechaCalendario), profesional_seleccionado)\n          )\n      )\n    );\n  };\n  const setDoctorSeleccinado = (doctor) => {\n    dispatch(setDoctor(doctor));\n    dispatch(selectProfesionalAgenda(doctor));\n\n    dispatch({\n      type: CLEAN_GLOBAL,\n      payload: false,\n    });\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <Select\n        options={optionsProfesional(listaProfesionales)}\n        isSearchable={true}\n        placeholder={<div>Profesional</div>}\n        styles={colourStyles}\n        onChange={(value) => setDoctorSeleccinado(value.value)}\n        value={optionsProfesional(listaProfesionales).filter(\n          (option) => option.value === profesional_seleccionado\n        )}\n      />\n      <Select\n        options={optionsPaciente(listaPacientes)}\n        isSearchable={true}\n        placeholder={<div>Paciente</div>}\n        styles={colourStyles}\n        isDisabled={turno_info.cdTurno !== 0 ? true : false}\n        onChange={(value) => dispatch(setPaciente(value.value))}\n        value={optionsPaciente(listaPacientes).filter(\n          (option) => option.value === turno_info.paciente\n        )}\n      />\n      <Select\n        options={optionsServicios(listaServicios)}\n        isSearchable={true}\n        placeholder={<div>Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setServicio(value.value))}\n        value={optionsServicios(listaServicios).filter(\n          (option) => option.value === turno_info.servicio\n        )}\n      />\n\n      <Select\n        options={optionsTipoServicios(listaTipoServicios)}\n        isSearchable={true}\n        placeholder={<div>Tipo de Servicio</div>}\n        styles={colourStyles}\n        onChange={(value) => dispatch(setTipoServicio(value.value))}\n        value={optionsTipoServicios(listaTipoServicios).filter(\n          (option) => option.value === turno_info.tipoServicio\n        )}\n      />\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaString(fechaCalendario)}\n              variant=\"outlined\"\n              onChange={(event) => seleccionarFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <Select\n            options={optionsHorarios(horarios)}\n            isSearchable={true}\n            placeholder={<div>Horario</div>}\n            styles={colourStyles}\n            onChange={(value) => dispatch(setHorario(value.value))}\n            value={optionsHorarios(horarios).filter(\n              (option) => option.value === turno_info.horario\n            )}\n          />\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={\n              turno_info.cdTurno > 0 &&\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? false\n                : true\n            }\n            onClick={() => eliminarTurno(turno_info)}\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12} style={{ paddingLeft: 5 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            disabled={\n              fechaString(fechaCalendario) < fechaString(new Date())\n                ? true\n                : false\n            }\n            onClick={guardarTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    margin: 10,\n  }),\n};\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setProfesional(profesional) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PROFESIONAL,\n      payload: profesional,\n    });\n  };\n}\n\nexport function eliminarProfesional(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el profesional\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el profesional\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaProfesionales() {\n  return (dispatch) => {\n    fetch(`${url_servidor}profesional`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PROFESIONAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPaciente(paciente) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_PACIENTE,\n      payload: paciente,\n    });\n  };\n}\n\nexport function eliminarPaciente(dni) {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente/${dni}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el paciente\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el paciente\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n\nexport function getListaPacientes() {\n  return (dispatch) => {\n    fetch(`${url_servidor}paciente`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PACIENTE,\n          payload: data,\n        })\n      );\n  };\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarServicio(cd_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio/\" + cd_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"servicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_SERVICIOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import {\n  SET_TIPO_SERVICIO,\n  SET_LISTA_TIPO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setTipoServicio(servicio) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_TIPO_SERVICIO,\n      payload: servicio,\n    });\n  };\n}\n\nexport function eliminarTipoServicio(cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio/\" + cd_tipo_servicio, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el tipo de servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el tipo de servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaTipoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"tipoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_TIPO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfesionalAgenda, getTurnos } from \"actions/AgendaActions\";\nimport { useDispatch } from \"react-redux\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function FilterDoctorAgenda() {\n  const [open, setOpen] = useState(false);\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  ); //Profesional seleccionado en header de los calendarios\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const [selectedProfesional, setSelectedProfesional] = useState(1);\n  const [selectedNombreProfesional, setSelectedNombreProfesional] = useState(\n    \"\"\n  );\n\n  const selectProfesional = useCallback(\n    (profesional) => {\n      setSelectedProfesional(profesional.dni);\n      setSelectedNombreProfesional(\n        profesional.nombre +\n          \" \" +\n          profesional.apellido +\n          \" (\" +\n          profesional.especialidad.nombre +\n          \")\"\n      );\n      dispatch(selectProfesionalAgenda(profesional.dni));\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional.dni));\n      setOpen(false);\n    },\n    [dispatch, fecha_agenda]\n  );\n\n  useEffect(() => {\n    if (listaProfesionales[0] !== undefined) {\n      if (profesional_seleccionado === \"\") {\n        selectProfesional(listaProfesionales[0]);\n        dispatch(selectProfesionalAgenda(listaProfesionales[0].dni));\n      } else {\n        let profesional = listaProfesionales.filter((profesional) => {\n          return profesional.dni === profesional_seleccionado;\n        })[0]; //Busco el objeto profesional seleccionado\n\n        selectProfesional(profesional);\n        dispatch(selectProfesionalAgenda(profesional_seleccionado));\n      }\n    }\n  }, [\n    listaProfesionales,\n    selectProfesional,\n    dispatch,\n    profesional_seleccionado,\n  ]);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"default\"\n        fullWidth\n        ref={anchorRef}\n        aria-label=\"split button\"\n      >\n        <Button>{selectedNombreProfesional}</Button>\n        <Button\n          color=\"default\"\n          size=\"small\"\n          style={{ width: 20 }}\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        fullWidth\n        style={{ zIndex: 1000 }}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {listaProfesionales.map((profesional, index) => (\n                    <MenuItem\n                      selected={profesional.dni === selectedProfesional}\n                      onClick={() => selectProfesional(profesional)}\n                    >\n                      {profesional.nombre} {profesional.apellido} (\n                      {profesional.especialidad.nombre})\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n  const diaActual = () => {\n    let diaHoy = false;\n\n    if (new Date(fechaCalendario).toDateString() === new Date().toDateString())\n      diaHoy = true;\n    return diaHoy;\n  };\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button\n                variant=\"contained\"\n                disabled={diaActual()}\n                onClick={setDateToday}\n              >\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={\n                diaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n              }\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getTurnos } from \"actions/AgendaActions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\nimport { fechaString } from \"Utils/functions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const horarios = useSelector((state) => state.agenda_reducer.horarios);\n  const fecha_agenda = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (profesional_seleccionado > 0)\n      dispatch(getTurnos(fechaString(fecha_agenda), profesional_seleccionado));\n  }, [fecha_agenda, profesional_seleccionado, dispatch]);\n\n  const editTurno = (turno) => {\n    turno.fecha = fechaString(new Date(turno.fecha));\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios &&\n        horarios.map((horario) => {\n          return (\n            <Grid\n              key={\"horario_\" + horario}\n              container\n              style={{ minHeight: \"5vh\", zIndex: 0 }}\n            >\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={2}\n                lg={1}\n                className={classes.gridHorarios}\n              >\n                <label className={classes.labelHorario}>{horario}</label>\n              </Grid>\n              <Grid\n                item\n                xs={10}\n                sm={10}\n                md={10}\n                lg={11}\n                onClick={() => dispatch(setHorario(horario))}\n                className={classes.containerTurnosGrid}\n              >\n                {turnos\n                  .filter((turno) => {\n                    return turno.hora === horario;\n                  })\n                  .map((turno, index) => {\n                    return (\n                      <Chip\n                        clickable={true}\n                        key={index}\n                        className={classes.chipTurnos}\n                        onClick={() => editTurno(turno)}\n                        color=\"primary\"\n                        label={\n                          turno.paciente.dni +\n                          \" - \" +\n                          turno.paciente.nombre +\n                          \" \" +\n                          turno.paciente.apellido +\n                          \" (\" +\n                          turno.tipoServicio.nombre +\n                          \")\"\n                        }\n                      ></Chip>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          );\n        })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ItemsAgendaHeader from \"./ItemsAgendaHeader\";\nimport ItemsAgenda from \"./ItemsAgenda\";\nexport default function ItemsAgendaContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <ItemsAgendaHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", maxHeight: \"90vh\" }}\n      >\n        <ItemsAgenda />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditAgendaItem from \"./EditAgendaItem\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { setHorariosAgenda } from \"actions/AgendaActions\";\nimport { setDefault, setDoctor } from \"actions/EditTurnoActions\";\nimport ItemAgendaContainer from \"./ItemsAgendaContainer\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Agenda(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    dispatch(setHorariosAgenda());\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(setDoctor(profesional_seleccionado));\n  }, [dispatch, profesional_seleccionado]);\n\n  useEffect(() => {\n    if (props.limpiar) dispatch(setDefault());\n  }, [dispatch, props.limpiar]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <EditAgendaItem />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ItemAgendaContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0,\n    height: \"100%\",\n  },\n}));\n","import {\n  SET_OBRA_SOCIAL,\n  SET_LISTA_OBRA_SOCIAL,\n  ERROR_MESSAGE,\n} from \"../actions/types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setObraSocial(obraSocial) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_OBRA_SOCIAL,\n      payload: obraSocial,\n    });\n  };\n}\n\nexport function eliminarObraSocial(cd_os) {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial/\" + cd_os, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la obra social\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la obra social\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaObrasSocial() {\n  return (dispatch) => {\n    fetch(url_servidor + \"obraSocial\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_OBRA_SOCIAL,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setObraSocial, getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreObraSocial, setNombreObraSocial] = useState(\"\");\n  const [cdObraSocial, setCdObraSocial] = useState(0);\n  const obra_social = useSelector((state) => state.obra_social.obraSocial);\n\n  const guardarObraSocial = () => {\n    if (nombreObraSocial !== undefined && nombreObraSocial !== \"\") {\n      fetch(url_servidor + \"obraSocial\", {\n        method: cdObraSocial !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Obra Social\", {\n            variant: \"success\",\n          });\n          dispatch(getListaObrasSocial());\n          nuevaObraSocial();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Obra Social\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreObraSocial(obra_social.nombre);\n    setCdObraSocial(obra_social.cd_os);\n  }, [obra_social]);\n\n  const nuevaObraSocial = () => {\n    setNombreObraSocial(\"\");\n    setCdObraSocial(0);\n    dispatch(setObraSocial({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Obra Social\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaObraSocial}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Obra Social\"}\n            fullWidth\n            value={nombreObraSocial}\n            onChange={(event) => setNombreObraSocial(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarObraSocial}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setObraSocial, eliminarObraSocial } from \"actions/ObraSocialActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ObraSocialTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const editObraSocial = (cd_os, nombre) => {\n    dispatch(\n      setObraSocial({\n        cd_os: cd_os,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_os, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarObraSocial(cd_os)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Obras Sociales</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaObrasSociales &&\n            listaObrasSociales.map((obraSocial) => {\n              return (\n                <TableRow\n                  key={obraSocial.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(obraSocial.cd_os, obraSocial.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ObraSocialForm from \"./ObraSocialForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport ObraSocialTable from \"./ObraSocialTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.listaOS}>\n        <ObraSocialTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ObraSocialForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  listaOS: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PLAN, SET_LISTA_PLANES, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setPlan(Plan) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PLAN,\n      payload: Plan,\n    });\n  };\n}\n\nexport function eliminarPlan(cd_plan) {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan/\" + cd_plan, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" + response.status + \" al intentar eliminar el plan\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el plan\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaPlanes() {\n  return (dispatch) => {\n    fetch(url_servidor + \"plan\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PLANES,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function PlanForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n  const [obraSocial, setObraSocial] = useState(0);\n  const listaObrasSociales = useSelector(\n    (state) => state.obra_social.listaObrasSociales\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== undefined && nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"plan\", {\n        method: cdPlan !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n          nuevoPlan();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoPlan}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Obra Social\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={obraSocial}\n              onChange={(event) => setObraSocial(event.target.value)}\n            >\n              {listaObrasSociales &&\n                listaObrasSociales.map((obraSocial) => {\n                  return (\n                    <MenuItem value={obraSocial.cd_os}>\n                      {obraSocial.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarPlan}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPlan, eliminarPlan } from \"actions/PlanActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function PlanTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const editObraSocial = (cd_plan, nombre, cd_os, nombre_os) => {\n    dispatch(\n      setPlan({\n        cd_plan: cd_plan,\n        nombre: nombre,\n        obraSocial: {\n          cd_os: cd_os,\n          nombre: nombre_os,\n        },\n      })\n    );\n  };\n\n  const deleteObraSocial = (cd_plan, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPlan(cd_plan)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Obra Social</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaPlanes &&\n            listaPlanes.map((plan) => {\n              return (\n                <TableRow\n                  key={plan.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editObraSocial(\n                      plan.cd_plan,\n                      plan.nombre,\n                      plan.obraSocial.cd_os,\n                      plan.obraSocial.nombre\n                    )\n                  }\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {plan.obraSocial.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteObraSocial(plan.cd_plan, plan.nombre)\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlanForm from \"./PlanForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaObrasSocial } from \"actions/ObraSocialActions\";\nimport PlanTable from \"./PlanTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaObrasSocial());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PlanTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PlanForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { getListaServicios, setServicio } from \"actions/ServicioActions\";\n\nexport default function ServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdServicio, setCdServicio] = useState(\"\");\n  const servicio = useSelector((state) => state.servicio.servicio);\n\n  const guardarServicio = () => {\n    if (\n      nombre !== undefined &&\n      nombre !== \"\" &&\n      cdServicio !== undefined &&\n      cdServicio !== \"\"\n    ) {\n      fetch(url_servidor + \"servicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_servicio: cdServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaServicios());\n          nuevServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre ni el código en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdServicio(servicio.cd_servicio);\n    setNombre(servicio.nombre);\n  }, [servicio]);\n\n  const nuevServicio = () => {\n    setCdServicio(\"\");\n    setNombre(\"\");\n    dispatch(setServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Código Servicio\"}\n            fullWidth\n            value={cdServicio}\n            onChange={(event) => setCdServicio(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setServicio, eliminarServicio } from \"actions/ServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n\n  const editServicio = (servicio) => {\n    dispatch(setServicio(servicio));\n  };\n\n  const deleteServicio = (servicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + servicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarServicio(servicio.cd_servicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Código Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaServicios &&\n            listaServicios.map((servicio) => {\n              return (\n                <TableRow\n                  key={servicio.cd_servicio}\n                  className={classes.rowTable}\n                  onClick={() => editServicio(servicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.cd_servicio}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {servicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteServicio(servicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ServicioForm from \"./ServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport ServicioTable from \"./ServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <ServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <ServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  const mesActual = () => {\n    let diaHoy = false;\n    let fechaSeleccionada = new Date(fechaCalendario);\n    let fechaActual = new Date();\n    if (\n      fechaSeleccionada.getMonth() === fechaActual.getMonth() &&\n      fechaActual.getFullYear() === fechaSeleccionada.getFullYear()\n    )\n      diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={2} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            onClick={setDateToday}\n            disabled={mesActual()}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={mesActual() ? classes.fechaAgendaHoy : classes.fechaAgenda}\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Hidden } from \"@material-ui/core\";\nexport default function ItemsAgendaHeader() {\n  const classes = useStyles();\n\n  return (\n    <Hidden only={[\"sm\", \"xs\"]}>\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Lunes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Martes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Miércoles\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Jueves\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Viernes\n        </Grid>\n        <Grid item md={2} className={classes.borderGridDias}>\n          Sábado\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderGridDias: {\n    borderBottom: \"1px solid #eeeeee\",\n    padding: 10,\n    borderLeft: \"1px solid #eeeeee\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaMensual(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (mes_actual, dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 2 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else {\n      return <></>;\n    }\n  };\n\n  return turnosDiadelMes(props.mes_calendario, props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"1vh\",\n    borderRadius: 5,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nimport { getTurnosMensual } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosMensual(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import { SET_TURNOS_VISTA_MENSUAL, SET_TURNOS_VISTA_SEMANAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants/\";\n\nexport function getTurnosMensual(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/mes/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_MENSUAL,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function getTurnosSemana(fecha, profesional) {\n  //fecha en formato yyyy-MM-dd\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/semana/\" + profesional + \"/\" + fecha, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_TURNOS_VISTA_SEMANAL,\n          payload: data,\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualHeader from \"./AgendaMensualHeader\";\nimport AgendaMensualHeaderDias from \"./AgendaMensualHeaderDias\";\nimport AgendaMensualDias from \"./AgendaMensualDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaMensualHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaMensualDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaMensualContainer from \"./AgendaMensualContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaMensual() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaMensualContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getMonday = useCallback(() => {\n    let dia = fechaCalendario;\n    let day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = getMonday();\n    console.log(anterior_lunes.getDate());\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = getMonday();\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = getMonday();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      dia_lunes\n    );\n\n    const ye_lunes = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      dia_lunes\n    );\n    const fecha_sabado = fechaCalendario;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n    const ye_sabado = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          (ye_sabado !== ye_lunes ? \" del \" + ye_lunes + \" \" : \"\") +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase() +\n          \" del \" +\n          ye_sabado\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase() +\n          \" del \" +\n          ye_lunes;\n\n    return fecha;\n  };\n\n  const semanaActual = () => {\n    let diaHoy = false;\n\n    let fechaActual = new Date();\n    let onejan = new Date(fechaActual.getFullYear(), 0, 1);\n\n    let week = Math.ceil(\n      ((fechaCalendario - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n\n    let weekActual = Math.ceil(\n      ((fechaActual - onejan) / 86400000 + onejan.getDay() + 1) / 7\n    );\n    if (week === weekActual) diaHoy = true;\n    return diaHoy;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={2} xs={12} className={classes.gridButtonHoy}>\n          <Button\n            variant=\"contained\"\n            disabled={semanaActual()}\n            onClick={setDateToday}\n          >\n            Hoy\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={4}\n          xs={12}\n          className={\n            semanaActual() ? classes.fechaAgendaHoy : classes.fechaAgenda\n          }\n        >\n          {fechaString()}\n        </Grid>\n        <Grid item md={4} xs={12} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  fechaAgendaHoy: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#db3d44\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport MediaQuery from \"react-responsive\";\n\nexport default function TurnosDiaAgendaSemanal(props) {\n  const classes = useStyles();\n\n  const turnos = useSelector((state) => state.vista_mensual_semanal.turnos);\n\n  const turnosDiadelMes = (dia_mes) => {\n    if (turnos[dia_mes] !== undefined) {\n      return turnos[dia_mes].map((turno, index_dia) => {\n        return (\n          <Grid\n            key={\"grid_container_\" + index_dia}\n            container\n            style={{ marginBottom: 5 }}\n          >\n            <Grid key={\"grid_row_\" + index_dia} item md={12} xs={12}>\n              <div key={\"turno\" + index_dia} className={classes.divTurno}>\n                <Grid container>\n                  <Grid item lg={3} md={3} sm={4} xs={4}>\n                    <span key={\"span_horario_\" + index_dia}>{turno.hora}</span>\n                  </Grid>\n                  <Grid item lg={9} md={9} sm={8} xs={8}>\n                    <span key={\"span_paciente_\" + index_dia}>\n                      {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n                      {turno.paciente.dni}\n                      <MediaQuery minDeviceWidth={1300}>\n                        {\" \"}\n                        ({turno.tipoServicio.nombre})\n                      </MediaQuery>\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n        );\n      });\n    } else return <></>;\n  };\n\n  return turnosDiadelMes(props.dia_mes);\n}\nconst useStyles = makeStyles((theme) => ({\n  divTurno: {\n    minWidth: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    minHeight: \"3vh\",\n    borderRadius: 5,\n    lineHeight: 3,\n    fontSize: 8,\n    color: \"#272727\",\n    fontWeight: \"bold\",\n    padding: 1,\n    paddingLeft: 5,\n    \"&:hover\": {\n      backgroundColor: \"#d0d0d0\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaSemanal from \"./TurnosDiaAgendaSemanal\";\nimport { getTurnosSemana } from \"actions/VistaMensualYSemanalActions\";\nimport { fechaString } from \"Utils/functions\";\n\nexport default function AgendaSemanalDias() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado > 0) {\n      dispatch(\n        getTurnosSemana(fechaString(fechaCalendario), profesional_seleccionado)\n      );\n    }\n  }, [fechaCalendario, profesional_seleccionado, dispatch]);\n\n  const gotoDiaCalendario = (fecha_seleccionada) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n  const renderDiasCalendario = () => {\n    let fecha_semana = getMonday(); //Obtengo la fecha del lunes anterior\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 6; dias++) {\n      if (\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_fecha = new Date(fecha_semana); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_fecha)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={badge_fecha.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaSemanal\n                  key={\"turnos_dia_semanal_\" + dias}\n                  dia_mes={badge_fecha.getDate()}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      }\n      fecha_semana.setDate(fecha_semana.getDate() + 1);\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"85vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      // backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"85vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalHeader from \"./AgendaSemanalHeader\";\nimport AgendaMensualHeaderDias from \"../Agenda Mensual/AgendaMensualHeaderDias\";\nimport AgendaSemanalDias from \"./AgendaSemanalDias\";\n\nexport default function AgendaMensualContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ minHeight: \"5%\" }}>\n        <AgendaSemanalHeader />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{ overflowY: \"auto\", minHeight: \"95%\", height: \"95%\" }}\n      >\n        <AgendaMensualHeaderDias />\n        <AgendaSemanalDias />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AgendaSemanalContainer from \"./AgendaSemanalContainer\";\n\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function AgendaSemanal() {\n  const dispatch = useDispatch();\n  const profesional_seleccionado = useSelector(\n    (state) => state.agenda_reducer.profesional_seleccionado\n  );\n  useEffect(() => {\n    if (profesional_seleccionado === \"\") dispatch(getListaProfesionales());\n  }, [dispatch, profesional_seleccionado]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={12} style={{ height: \"100%\" }}>\n        <AgendaSemanalContainer />\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  SET_ESPECIALIDAD,\n  SET_LISTA_ESPECIALIDAD,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setEspecialidad(especialidad) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_ESPECIALIDAD,\n      payload: especialidad,\n    });\n  };\n}\n\nexport function especialidadesPaciente(dni) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/paciente/\" + dni, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n      });\n  };\n}\n\nexport function eliminarEspecialidad(cd_especialidad) {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad/\" + cd_especialidad, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la especialidad\"\n          );\n        }\n        return response.json();\n      })\n\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: \"Se eliminó la especialidad\", tipo: \"success\" },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaEspecialidad() {\n  return (dispatch) => {\n    fetch(url_servidor + \"especialidad\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_ESPECIALIDAD,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function EspecialidadForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombreEspecialidad, setNombreEspecialidad] = useState(\"\");\n  const [cdEspecialidad, setCdEspecialidad] = useState(0);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n\n  const guardarEspecialidad = () => {\n    if (nombreEspecialidad !== undefined && nombreEspecialidad !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_especialidad: cdEspecialidad,\n          nombre: nombreEspecialidad,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Especialidad\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n          nuevaEspecialidad();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Especialidad\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombreEspecialidad(especialidad.nombre);\n    setCdEspecialidad(especialidad.cd_especialidad);\n  }, [especialidad]);\n\n  const nuevaEspecialidad = () => {\n    setNombreEspecialidad(\"\");\n    setCdEspecialidad(0);\n    dispatch(setEspecialidad({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Especialidad\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaEspecialidad}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setEspecialidad,\n  eliminarEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function EspecialidadTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const editEspecialidad = (cd_especialidad, nombre) => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: cd_especialidad,\n        nombre: nombre,\n      })\n    );\n  };\n\n  const deleteEspecialidad = (cd_especialidad, nombre) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarEspecialidad(cd_especialidad)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Especialidades</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaEspecialidades &&\n            listaEspecialidades.map((especialidad) => {\n              return (\n                <TableRow\n                  key={especialidad.nombre}\n                  className={classes.rowTable}\n                  onClick={() =>\n                    editEspecialidad(\n                      especialidad.cd_especialidad,\n                      especialidad.nombre\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {especialidad.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() =>\n                        deleteEspecialidad(\n                          especialidad.cd_especialidad,\n                          especialidad.nombre\n                        )\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EspecialidadForm from \"./EspecialidadForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport EspecialidadTable from \"./EspecialidadTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <EspecialidadTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <EspecialidadForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA, ERROR_MESSAGE } from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\n\nexport function setPrestadora(prestadora) {\n  //Set de la obraSocial que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_PRESTADORA,\n      payload: prestadora,\n    });\n  };\n}\n\nexport function getPrestadoras() {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function eliminarPrestadora(cd_prestadora) {\n  return (dispatch) => {\n    fetch(url_servidor + \"prestadora/\" + cd_prestadora, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar la prestadora\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_PRESTADORA,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó la prestadora\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPrestadora, getPrestadoras } from \"actions/PrestadoraActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { horarios } from \"Utils/constants\";\nexport default function PrestadoraForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [cdPrestadora, setCdPrestadora] = useState(0);\n  const [nombre, setNombre] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [logo, setLogo] = useState(\"\");\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [horaDesde, setHoraDesde] = useState(\"\");\n  const [horaHasta, setHoraHasta] = useState(\"\");\n\n  const prestadora = useSelector((state) => state.prestadora.prestadora);\n  const validarCampos = () => {\n    if (\n      nombre === \"\" ||\n      direccion === \"\" ||\n      telefono === \"\" ||\n      intervalo === \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const guardarHorario = () => {\n    if (validarCampos) {\n      fetch(url_servidor + \"prestadora\", {\n        method: cdPrestadora !== 0 ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_prestadora: cdPrestadora,\n          nombre: nombre,\n          telefono: telefono,\n          direccion: direccion,\n          logo: logo,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Prestadora\", {\n            variant: \"success\",\n          });\n          dispatch(getPrestadoras());\n          nuevaPrestadora();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Prestadora\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdPrestadora(prestadora.cd_prestadora);\n    setNombre(prestadora.nombre);\n    setDireccion(prestadora.direccion);\n    setTelefono(prestadora.telefono);\n    setLogo(prestadora.logo);\n    setIntervalo(prestadora.intervalo);\n    setHoraDesde(prestadora.horaDesde);\n    setHoraHasta(prestadora.horaHasta);\n  }, [prestadora]);\n\n  const nuevaPrestadora = () => {\n    setCdPrestadora(0);\n    setNombre(\"\");\n    setDireccion(\"\");\n    setTelefono(\"\");\n    setLogo(\"\");\n    setIntervalo(\"\");\n    setHoraDesde(\"\");\n    setHoraHasta(\"\");\n\n    dispatch(setPrestadora({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Prestadora\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevaPrestadora}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Nombre\"}\n                fullWidth\n                value={nombre}\n                onChange={(event) => setNombre(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Telefono\"}\n                type=\"number\"\n                fullWidth\n                value={telefono}\n                onChange={(event) => setTelefono(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} md={12} sm={12} lg={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label={\"Dirección\"}\n                fullWidth\n                value={direccion}\n                onChange={(event) => setDireccion(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Intervalo (en minutos)\"}\n            type=\"number\"\n            fullWidth\n            value={intervalo}\n            onChange={(event) => setIntervalo(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Desde\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Desde\"\n              fullWidth\n              value={horaDesde}\n              onChange={(event) => setHoraDesde(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={6} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Hora Hasta\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Hora Hasta\"\n              fullWidth\n              value={horaHasta}\n              onChange={(event) => setHoraHasta(event.target.value)}\n            >\n              {horarios &&\n                horarios.map((hora) => {\n                  return <MenuItem value={hora}>{hora}</MenuItem>;\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Logo\"}\n            fullWidth\n            value={logo}\n            onChange={(event) => setLogo(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarHorario}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPrestadora, eliminarPrestadora } from \"actions/PrestadoraActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PrestadoraTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const prestadoras = useSelector((state) => state.prestadora.listaPrestadoras);\n\n  const editPrestadora = (prestadora) => {\n    dispatch(setPrestadora(prestadora));\n  };\n\n  const deletePrestadora = (prestadora) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + prestadora.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPrestadora(prestadora.cd_prestadora)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Nombre</TableCell>\n            <TableCell className={classes.titleTable}>Direccion</TableCell>\n            <TableCell className={classes.titleTable}>Telefono</TableCell>\n            <TableCell className={classes.titleTable}>Intervalo</TableCell>\n            <TableCell className={classes.titleTable}>Hora Inicio</TableCell>\n            <TableCell className={classes.titleTable}>Hora Fin</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prestadoras &&\n            prestadoras.map((prestadora) => {\n              return (\n                <TableRow\n                  key={prestadora.cd_prestadora}\n                  className={classes.rowTable}\n                  onClick={() => editPrestadora(prestadora)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.nombre}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.direccion}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {prestadora.telefono}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.intervalo}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaDesde}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {prestadora.horaHasta}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deletePrestadora(prestadora)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrestadoraForm from \"./PrestadoraForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getPrestadoras } from \"actions/PrestadoraActions\";\nimport PrestadoraTable from \"./PrestadoraTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPrestadoras());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <PrestadoraTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <PrestadoraForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  getListaTipoServicios,\n  setTipoServicio,\n} from \"actions/TipoServicioActions\";\n\nexport default function TipoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombre, setNombre] = useState(\"\");\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const tipoServicio = useSelector((state) => state.tipoServicio.tipoServicio);\n\n  const guardarTipoServicio = () => {\n    if (nombre !== undefined && nombre !== \"\") {\n      fetch(url_servidor + \"tipoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cdTipoServicio: cdTipoServicio,\n          nombre: nombre,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Tipo de Servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaTipoServicios());\n          nuevoTipoServicio();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Tipo de Servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdTipoServicio(tipoServicio.cdTipoServicio);\n    setNombre(tipoServicio.nombre);\n  }, [tipoServicio]);\n\n  const nuevoTipoServicio = () => {\n    dispatch(\n      setTipoServicio({\n        cdTipoServicio: 0,\n        nombre: \"\",\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Crear/Editar Tipo Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoTipoServicio}\n          >\n            Nueva\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Servicio\"}\n            fullWidth\n            value={nombre}\n            onChange={(event) => setNombre(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarTipoServicio}\n            fullWidth\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setTipoServicio,\n  eliminarTipoServicio,\n} from \"actions/TipoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function TipoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaTipoServicios = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const editTipoServicio = (servicio) => {\n    dispatch(setTipoServicio(servicio));\n  };\n\n  const deleteTipoServicio = (tipoServicio) => {\n    confirmAlert({\n      title: \"¿Eliminar \" + tipoServicio.nombre + \"?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(eliminarTipoServicio(tipoServicio.cdTipoServicio)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>\n              Tipo de Servicio\n            </TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaTipoServicios &&\n            listaTipoServicios.map((tipoServicio) => {\n              return (\n                <TableRow\n                  key={tipoServicio.cdTipoServicio}\n                  className={classes.rowTable}\n                  onClick={() => editTipoServicio(tipoServicio)}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteTipoServicio(tipoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TipoServicioForm from \"./TipoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport TipoServicioTable from \"./TipoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaTipoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <TipoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <TipoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import { BUSCAR_TURNOS, BUSCAR_PACIENTE, BUSCAR_PROFESIONAL } from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setBuscarPaciente(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PACIENTE,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function setBuscarProfesional(dni, actuales) {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_PROFESIONAL,\n      payload: { dni: dni, actuales: actuales },\n    });\n  };\n}\n\nexport function buscarTurnosPaciente(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/paciente/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanTurnos() {\n  return (dispatch) => {\n    dispatch({\n      type: BUSCAR_TURNOS,\n      payload: [],\n    });\n  };\n}\n\nexport function buscarTurnosProfesinal(dni, activos) {\n  return (dispatch) => {\n    fetch(url_servidor + \"turnos/profesional/\" + dni + \"/\" + activos, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: BUSCAR_TURNOS,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setBuscarProfesional,\n  buscarTurnosProfesinal,\n} from \"actions/BuscarTurnosActions\";\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.profesional !== 0) {\n      dispatch(\n        buscarTurnosProfesinal(buscarInfo.profesional, buscarInfo.actuales)\n      );\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.profesional]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarProfesional = (row) => {\n    dispatch(setBuscarProfesional(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n    {\n      name: \"Matricula\",\n      sortable: true,\n      selector: \"matricula\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.profesional,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  buscarTurnosPaciente,\n  setBuscarPaciente,\n} from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0 && buscarInfo.actuales !== undefined) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n  const seleccionarPaciente = (row) => {\n    dispatch(setBuscarPaciente(row.dni, buscarInfo.actuales));\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => seleccionarPaciente(row)}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === buscarInfo.paciente,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TablaProfesional from \"./TablaProfesional\";\nimport TablaPacientes from \"./TablaPacientes\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BUSCAR_ACTUALES } from \"actions/types\";\n\nexport default function BuscarTurnoTabla() {\n  const buscarActivos = useSelector((state) => state.buscarTurnos.actuales);\n  const [tabSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>\n        <Grid item lg={8}>\n          <Paper square>\n            <Tabs\n              value={tabSeleccionada}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Profesional\" />\n              <Tab label=\"Paciente\" />\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item lg={4}>\n          <FormControlLabel\n            className={classes.checkBoxContainer}\n            control={\n              <Checkbox\n                checked={buscarActivos === 1 ? true : false}\n                onChange={() =>\n                  dispatch({\n                    type: BUSCAR_ACTUALES,\n                    payload: buscarActivos === 0 ? 1 : 0,\n                  })\n                }\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Solo Activos\"\n          />\n        </Grid>\n      </Grid>\n      {tabSeleccionada === 0 ? <TablaProfesional /> : <TablaPacientes />}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport {\n  setDiaMesSeleccionado,\n  selectProfesionalAgenda,\n} from \"actions/AgendaActions\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListaTurnos() {\n  const listaTurnos = useSelector((state) => state.buscarTurnos.turnos);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const gotoDiaCalendario = (fecha_seleccionada, profesional) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fecha_seleccionada\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fecha_seleccionada\n    ); //MES en formato MM de la fecha que seleccione\n    dispatch(selectProfesionalAgenda(profesional));\n    dispatch(\n      setDiaMesSeleccionado(new Date(ye, mo - 1, fecha_seleccionada.getDate()))\n    ); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: menuOptions.Agenda_DIARIA, limpiar: true },\n    }); //Voy a ver la visual del calendario por DIA*/\n  };\n\n  const armarListaTurnos = () => {\n    return listaTurnos.map((turno) => {\n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              {turno.paciente.nombre} {turno.paciente.apellido} -{\" \"}\n              {turno.paciente.dni}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {formatDateString(new Date(turno.fecha))} - {turno.hora}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Servicio: {turno.servicio.nombre} - {turno.tipoServicio.nombre}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Profesional: {turno.profesional.nombre}{\" \"}\n              {turno.profesional.apellido} | Mn. {turno.profesional.matricula}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Notas: {turno.notas}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                gotoDiaCalendario(new Date(turno.fecha), turno.profesional.dni)\n              }\n            >\n              <FontAwesomeIcon icon={faEye} />\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return listaTurnos && listaTurnos.length > 0 ? (\n      armarListaTurnos()\n    ) : (\n      <div className={classes.rootAlert}>\n        <Alert variant=\"filled\" severity=\"warning\">\n          No se encontraron turnos\n        </Alert>\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaTurnos ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n    },\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    maxHeight: \"95vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { cleanTurnos } from \"actions/BuscarTurnosActions\";\nimport BuscarTurnoTabla from \"./BuscarTurnoTabla\";\nimport ListaTurnos from \"./ListaTurnos\";\nimport { useDispatch } from \"react-redux\";\nexport default function BuscarTurno() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(cleanTurnos());\n  }, [dispatch]);\n\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item xs={12} md={5} className={classes.gridContainer}>\n        <BuscarTurnoTabla />\n      </Grid>\n      <Grid item xs={12} md={7} style={{ height: \"100%\" }}>\n        <ListaTurnos />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    border: \"1px solid #ccc\",\n\n    paddingTop: 0,\n    height: \"100vh\",\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n  },\n}));\n","import {\n  SET_COSTO_SERVICIO,\n  SET_LISTA_COSTO_SERVICIO,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor, error_generico } from \"Utils/constants\";\nexport function setCostoServicio(costoServicio) {\n  //Set de la Plan que quiero editar\n  return (dispatch) => {\n    dispatch({\n      type: SET_COSTO_SERVICIO,\n      payload: costoServicio,\n    });\n  };\n}\n\nexport function eliminarCostoServicio(cd_servicio, cd_plan, cd_tipo_servicio) {\n  return (dispatch) => {\n    fetch(\n      url_servidor +\n        \"costoServicio/\" +\n        cd_servicio +\n        \"/\" +\n        cd_plan +\n        \"/\" +\n        cd_tipo_servicio,\n      {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\n            response.status !== 500\n              ? error_generico\n              : \"Error \" +\n                response.status +\n                \" al intentar eliminar el costo del servicio\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        });\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se eliminó el costo del servicio\",\n            tipo: \"success\",\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: { message: error.message, tipo: \"error\" },\n        });\n      });\n  };\n}\nexport function getListaCostoServicios() {\n  return (dispatch) => {\n    fetch(url_servidor + \"costoServicio\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_COSTO_SERVICIO,\n          payload: data,\n        })\n      );\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== undefined &&\n      costo > 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: {\n            cdPlan: cdPlan,\n            cdServicio: cdServicio,\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          servicio: { cd_servicio: cdServicio, nombre: \"\" },\n          plan: { cd_plan: cdPlan, nombre: \"\" },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          nuevoCostoServicio();\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.plan) setCdPlan(costoServicio.plan.cd_plan);\n    if (costoServicio.id)\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n    if (costoServicio.servicio)\n      setCdServicio(costoServicio.servicio.cd_servicio);\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          lg={10}\n          xs={12}\n          md={8}\n          sm={12}\n          className={classes.headerForm}\n        >\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={12} md={4} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem key={plan.cd_plan} value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem\n                      key={servicio.cd_servicio}\n                      value={servicio.cd_servicio}\n                    >\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Tipo Servicio\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem\n                      key={tipoServicio.cdTipoServicio}\n                      value={tipoServicio.cdTipoServicio}\n                    >\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={guardarPlan}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n    paddingRight: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCostoServicio,\n  eliminarCostoServicio,\n} from \"actions/CostoServicioActions\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function CostoServicioTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const listaCostoServicios = useSelector(\n    (state) => state.costoServicio.listaCostoServicios\n  );\n\n  const editCostoServicio = (costoServicio) => {\n    dispatch(setCostoServicio(costoServicio));\n  };\n\n  const deleteCostoServicio = (costoServicio) => {\n    confirmAlert({\n      title: \"¿Está seguro que desea eliminar?\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarCostoServicio(\n                costoServicio.id.cdServicio,\n                costoServicio.id.cdPlan,\n                costoServicio.id.tipoServicio.cdTipoServicio\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.titleTable}>Plan</TableCell>\n            <TableCell className={classes.titleTable}>Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Tipo Servicio</TableCell>\n            <TableCell className={classes.titleTable}>Costo</TableCell>\n            <TableCell className={classes.titleTable}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listaCostoServicios &&\n            listaCostoServicios.map((costoServicio, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  className={classes.rowTable}\n                  onClick={() => editCostoServicio(costoServicio)}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.plan.obraSocial.nombre} -{\" \"}\n                    {costoServicio.plan.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.servicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {costoServicio.id.tipoServicio.nombre}\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    ${costoServicio.costo}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteCostoServicio(costoServicio)}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  titleTable: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  rowTable: {\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CostoServicioForm from \"./CostoServicioForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport { getListaServicios } from \"actions/ServicioActions\";\nimport { getListaTipoServicios } from \"actions/TipoServicioActions\";\nimport { getListaCostoServicios } from \"actions/CostoServicioActions\";\nimport CostoServicioTable from \"./CostoServicioTable\";\nimport { useDispatch } from \"react-redux\";\nexport default function ObraSocial() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPlanes());\n    dispatch(getListaServicios());\n    dispatch(getListaTipoServicios());\n    dispatch(getListaCostoServicios());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={8} className={classes.lista}>\n        <CostoServicioTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={4} className={classes.borderForm}>\n        <CostoServicioForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  setProfesional,\n  eliminarProfesional,\n} from \"actions/ProfesionalActions\";\n\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nconst FilterComponent = ({ filterText, onFilter }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaProfesionales, filterText) => {\n  return listaProfesionales.filter(\n    (profesional) =>\n      profesional.dni.toString().includes(filterText.toLowerCase()) ||\n      profesional.matricula.includes(filterText.toLowerCase()) ||\n      profesional.especialidad.nombre\n        .toLowerCase()\n        .includes(filterText.toLowerCase()) ||\n      profesional.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      profesional.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaProfesional() {\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n  const dispatch = useDispatch();\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  /* DATATABLE */\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaProfesionales, filterText);\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaProfesionales);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaProfesionales, filterText, filteredItems]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  const deleteProfesional = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarProfesional(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  const columns = [\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n    {\n      name: \"Especialidad\",\n      cell: (row) => <div>{row.especialidad.nombre}</div>,\n      sortable: true,\n      selector: \"especialidad.nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setProfesional(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deleteProfesional(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === profesionalSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React from \"react\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\nexport default function FormSelect({\n  name,\n  label,\n  options,\n  value,\n  handleChange,\n  disabled,\n}) {\n  return (\n    <FormControl margin=\"normal\" variant=\"outlined\" fullWidth>\n      <InputLabel id={name}>{label}</InputLabel>\n      <Select\n        labelId={name}\n        id={name}\n        name={name}\n        disabled={disabled ? disabled : false}\n        value={value}\n        label={label}\n        onChange={handleChange}\n        fullWidth\n      >\n        {options &&\n          options.map((option, index) => {\n            return (\n              <MenuItem key={`${option.value}-${index}`} value={option.value}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setProfesional,\n  getListaProfesionales,\n} from \"actions/ProfesionalActions\";\n\nimport FormSelect from \"../FormSelect\";\nimport { validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  matricula: \"\",\n  seguroMalaPraxis: \"\",\n  cuit: \"\",\n  registroNacPrestadores: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function ProfesionalForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const profesionalSeleccionado = useSelector(\n    (state) => state.profesional.profesional\n  );\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n\n  const [profesional, setProfesionalForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [especialidad, setEspecialidad] = useState();\n\n  const especialidadesOptions = listaEspecialidades\n    ? listaEspecialidades.map((e) => {\n        return { name: e.nombre, value: e.cd_especialidad };\n      })\n    : [];\n\n  useEffect(() => {\n    // TODO: Verificar como se setea la especialidad\n\n    if (Object.keys(profesionalSeleccionado).length !== 0) {\n      setProfesionalForm(profesionalSeleccionado);\n      setEspecialidad(profesionalSeleccionado.especialidad);\n    }\n  }, [profesionalSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfesionalForm({ [name]: value });\n  };\n\n  const handleEspecialidad = (e) => {\n    setEspecialidad({ cd_especialidad: e.target.value });\n  };\n\n  const guardarProfesional = () => {\n    const objProfesional = { ...profesional, especialidad: especialidad };\n    if (validateForm(profesional)) {\n      fetch(`${url_servidor}profesional`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objProfesional),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Profesional\", {\n            variant: \"success\",\n          });\n          dispatch(getListaProfesionales());\n          nuevoProfesional();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Profesional\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoProfesional = () => {\n    dispatch(setProfesional({}));\n    setProfesionalForm(defaultState);\n    setEspecialidad(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Profesional\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ width: \"100%\" }}\n            onClick={nuevoProfesional}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            name=\"dni\"\n            fullWidth\n            type=\"number\"\n            value={profesional.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={profesional.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={profesional.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={profesional.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={profesional.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            name=\"telefono\"\n            fullWidth\n            value={profesional.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={profesional.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Matrícula\"\n            name=\"matricula\"\n            fullWidth\n            value={profesional.matricula}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Seguro Mala Praxis\"\n            name=\"seguroMalaPraxis\"\n            fullWidth\n            type=\"number\"\n            value={profesional.seguroMalaPraxis}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"CUIT\"\n            name=\"cuit\"\n            fullWidth\n            type=\"number\"\n            value={profesional.cuit}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Registro Nacional Prestadores\"\n            name=\"registroNacPrestadores\"\n            fullWidth\n            type=\"number\"\n            value={profesional.registroNacPrestadores}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"especialidad\"\n            label=\"Especialidad\"\n            options={especialidadesOptions}\n            value={(especialidad && especialidad.cd_especialidad) || \"\"}\n            handleChange={handleEspecialidad}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarProfesional}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport ProfesionalTable from \"./ProfesionalTable\";\nimport ProfesionalForm from \"./ProfesionalForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Profesional() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaEspecialidad());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <ProfesionalTable />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={3}\n        style={{ width: \"100%\" }}\n        className={classes.borderForm}\n      >\n        <ProfesionalForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport DataTable from \"react-data-table-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { buscarTurnosPaciente } from \"actions/BuscarTurnosActions\";\nimport { useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport { setPaciente, eliminarPaciente } from \"actions/PacienteActions\";\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Buscar...\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </>\n);\n\nconst Circular = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst buscarEnTabla = (listaPacientes, filterText) => {\n  return listaPacientes.filter(\n    (paciente) =>\n      paciente.dni.toString().includes(filterText.toLowerCase()) ||\n      paciente.nombre.toLowerCase().includes(filterText.toLowerCase()) ||\n      paciente.apellido.toLowerCase().includes(filterText.toLowerCase())\n  );\n};\n\nexport default function TablaPaciente() {\n  const buscarInfo = useSelector((state) => state.buscarTurnos);\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const dispatch = useDispatch();\n  /* DATATABLE */\n\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  const filteredItems = buscarEnTabla(listaPacientes, filterText);\n\n  const deletePaciente = (row) => {\n    confirmAlert({\n      title: row.nombre + \" \" + row.apellido,\n      message: \"DNI: \" + row.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () => dispatch(eliminarPaciente(row.dni)),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n  /* FIN STATES DATATABLE */\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (filterText !== \"\") {\n        setRows(filteredItems);\n      } else setRows(listaPacientes);\n      setPending(false);\n    });\n    return () => clearTimeout(timeout);\n  }, [listaPacientes, filterText, filteredItems]);\n\n  useEffect(() => {\n    if (buscarInfo.paciente !== 0) {\n      dispatch(buscarTurnosPaciente(buscarInfo.paciente, buscarInfo.actuales));\n    }\n  }, [dispatch, buscarInfo.actuales, buscarInfo.paciente]);\n\n  /** ROW FILTROS DE TABLA */\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <Grid container>\n        <Grid item md={3} lg={3} sm={6} xs={12}>\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            onClear={handleClear}\n            filterText={filterText}\n          />\n        </Grid>\n      </Grid>\n    );\n  }, [filterText, resetPaginationToggle]);\n  /** FIN FILTROS TABLA */\n\n  const columns = [\n    {\n      name: \"DNI\",\n      sortable: true,\n      selector: \"dni\",\n    },\n    {\n      name: \"Nombre\",\n      cell: (row) => <div>{row.nombre + \" \" + row.apellido}</div>,\n      sortable: true,\n      selector: \"nombre\",\n    },\n\n    {\n      name: \"Dirección\",\n      sortable: true,\n      selector: \"direccion\",\n    },\n    {\n      name: \"Teléfono\",\n      sortable: true,\n      selector: \"telefono\",\n    },\n    {\n      name: \"Email\",\n      sortable: true,\n      selector: \"email\",\n    },\n    {\n      name: \"Obra Social\",\n      cell: (row) => (\n        <div>\n          {row.plan.obraSocial.nombre.toUpperCase() + \" - \" + row.plan.nombre}\n        </div>\n      ),\n      sortable: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => dispatch(setPaciente(row))}\n        >\n          <FontAwesomeIcon icon={faEye} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n    {\n      cell: (row) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          button\n          onClick={() => deletePaciente(row)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n    },\n  ];\n  /** FIN COLUMNAS DE TABLA */\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.dni === pacienteSeleccionado.dni,\n      style: {\n        color: \"#162996\",\n        borderBottom: \"2px solid #4051b5 !important\",\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n  ];\n\n  return (\n    <DataTable\n      noHeader={true}\n      columns={columns}\n      subHeader\n      progressPending={pending}\n      progressComponent={<Circular />}\n      pointerOnHover={true}\n      subHeaderComponent={subHeaderComponentMemo}\n      data={rows}\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPaciente, getListaPacientes } from \"actions/PacienteActions\";\n\nimport FormSelect from \"components/Logged/FormsABM/FormSelect\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { fechaString, validateForm } from \"Utils/functions\";\n\nconst defaultState = {\n  dni: \"\",\n  nombre: \"\",\n  apellido: \"\",\n  fecha_nacimiento: fechaString(new Date()),\n  sexo: \"\",\n  direccion: \"\",\n  telefono: \"\",\n  email: \"\",\n  nroAfiliado: \"\",\n};\n\nconst options = [\n  { name: \"Femenino\", value: \"F\" },\n  { name: \"Masculino\", value: \"M\" },\n];\n\nexport default function PacienteForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const pacienteSeleccionado = useSelector((state) => state.paciente.paciente);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n\n  const [paciente, setPacienteForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n\n  const [plan, setPlan] = useState();\n\n  const planesOptions = listaPlanes\n    ? listaPlanes.map((e) => {\n        return { name: e.obraSocial.nombre + \" \" + e.nombre, value: e.cd_plan };\n      })\n    : [];\n\n  useEffect(() => {\n    if (Object.keys(pacienteSeleccionado).length !== 0) {\n      const paciente = {\n        ...pacienteSeleccionado,\n        fecha_nacimiento: fechaString(\n          new Date(pacienteSeleccionado.fecha_nacimiento),\n          1\n        ),\n      };\n      setPacienteForm(paciente);\n      setPlan(pacienteSeleccionado.plan);\n    }\n  }, [pacienteSeleccionado]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPacienteForm({ [name]: value });\n  };\n\n  const handlePlan = (e) => {\n    setPlan({ cd_plan: e.target.value });\n  };\n\n  const guardarPaciente = () => {\n    const objPlan = { ...paciente, plan: plan };\n    if (validateForm(paciente)) {\n      fetch(`${url_servidor}paciente`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objPlan),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Paciente\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPacientes());\n          nuevoPaciente();\n        } else {\n          enqueueSnackbar(\"Error al guardar el Paciente\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevoPaciente = () => {\n    dispatch(setPaciente({}));\n    setPacienteForm(defaultState);\n    setPlan(\"\");\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={9} xs={12} md={7} sm={12} className={classes.headerForm}>\n          Crear/Editar Paciente\n        </Grid>\n        <Grid item lg={3} xs={12} md={5} sm={12} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            color=\"default\"\n            onClick={nuevoPaciente}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"DNI\"\n            type=\"number\"\n            name=\"dni\"\n            fullWidth\n            value={paciente.dni}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nombre\"\n            name=\"nombre\"\n            fullWidth\n            value={paciente.nombre}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Apellido\"\n            name=\"apellido\"\n            fullWidth\n            value={paciente.apellido}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"sexo\"\n            label=\"Sexo\"\n            options={options}\n            value={paciente.sexo}\n            handleChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Dirección\"\n            name=\"direccion\"\n            fullWidth\n            value={paciente.direccion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Teléfono\"\n            type=\"number\"\n            name=\"telefono\"\n            fullWidth\n            value={paciente.telefono}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Correo Electrónico\"\n            name=\"email\"\n            fullWidth\n            value={paciente.email}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Nacimiento\"\n            name=\"fecha_nacimiento\"\n            fullWidth\n            type=\"date\"\n            value={paciente.fecha_nacimiento}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Nro de Afiliado\"\n            type=\"number\"\n            name=\"nroAfiliado\"\n            fullWidth\n            value={paciente.nroAfiliado}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <FormSelect\n            name=\"plan\"\n            label=\"Plan\"\n            options={planesOptions}\n            value={(plan && plan.cd_plan) || \"\"}\n            handleChange={handlePlan}\n          />\n        </Grid>\n\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={guardarPaciente}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingRight: 10,\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport { getListaPlanes } from \"actions/PlanActions\";\nimport PacienteTable from \"./PacienteTable\";\nimport PacienteForm from \"./PacienteForm\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Paciente() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getListaPacientes());\n    dispatch(getListaPlanes());\n  }, [dispatch]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12} md={12} lg={9} className={classes.lista}>\n        <PacienteTable />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} lg={3} className={classes.borderForm}>\n        <PacienteForm />\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles(() => ({\n  borderForm: {\n    height: \"100%\",\n  },\n  lista: {\n    maxHeight: \"100vh\",\n    overflowY: \"auto\",\n    borderRight: \"1px solid #e4e4e4\",\n  },\n}));\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n  ERROR_MESSAGE,\n} from \"./types\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport function setModalHistoriaClinica(open) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_HISTORIA_CLINICA,\n      payload: open,\n    });\n  };\n}\nexport function setHistoriaClinica(historiaClinica) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_HISTORIA_CLINICA,\n      payload: historiaClinica,\n    });\n  };\n}\nexport function eliminarHistoriaClinica(id, callBack, especialidadPaciente) {\n  return (dispatch) => {\n    fetch(`${url_servidor}historiaClinica/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.status === 200) {\n        callBack();\n        especialidadPaciente();\n        dispatch({\n          type: ERROR_MESSAGE,\n          payload: {\n            message: \"Se elimnó la historia clinica\",\n            tipo: \"success\",\n          },\n        });\n      }\n    });\n  };\n}\n\nexport function getListaHistoriaClinica(dni, especialidad) {\n  return (dispatch) => {\n    fetch(\n      `${url_servidor}historiaClinica/dni/${dni}/especialidad/${especialidad}`,\n      {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        dispatch({\n          type: SET_LISTA_HISTORIA_CLINICA,\n          payload: data,\n        })\n      );\n  };\n}\n\nexport function cleanHistoriaClinica() {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LISTA_HISTORIA_CLINICA,\n      payload: [],\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { buscarTurnosProfesinal } from \"actions/BuscarTurnosActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { setEspecialidad } from \"actions/EspecialidadActions\";\n\nexport default function HeaderListaHistoriaClinica() {\n  const [especialidadSeleccionada, setValue] = React.useState(0);\n  const dispatch = useDispatch();\n  const listaEspecialidades = useSelector(\n    (state) => state.especialidad.listaEspecialidades\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n\n  useEffect(() => {\n    dispatch(\n      setEspecialidad({\n        cd_especialidad: especialidadSeleccionada,\n        nombre: \"\",\n      })\n    );\n    setValue(especialidadSeleccionada);\n    dispatch(getListaHistoriaClinica(paciente, especialidadSeleccionada));\n    dispatch(especialidadesPaciente(paciente));\n  }, [dispatch, paciente, especialidadSeleccionada]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(buscarTurnosProfesinal(0, 1));\n  };\n\n  const createTabs = () => {\n    return listaEspecialidades.map((especialidad) => {\n      return (\n        <Tab\n          key={especialidad.cd_especialidad}\n          label={especialidad.nombre}\n          value={especialidad.cd_especialidad}\n        />\n      );\n    });\n  };\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    dispatch(setModalHistoriaClinica(true));\n  };\n\n  return (\n    <div style={{ height: \"10vh\" }}>\n      <Grid container style={{ margin: 10, marginRight: 20 }}>\n        <Grid item md={8} sm={4} xs={12}></Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={paciente ? false : true}\n            style={{ width: \"100%\" }}\n            onClick={() => nuevaHistoriaClinica()}\n          >\n            Nueva Historia Clínica\n          </Button>\n        </Grid>\n        <Grid item md={1} sm={2} xs={12}></Grid>\n      </Grid>\n      <Paper square>\n        <Tabs\n          value={especialidadSeleccionada}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          {listaEspecialidades.length && paciente !== 0 ? (\n            <Tab key={0} label=\"Todas\" value={0} />\n          ) : (\n            \"\"\n          )}\n          {listaEspecialidades.length && paciente !== 0 ? createTabs() : \"\"}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formatDateString } from \"Utils/functions\";\nimport { faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getListaHistoriaClinica,\n  setHistoriaClinica,\n  setModalHistoriaClinica,\n  eliminarHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nexport default function ListaHistoriaClinica() {\n  const listaHistoriaClinica = useSelector(\n    (state) => state.historiaClinica.listaHistoriaClinica\n  );\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const seleccionarHistoriaClinica = (historia_clinica) => {\n    dispatch(setHistoriaClinica(historia_clinica));\n    dispatch(setModalHistoriaClinica(true));\n  };\n  const deleteHistoriaClinica = (historiaClinica) => {\n    confirmAlert({\n      title: `Historia Clínica #${historiaClinica.id_historia_clinica}`,\n      message:\n        \"Paciente: \" +\n        historiaClinica.paciente.nombre +\n        \" \" +\n        historiaClinica.paciente.apellido +\n        \" - \" +\n        historiaClinica.paciente.dni,\n      buttons: [\n        {\n          label: \"Eliminar\",\n          onClick: () =>\n            dispatch(\n              eliminarHistoriaClinica(\n                historiaClinica.id_historia_clinica,\n                () =>\n                  dispatch(\n                    getListaHistoriaClinica(\n                      paciente,\n                      especialidad.cd_especialidad\n                    )\n                  ),\n                () => dispatch(especialidadesPaciente(paciente))\n              )\n            ),\n        },\n        {\n          label: \"Cancelar\",\n        },\n      ],\n    });\n  };\n\n  const armarListaHistoriaClinica = () => {\n    return listaHistoriaClinica.map((historia_clinica, index) => {\n      return (\n        <Card\n          key={index}\n          className={\n            historiaClinicaSeleccionada.id_historia_clinica ===\n            historia_clinica.id_historia_clinica\n              ? classes.rootSeleccionado\n              : classes.root\n          }\n        >\n          <CardContent>\n            <Typography\n              variant=\"h5\"\n              style={{\n                color: \"#4051b5\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n              component=\"h2\"\n              gutterBottom\n            >\n              #{historia_clinica.id_historia_clinica} - Ingreso:{\" \"}\n              {formatDateString(new Date(historia_clinica.fechaIngreso))}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Profesional:{\" \"}\n              {historia_clinica.profesional.nombre +\n                \" \" +\n                historia_clinica.profesional.apellido}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Cantidad de Sesiones: {historia_clinica.cantidadSesiones}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ borderBottom: \"1px solid #ccc\", paddingBottom: 8 }}\n            >\n              Fecha Quirurgica:{\" \"}\n              {historia_clinica.fechaQuirurgica === null\n                ? \"No Requiere\"\n                : formatDateString(new Date(historia_clinica.fechaQuirurgica))}\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Diagnostico: {historia_clinica.diagnostico}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ padding: 10, paddingLeft: 0 }}\n            >\n              Tratamiento: {historia_clinica.tratamiento}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Grid container>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => seleccionarHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faEye} />\n                </Button>\n              </Grid>\n              <Grid item lg={2} md={2} sm={3} xs={6}>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => deleteHistoriaClinica(historia_clinica)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      );\n    });\n  };\n\n  const cardsTurnos = () => {\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          {listaHistoriaClinica && listaHistoriaClinica.length > 0 ? (\n            armarListaHistoriaClinica()\n          ) : (\n            <div className={classes.rootAlert}>\n              <Alert variant=\"filled\" severity=\"warning\">\n                No se encontraron historias clínicas\n              </Alert>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={classes.containerTurnos}>\n      {listaHistoriaClinica ? cardsTurnos() : \"\"}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 5,\n    border: \"1px solid #fff\",\n    \"&:hover\": {\n      border: \"1px solid #4051b5\",\n      cursor: \"pointer\",\n    },\n  },\n  rootSeleccionado: {\n    minWidth: 275,\n    margin: 5,\n    border: \"2px solid  #4051b5\",\n  },\n  rootAlert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  containerTurnos: {\n    padding: 20,\n    paddingTop: 10,\n    maxHeight: \"85vh\",\n    minHeight: \"85vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"#f1f1f1\",\n  },\n}));\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { especialidadesPaciente } from \"actions/EspecialidadActions\";\nimport Select from \"react-select\";\nimport {\n  setHistoriaClinica,\n  getListaHistoriaClinica,\n  setModalHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { fechaString, validateForm } from \"Utils/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nconst defaultState = {\n  id_historia_clinica: 0,\n  diagnostico: \"\",\n  tratamiento: \"\",\n  fechaQuirurgica: fechaString(new Date()),\n  fechaIngreso: fechaString(new Date()),\n  cantidadSesiones: \"\",\n  fechaAutorizacion: fechaString(new Date()),\n  cdFacturacion: \"\",\n  cdValidacion: \"\",\n};\n\nconst optionsProfesional = (listaProfesionales) => {\n  const options = [];\n\n  listaProfesionales.map((profesional) => {\n    return options.push({\n      value: profesional.dni,\n      label:\n        profesional.nombre +\n        \" \" +\n        profesional.apellido +\n        \" (\" +\n        profesional.especialidad.nombre +\n        \")\",\n    });\n  });\n  return options;\n};\nconst optionsPaciente = (listaPacientes) => {\n  const options = [];\n\n  listaPacientes.map((paciente) => {\n    return options.push({\n      value: paciente.dni,\n      label: paciente.dni + \" \" + paciente.nombre + \" \" + paciente.apellido,\n    });\n  });\n  return options;\n};\n\nexport default function HistoriaClinicaForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [cirugia, setCirugia] = useState(true);\n  const paciente = useSelector((state) => state.buscarTurnos.paciente);\n  const especialidad = useSelector((state) => state.especialidad.especialidad);\n  const [historiaClinicaForm, setHistoriaClinicaForm] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      ...defaultState,\n    }\n  );\n  const [profesional, setProfesional] = useState();\n\n  const historiaClinicaSeleccionada = useSelector(\n    (state) => state.historiaClinica.historiaClinica\n  );\n\n  const listaPacientes = useSelector((state) => state.paciente.listaPacientes);\n\n  const listaProfesionales = useSelector(\n    (state) => state.profesional.listaProfesionales\n  );\n\n  useEffect(() => {\n    if (Object.keys(historiaClinicaSeleccionada).length !== 0) {\n      const historiaClinica = {\n        ...historiaClinicaSeleccionada,\n        fechaQuirurgica: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaQuirurgica)\n        ),\n        fechaIngreso: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaIngreso)\n        ),\n        fechaAutorizacion: fechaString(\n          new Date(historiaClinicaSeleccionada.fechaAutorizacion)\n        ),\n      };\n\n      setHistoriaClinicaForm(historiaClinica);\n\n      setProfesional(historiaClinicaSeleccionada.profesional);\n      setCirugia(\n        historiaClinicaSeleccionada.fechaQuirurgica === null ? false : true\n      );\n    }\n  }, [historiaClinicaSeleccionada]);\n\n  const checkFechaCirugia = (cirugia) => {\n    let historiaClinica = historiaClinicaForm;\n    if (cirugia) {\n      historiaClinica.fechaQuirurgica = fechaString(new Date());\n      setHistoriaClinicaForm(historiaClinica);\n    } else {\n      historiaClinica.fechaQuirurgica = null;\n      setHistoriaClinicaForm(historiaClinica);\n    }\n    setCirugia(cirugia);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"cantidadSesiones\" && value <= 0) {\n      enqueueSnackbar(\"La cantidad de sesiones debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else if (name === \"cdFacturacion\" && value <= 0) {\n      enqueueSnackbar(\"El número de factura debe ser mayor a 0\", {\n        variant: \"warning\",\n      });\n    } else {\n      setHistoriaClinicaForm({ [name]: value });\n    }\n  };\n\n  const handleProfesional = (value) => {\n    setProfesional({ dni: value });\n  };\n\n  const guardarHistoriaClinica = () => {\n    const objHistoriaClinica = {\n      ...historiaClinicaForm,\n      paciente: { dni: paciente },\n      profesional: profesional,\n    };\n    if (validateForm(historiaClinicaForm)) {\n      fetch(`${url_servidor}historiaClinica`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(objHistoriaClinica),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó la Historia Clínica\", {\n            variant: \"success\",\n          });\n          dispatch(\n            getListaHistoriaClinica(paciente, especialidad.cd_especialidad)\n          );\n          dispatch(especialidadesPaciente(paciente));\n          nuevaHistoriaClinica();\n        } else {\n          enqueueSnackbar(\"Error al guardar la Historia Clínica\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar ningún campo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  const nuevaHistoriaClinica = () => {\n    dispatch(setHistoriaClinica({}));\n    setHistoriaClinicaForm(defaultState);\n    setProfesional(\"\");\n    dispatch(setModalHistoriaClinica(false));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsPaciente(listaPacientes)}\n            isSearchable={true}\n            placeholder={<div>Paciente</div>}\n            styles={colourStyles}\n            isDisabled={true}\n            value={optionsPaciente(listaPacientes).filter(\n              (option) => option.value === paciente\n            )}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Select\n            options={optionsProfesional(listaProfesionales)}\n            isSearchable={true}\n            placeholder={<div>Profesional</div>}\n            styles={colourStyles}\n            onChange={(value) => handleProfesional(value.value)}\n            value={\n              profesional\n                ? optionsProfesional(listaProfesionales).filter(\n                    (option) => option.value === profesional.dni\n                  )\n                : \"\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"diagnostico\">Diagnóstico</InputLabel>\n          <TextareaAutosize\n            id=\"diagnostico\"\n            name=\"diagnostico\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.diagnostico}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <InputLabel id=\"tratamiento\">Tratamiento</InputLabel>\n          <TextareaAutosize\n            id=\"tratamiento\"\n            name=\"tratamiento\"\n            rowsMax={6}\n            className={classes.textArea}\n            value={historiaClinicaForm.tratamiento}\n            onChange={handleInputChange}\n            aria-label=\"maximum height\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={4}>\n              <FormControlLabel\n                style={{ paddingTop: 20 }}\n                control={\n                  <Checkbox\n                    checked={cirugia}\n                    onChange={() => checkFechaCirugia(cirugia ? false : true)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Fecha de Cirugía\"\n              />\n            </Grid>\n            {cirugia ? (\n              <Grid item xs={6} md={8}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  name=\"fechaQuirurgica\"\n                  fullWidth\n                  type=\"date\"\n                  value={historiaClinicaForm.fechaQuirurgica}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Ingreso\"\n            name=\"fechaIngreso\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaIngreso}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Cantidad de Sesiones\"\n            name=\"cantidadSesiones\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cantidadSesiones}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Fecha de Autorización\"\n            name=\"fechaAutorizacion\"\n            fullWidth\n            type=\"date\"\n            value={historiaClinicaForm.fechaAutorizacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Factura\"\n            name=\"cdFacturacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdFacturacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} className={classes.gridInputs}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label=\"Código de Validación\"\n            name=\"cdValidacion\"\n            fullWidth\n            type=\"number\"\n            value={historiaClinicaForm.cdValidacion}\n            onChange={handleInputChange}\n          />\n        </Grid>\n\n        <Grid item xs={6} lg={9} md={7} className={classes.gridInputs}>\n          <Grid container>\n            <Grid item xs={6} md={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={guardarHistoriaClinica}\n              >\n                Guardar\n              </Button>\n            </Grid>\n            <Grid item xs={6} md={2} style={{ paddingLeft: 5 }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => dispatch(setModalHistoriaClinica(false))}\n              >\n                Cerrar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  headerForm: {\n    textAlign: \"center\",\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 5,\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n  },\n  gridInputs: { paddingLeft: 10, paddingRight: 10, backgroundColor: \"white\" },\n}));\nconst colourStyles = {\n  control: (base) => ({\n    ...base,\n    height: 56,\n    minHeight: 35,\n    marginTop: 10,\n    marginBottom: 10,\n  }),\n};\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  setModalHistoriaClinica,\n  setHistoriaClinica,\n  cleanHistoriaClinica,\n} from \"actions/HistoriaClinicaActions\";\nimport { getListaProfesionales } from \"actions/ProfesionalActions\";\nimport { getListaPacientes } from \"actions/PacienteActions\";\nimport TablaPacientes from \"../../BuscarTurno/TablaPacientes\";\nimport HeaderListaHistoriaClinica from \"./HeaderListaHistoriaClinica\";\nimport ListaHistoriaClinica from \"./ListaHistoriaClinica\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistoriaClinicaForm from \"./HistoriaClinicaForm\";\nimport { setBuscarPaciente } from \"actions/BuscarTurnosActions\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function HistoriaClinica() {\n  const dispatch = useDispatch();\n  const open_modal = useSelector((state) => state.historiaClinica.open_modal);\n  useEffect(() => {\n    dispatch(getListaProfesionales());\n    dispatch(getListaPacientes());\n    dispatch(setBuscarPaciente(0));\n    dispatch(cleanHistoriaClinica());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(setModalHistoriaClinica(false));\n    dispatch(setHistoriaClinica({}));\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"100vh\" }}>\n        <Grid item xs={12} style={{ height: \"100vh\" }}>\n          <Grid container>\n            <Grid item xs={12} md={3}>\n              <TablaPacientes />\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              md={9}\n              style={{ height: \"100vh\", borderLeft: \"1px solid #ccc\" }}\n            >\n              <HeaderListaHistoriaClinica />\n              <ListaHistoriaClinica />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={open_modal ? true : false}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{ zIndex: 11000 }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            margin: 20,\n            minHeight: \"50vh\",\n          }}\n        >\n          <HistoriaClinicaForm />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Agenda from \"./Agenda/Agenda\";\nimport ObraSocial from \"./FormsABM/ObraSocial/ObraSocial\";\nimport Plan from \"./FormsABM/Plan/Plan\";\nimport Servicio from \"./FormsABM/Servicio/Servicio\";\nimport { useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaMensual from \"./Agenda Mensual/AgendaMensual\";\nimport AgendaSemanal from \"./Agenda Semanal/AgendaSemanal\";\nimport Especialidad from \"./FormsABM/Especialidad/Especialidad\";\nimport Prestadora from \"./FormsABM/Prestadora/Prestadora\";\nimport TipoServicio from \"./FormsABM/TipoServicio/TipoServicio\";\nimport BuscarTurno from \"./BuscarTurno/BuscarTurno\";\nimport CostoServicio from \"./FormsABM/CostoServicio/CostoServicio\";\n\nimport Profesional from \"./FormsABM/Profesional/Profesional\";\nimport Paciente from \"./FormsABM/Paciente/Paciente\";\nimport HistoriaClinica from \"./FormsABM/HistoriaClinica/HistoriaClinica\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function PrimaryContainer() {\n  const { enqueueSnackbar } = useSnackbar();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const errorMessage = useSelector((state) => state.errorMessage.error);\n  useEffect(() => {\n    if (errorMessage.tipo !== undefined) {\n      enqueueSnackbar(errorMessage.message, {\n        variant: errorMessage.tipo,\n      });\n    }\n  }, [enqueueSnackbar, errorMessage]);\n\n  const switchMenu = () => {\n    switch (menuSelected) {\n      case menuOptions.Agenda_DIARIA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Agenda limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_MENSUAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaMensual limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.Agenda_SEMANAL:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <AgendaSemanal limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.BUSCAR_TURNO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <BuscarTurno limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.OBRAS_SOCIALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <ObraSocial limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PLAN:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Plan limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.SERVICIOS:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Servicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.TIPO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <TipoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.PRESTADORA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Prestadora limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.COSTO_SERVICIO:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <CostoServicio limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PROFESIONALES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Profesional limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.PACIENTES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Paciente limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      case menuOptions.ESPECIALIDADES:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <Especialidad limpiar={menuSelected.limpiar} />\n          </div>\n        );\n      case menuOptions.HISTORIA_CLINICA:\n        return (\n          <div style={{ height: \"100%\" }}>\n            <HistoriaClinica limpiar={menuSelected.limpiar} />\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return <div>{switchMenu()}</div>;\n}\n","import React from \"react\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function InformacionEmpresaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <Grid container style={{ zIndex: 10000 }}>\n      <Grid item xs={12}>\n        <Grid container>\n          <Grid item xs={12}>\n            <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n          </Grid>\n          <MediaQuery minDeviceWidth={1300}>\n            <Grid item xs={12} className={props.classes.textMenu}>\n              Información\n            </Grid>\n          </MediaQuery>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {props.open ? (\n          <div className={classes.subMenuContainer}>\n            <Grid container style={{ width: \"auto\", display: \"block\" }}>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.COSTO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO)}\n              >\n                {menuOptions.COSTO_SERVICIO}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.ESPECIALIDADES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.ESPECIALIDADES)}\n              >\n                {menuOptions.ESPECIALIDADES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.OBRAS_SOCIALES === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES)}\n              >\n                {menuOptions.OBRAS_SOCIALES}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PLAN === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PLAN)}\n              >\n                {menuOptions.PLAN}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.PRESTADORA === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.PRESTADORA)}\n              >\n                {menuOptions.PRESTADORA}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.SERVICIOS === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.SERVICIOS)}\n              >\n                {menuOptions.SERVICIOS}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={[\n                  classes.subMenuOptions,\n                  menuOptions.TIPO_SERVICIO === menuSelected\n                    ? classes.subMenuSelected\n                    : \"\",\n                ]}\n                onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO)}\n              >\n                {menuOptions.TIPO_SERVICIO}\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </Grid>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 10,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"42vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React from \"react\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport MediaQuery from \"react-responsive\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <div container style={{ zIndex: 10000 }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n        </Grid>\n        <MediaQuery minDeviceWidth={1300}>\n          <Grid item xs={12} className={props.classes.textMenu}>\n            {menuOptions.AGENDA}\n          </Grid>\n        </MediaQuery>\n      </Grid>\n\n      {props.open ? (\n        <div className={classes.subMenuContainer}>\n          <Grid container style={{ width: \"auto\", display: \"block\" }}>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_DIARIA === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_DIARIA)}\n            >\n              {menuOptions.Agenda_DIARIA}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_SEMANAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL)}\n            >\n              {menuOptions.Agenda_SEMANAL}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={[\n                classes.subMenuOptions,\n                menuOptions.Agenda_MENSUAL === menuSelected\n                  ? classes.subMenuSelected\n                  : \"\",\n              ]}\n              onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL)}\n            >\n              {menuOptions.Agenda_MENSUAL}\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  subMenuOptions: {\n    padding: 10,\n    color: \"#333\",\n    fontSize: 12,\n    fontWeight: \"normal\",\n    \"&:hover\": {\n      fontWeight: \"bold\",\n      borderBottom: \"2px solid #de3444\",\n    },\n  },\n  subMenuSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"4px solid #de3444\",\n  },\n  subMenuContainer: {\n    borderTopLeftRadius: 0,\n    paddingLeft: 10,\n    paddingRight: 10,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    left: \"5vw\",\n    top: \"2vh\",\n    border: \"1px solid #ccc\",\n    borderRadius: 5,\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { SWITCH_MENU } from \"actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport InformacionEmpresaMenu from \"./InformacionEmpresaMenu\";\nimport AgendaMenu from \"./AgendaMenu\";\n\nconst AgendaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.Agenda_DIARIA:\n      return true;\n\n    case menuOptions.Agenda_MENSUAL:\n      return true;\n\n    case menuOptions.Agenda_SEMANAL:\n      return true;\n\n    default:\n      return false;\n  }\n};\nconst InformacionEmpresaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.ESPECIALIDADES:\n      return true;\n\n    case menuOptions.OBRAS_SOCIALES:\n      return true;\n\n    case menuOptions.PLAN:\n      return true;\n\n    case menuOptions.SERVICIOS:\n      return true;\n\n    case menuOptions.TIPO_SERVICIO:\n      return true;\n\n    case menuOptions.PRESTADORA:\n      return true;\n\n    case menuOptions.COSTO_SERVICIO:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nexport default function MenuLeft() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openAgenda, setOpenAgenda] = useState(false);\n  const [openInformacionEmpresa, setOpenInformacionEmpresa] = useState(false);\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  useEffect(() => {\n    setOpenAgenda(false);\n    setOpenInformacionEmpresa(false);\n  }, [menuSelected]);\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            AgendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onMouseLeave={() => setOpenAgenda(false)}\n          onMouseOver={() => setOpenAgenda(true)}\n        >\n          <AgendaMenu open={openAgenda} classes={classes} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA)}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={12} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          onMouseLeave={() => setOpenInformacionEmpresa(false)}\n          onMouseOver={() => setOpenInformacionEmpresa(true)}\n          className={[\n            classes.gridItemMenu,\n            InformacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n        >\n          <InformacionEmpresaMenu\n            open={openInformacionEmpresa}\n            classes={classes}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n\n    \"&:Hover\": {\n      fontWeight: \"bold\",\n      backgroundColor: \"#bf2231\",\n      cursor: \"pointer\",\n      color: \"#fff\",\n    },\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"center\",\n    marginTop: 10,\n    fontSize: 10,\n  },\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport MenuLeft from \"./ContainerBigMenu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function BigMenu(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <MenuLeft />\n      </div>\n\n      <div className={classes.containerPrimary}>\n        <PrimaryContainer></PrimaryContainer>\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"5%\",\n    minHeight: \"100%\",\n    backgroundColor: \"#333\",\n    zIndex: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"95%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport Grid from \"@material-ui/core/Grid\";\nexport default function AgendaMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_DIARIA)}\n          className={\n            menuSelected === menuOptions.Agenda_DIARIA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_DIARIA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_SEMANAL)}\n          className={\n            menuSelected === menuOptions.Agenda_SEMANAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_SEMANAL}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.Agenda_MENSUAL)}\n          className={\n            menuSelected === menuOptions.Agenda_MENSUAL\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.Agenda_MENSUAL}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function InformacionEmpresaSmallMenu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.COSTO_SERVICIO)}\n          className={\n            menuSelected === menuOptions.COSTO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.COSTO_SERVICIO}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.ESPECIALIDADES)}\n          className={\n            menuSelected === menuOptions.ESPECIALIDADES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.ESPECIALIDADES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.OBRAS_SOCIALES)}\n          className={\n            menuSelected === menuOptions.OBRAS_SOCIALES\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.OBRAS_SOCIALES}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PLAN)}\n          className={\n            menuSelected === menuOptions.PLAN\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PLAN}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.PRESTADORA)}\n          className={\n            menuSelected === menuOptions.PRESTADORA\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.PRESTADORA}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.SERVICIOS)}\n          className={\n            menuSelected === menuOptions.SERVICIOS\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.SERVICIOS}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={3}></Grid>\n\n        <Grid\n          item\n          xs={9}\n          onClick={() => gotoMenu(menuOptions.TIPO_SERVICIO)}\n          className={\n            menuSelected === menuOptions.TIPO_SERVICIO\n              ? classes.selectedSubMenu\n              : classes.textSubMenu\n          }\n        >\n          {menuOptions.TIPO_SERVICIO}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  textSubMenu: {\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n  },\n  selectedSubMenu: {\n    borderLeft: \"4px solid #333\",\n    textAlign: \"left\",\n    fontSize: 25,\n    color: \"white\",\n    padding: 20,\n    backgroundColor: \"#bf2231\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileMedical,\n  faSearch,\n  faUserMd,\n  faUser,\n  faCalendarAlt,\n  faBook,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport AgendaSmallMenu from \"./AgendaSmallMenu\";\nimport InformacionEmpresaSmallMenu from \"./InformacionEmpresaSmallMenu\";\n\nconst AgendaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.Agenda_DIARIA:\n      return true;\n\n    case menuOptions.Agenda_MENSUAL:\n      return true;\n\n    case menuOptions.Agenda_SEMANAL:\n      return true;\n    case menuOptions.AGENDA:\n      return true;\n\n    default:\n      return false;\n  }\n};\nconst InformacionEmpresaSeleccionada = (menuSelected) => {\n  switch (menuSelected) {\n    case menuOptions.INFORMACION_EMPRESA:\n      return true;\n    case menuOptions.ESPECIALIDADES:\n      return true;\n    case menuOptions.OBRAS_SOCIALES:\n      return true;\n\n    case menuOptions.PLAN:\n      return true;\n\n    case menuOptions.SERVICIOS:\n      return true;\n\n    case menuOptions.TIPO_SERVICIO:\n      return true;\n\n    case menuOptions.PRESTADORA:\n      return true;\n\n    case menuOptions.COSTO_SERVICIO:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nexport default function ContainerSmallMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            AgendaSeleccionada(menuSelected) ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.AGENDA)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faCalendarAlt} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.AGENDA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {AgendaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <AgendaSmallMenu />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.BUSCAR_TURNO === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.BUSCAR_TURNO)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faSearch} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.BUSCAR_TURNO}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PROFESIONALES === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PROFESIONALES)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUserMd} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PROFESIONALES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.PACIENTES === menuSelected ? classes.gridSelected : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.PACIENTES)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faUser} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.PACIENTES}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            menuOptions.HISTORIA_CLINICA === menuSelected\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.HISTORIA_CLINICA)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faFileMedical} style={{ width: \"100%\" }} />\n            </Grid>\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.HISTORIA_CLINICA}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          className={[\n            classes.gridItemMenu,\n            InformacionEmpresaSeleccionada(menuSelected)\n              ? classes.gridSelected\n              : \"\",\n          ]}\n          onClick={() => gotoMenu(menuOptions.INFORMACION_EMPRESA)}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <FontAwesomeIcon icon={faBook} style={{ width: \"100%\" }} />\n            </Grid>\n\n            <Grid item xs={9} className={classes.textMenu}>\n              {menuOptions.INFORMACION_EMPRESA}\n            </Grid>\n          </Grid>\n        </Grid>\n        {InformacionEmpresaSeleccionada(menuSelected) ? (\n          <Grid item xs={12} style={{ padding: 10 }}>\n            <InformacionEmpresaSmallMenu />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridItemMenu: {\n    height: \"8vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n    fontSize: 35,\n  },\n  gridSelected: {\n    fontWeight: \"bold\",\n    borderLeft: \"3px solid #333\",\n    backgroundColor: \"#bf2231\",\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    cursor: \"pointer\",\n    color: \"#fff\",\n  },\n  textMenu: {\n    textAlign: \"left\",\n    fontSize: 35,\n  },\n\n  mainContainer: {\n    border: \"2px solid #de3444\",\n    minHeight: \"100vh\",\n\n    backgroundColor: \"#de3444\",\n  },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PrimaryContainer from \"../../PrimaryContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContainerSmallMenu from \"./ContainerSmallMenu\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nexport default function SmallMenu(props) {\n  const dispatch = useDispatch();\n  const menuSelected = useSelector((state) => state.globalReducer.menuSelected);\n  const classes = useStyles();\n\n  const gotoMenu = (selected) => {\n    dispatch({\n      type: SWITCH_MENU,\n      payload: { menu: selected, limpiar: true },\n    });\n  };\n\n  return (\n    <>\n      <div className={classes.container}>\n        <Grid container className={classes.gridHeader}>\n          <Grid item xs={1} onClick={() => gotoMenu(menuOptions.MENU)}>\n            <FontAwesomeIcon icon={faBars} />\n          </Grid>\n          <Grid item xs={10}>\n            <span style={{ fontSize: 27 }}>{menuSelected}</span>\n          </Grid>\n        </Grid>\n      </div>\n\n      <div className={classes.containerPrimary}>\n        {menuSelected !== menuOptions.AGENDA &&\n        menuSelected !== menuOptions.INFORMACION_EMPRESA &&\n        menuSelected !== menuOptions.MENU ? (\n          <PrimaryContainer />\n        ) : (\n          <ContainerSmallMenu />\n        )}\n      </div>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    float: \"left\",\n    width: \"100%\",\n    height: \"5%\",\n    backgroundColor: \"#de3444\",\n    zIndex: 20,\n    paddingLeft: 20,\n  },\n  containerPrimary: {\n    float: \"right\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    zIndex: 10,\n  },\n  gridHeader: { height: \"100%\", fontSize: 35, color: \"white\", marginTop: 10 },\n}));\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\nimport BigMenu from \"./Menu/BigMenu/BigMenu\";\nimport SmallMenu from \"./Menu/SmallMenu/SmallMenu\";\n\nexport default function Logged() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n      }}\n    >\n      <MediaQuery minDeviceWidth={1300}>\n        <BigMenu />\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={1300}>\n        <SmallMenu />\n      </MediaQuery>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"../Login/Login\";\nimport Logged from \"../Logged/Logged\";\n\nexport default function MenuSwitch() {\n  const GoToMenu = () => {\n    const login = useSelector((state) => state.login_state.login); //Para saber si estoy o no logueado en el sistema\n\n    if (login === 0) {\n      return <Login></Login>;\n    } else {\n      return <Logged></Logged>;\n    }\n  };\n\n  return GoToMenu();\n}\n","import { SET_LOGIN } from \"../actions/types\";\n\nconst initialState = {\n  login: 0, // 0 significa que no estoy logueado en el sistema\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SWITCH_MENU, CLEAN_GLOBAL } from \"actions/types\";\nimport { menuOptions } from \"Utils/constants\";\nconst initialState = {\n  menuSelected: menuOptions.Agenda_DIARIA,\n  limpiar: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_MENU:\n      return {\n        ...state,\n        menuSelected: action.payload.menu,\n        limpiar: action.payload.limpiar,\n      };\n    case CLEAN_GLOBAL:\n      return {\n        ...state,\n        limpiar: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NEW_TURNO,\n  FECHA_AGENDA,\n  BORRAR_TURNO,\n  SELECT_DIA_MES,\n  SET_HORARIOS,\n  SET_TURNOS,\n  SELECT_PROFESIONAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  fecha_agenda: new Date(),\n  horarios: [],\n  profesional_seleccionado: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case NEW_TURNO:\n      return {\n        ...state,\n        turnos: agregarTurnos(state.turnos, action.payload),\n      };\n\n    case FECHA_AGENDA:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case SELECT_DIA_MES:\n      return {\n        ...state,\n        fecha_agenda: action.payload,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        turnos: borrarTurnos(state.turnos, action.payload),\n      };\n    case SET_HORARIOS:\n      return {\n        ...state,\n        horarios: action.payload,\n      };\n    case SET_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SELECT_PROFESIONAL:\n      return {\n        ...state,\n        profesional_seleccionado: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction borrarTurnos(listTurnos, info_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === info_turno.horario\n  );\n\n  let turnos_aux = listTurnos[foundIndexHorario].turnos;\n\n  turnos_aux.splice(info_turno.index, 1);\n  listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n  return [...listTurnos];\n}\n\nfunction agregarTurnos(listTurnos, nuevo_turno) {\n  const foundIndexHorario = listTurnos.findIndex(\n    (horario) => horario.horario === nuevo_turno.horario\n  );\n\n  if (foundIndexHorario === -1) {\n    return [\n      ...listTurnos,\n      { horario: nuevo_turno.horario, turnos: [nuevo_turno.turno] },\n    ];\n  } else {\n    const foundIndexTurno = listTurnos[foundIndexHorario].turnos.findIndex(\n      (turno) =>\n        turno.paciente === nuevo_turno.turno.paciente &&\n        turno.doctor === nuevo_turno.turno.doctor\n    );\n\n    if (foundIndexTurno === -1) {\n      let turnos_aux = listTurnos[foundIndexHorario].turnos;\n      turnos_aux.push(nuevo_turno.turno);\n      listTurnos[foundIndexHorario].turnos = turnos_aux;\n\n      return [...listTurnos];\n    } else {\n      return [...listTurnos];\n    }\n  }\n}\n","import {\n  EDIT_DOCTOR,\n  EDIT_FECHA,\n  EDIT_HORARIO,\n  EDIT_PACIENTE,\n  EDIT_PROGRAMAR,\n  EDIT_SERVICIO,\n  EDIT_ALL,\n  BORRAR_TURNO,\n  EDIT_NOTA,\n  EDIT_TIPO_SERVICIO,\n  EDIT_CD_TURNO,\n  SET_DEFAULT,\n} from \"../actions/types\";\n\nconst initialState = {\n  doctor: \"\",\n  paciente: \"\",\n  servicio: \"\",\n  programar: 0,\n  fecha: \"\",\n  horario: \"\",\n  nota: \"\",\n  tipoServicio: \"\",\n  cdTurno: 0,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case EDIT_ALL:\n      return {\n        ...state,\n        doctor: action.payload.profesional.dni,\n        fecha: action.payload.fecha,\n        horario: action.payload.hora,\n        paciente: action.payload.paciente.dni,\n        servicio: action.payload.servicio.cd_servicio,\n        nota: action.payload.notas,\n        tipoServicio: action.payload.tipoServicio.cdTipoServicio,\n        cdTurno: action.payload.cdTurno,\n      };\n\n    case SET_DEFAULT:\n      return {\n        ...state,\n        doctor: \"\",\n        paciente: \"\",\n        servicio: \"\",\n        programar: 0,\n        fecha: \"\",\n        horario: \"\",\n        nota: \"\",\n        tipoServicio: \"\",\n        cdTurno: 0,\n      };\n\n    case BORRAR_TURNO:\n      return {\n        ...state,\n        doctor: \"\",\n        fecha: \"\",\n        horario: \"\",\n        paciente: \"\",\n        programar: 0,\n        servicio: \"\",\n        nota: \"\",\n        index: null,\n      };\n    case EDIT_CD_TURNO:\n      return {\n        ...state,\n        cdTurno: action.payload,\n      };\n    case EDIT_DOCTOR:\n      return {\n        ...state,\n        doctor: action.payload,\n      };\n\n    case EDIT_NOTA:\n      return {\n        ...state,\n        nota: action.payload,\n      };\n\n    case EDIT_FECHA:\n      return {\n        ...state,\n        fecha: action.payload,\n      };\n\n    case EDIT_HORARIO:\n      return {\n        ...state,\n        horario: action.payload,\n      };\n\n    case EDIT_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n\n    case EDIT_PROGRAMAR:\n      return {\n        ...state,\n        programar: action.payload,\n      };\n\n    case EDIT_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case EDIT_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TURNOS_VISTA_MENSUAL,\n  SET_TURNOS_VISTA_SEMANAL,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TURNOS_VISTA_MENSUAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case SET_TURNOS_VISTA_SEMANAL:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PLAN, SET_LISTA_PLANES } from \"actions/types\";\nconst initialState = {\n  plan: {},\n  listaPlanes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAN:\n      return {\n        ...state,\n        plan: action.payload,\n      };\n    case SET_LISTA_PLANES:\n      return {\n        ...state,\n        listaPlanes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_OBRA_SOCIAL, SET_LISTA_OBRA_SOCIAL } from \"actions/types\";\nconst initialState = {\n  obraSocial: {},\n  listaObrasSociales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_OBRA_SOCIAL:\n      return {\n        ...state,\n        obraSocial: action.payload,\n      };\n    case SET_LISTA_OBRA_SOCIAL:\n      return {\n        ...state,\n        listaObrasSociales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ESPECIALIDAD, SET_LISTA_ESPECIALIDAD } from \"actions/types\";\nconst initialState = {\n  especialidad: {},\n  listaEspecialidades: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ESPECIALIDAD:\n      return {\n        ...state,\n        especialidad: action.payload,\n      };\n    case SET_LISTA_ESPECIALIDAD:\n      return {\n        ...state,\n        listaEspecialidades: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PRESTADORA, SET_LISTA_PRESTADORA } from \"actions/types\";\nconst initialState = {\n  prestadora: {},\n  listaPrestadoras: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESTADORA:\n      return {\n        ...state,\n        prestadora: action.payload,\n      };\n\n    case SET_LISTA_PRESTADORA:\n      return {\n        ...state,\n        listaPrestadoras: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SERVICIO, SET_LISTA_SERVICIOS } from \"actions/types\";\nconst initialState = {\n  servicio: {},\n  listaServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SERVICIO:\n      return {\n        ...state,\n        servicio: action.payload,\n      };\n    case SET_LISTA_SERVICIOS:\n      return {\n        ...state,\n        listaServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_TIPO_SERVICIO, SET_LISTA_TIPO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  tipoServicio: {},\n  listaTipoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO_SERVICIO:\n      return {\n        ...state,\n        tipoServicio: action.payload,\n      };\n    case SET_LISTA_TIPO_SERVICIO:\n      return {\n        ...state,\n        listaTipoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_COSTO_SERVICIO, SET_LISTA_COSTO_SERVICIO } from \"actions/types\";\nconst initialState = {\n  costoServicio: {},\n  listaCostoServicios: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_COSTO_SERVICIO:\n      return {\n        ...state,\n        costoServicio: action.payload,\n      };\n    case SET_LISTA_COSTO_SERVICIO:\n      return {\n        ...state,\n        listaCostoServicios: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PROFESIONAL, SET_LISTA_PROFESIONAL } from \"actions/types\";\n\nconst initialState = {\n  profesional: {},\n  listaProfesionales: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload,\n      };\n    case SET_LISTA_PROFESIONAL:\n      return {\n        ...state,\n        listaProfesionales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_PACIENTE, SET_LISTA_PACIENTE } from \"actions/types\";\n\nconst initialState = {\n  paciente: {},\n  listaPacientes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload,\n      };\n    case SET_LISTA_PACIENTE:\n      return {\n        ...state,\n        listaPacientes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_HISTORIA_CLINICA,\n  SET_LISTA_HISTORIA_CLINICA,\n  MODAL_HISTORIA_CLINICA,\n} from \"actions/types\";\n\nconst initialState = {\n  historiaClinica: {},\n  listaHistoriaClinica: [],\n  open_modal: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_HISTORIA_CLINICA:\n      return {\n        ...state,\n        historiaClinica: action.payload,\n      };\n    case SET_LISTA_HISTORIA_CLINICA:\n      return {\n        ...state,\n        listaHistoriaClinica: action.payload,\n      };\n    case MODAL_HISTORIA_CLINICA:\n      return {\n        ...state,\n        open_modal: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  BUSCAR_TURNOS,\n  BUSCAR_PROFESIONAL,\n  BUSCAR_PACIENTE,\n  BUSCAR_ACTUALES,\n} from \"../actions/types\";\n\nconst initialState = {\n  turnos: [],\n  profesional: 0,\n  paciente: 0,\n  actuales: 1,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case BUSCAR_TURNOS:\n      return {\n        ...state,\n        turnos: action.payload,\n      };\n    case BUSCAR_PROFESIONAL:\n      return {\n        ...state,\n        profesional: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n    case BUSCAR_PACIENTE:\n      return {\n        ...state,\n        paciente: action.payload.dni,\n        actuales: action.payload.actuales,\n      };\n\n    case BUSCAR_ACTUALES:\n      return {\n        ...state,\n        actuales: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TIPO,\n  SET_REPETIR,\n  SET_CANTIDAD,\n  SET_ARRAY_DIAS,\n  SET_DIA,\n  CLEAN_PROGRAMAR,\n} from \"../actions/types\";\n\nconst initialState = {\n  tipo: 0,\n  repetir: 1,\n  cantidad: 1,\n  arrayDias: [], //Para la semanal\n  numeroDia: 1, //Para el mensual\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TIPO:\n      return {\n        ...state,\n        tipo: action.payload,\n      };\n    case SET_REPETIR:\n      return {\n        ...state,\n        repetir: action.payload,\n      };\n    case CLEAN_PROGRAMAR:\n      return {\n        ...state,\n        tipo: 0,\n        repetir: 1,\n        cantidad: 1,\n        arrayDias: [],\n        numeroDia: 1,\n      };\n    case SET_CANTIDAD:\n      return {\n        ...state,\n        cantidad: action.payload,\n      };\n    case SET_ARRAY_DIAS:\n      return {\n        ...state,\n        arrayDias: action.payload,\n      };\n    case SET_DIA:\n      return {\n        ...state,\n        numeroDia: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { ERROR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./LoginReducer\";\nimport globalReducer from \"./GlobalReducer\";\nimport AgendaReducer from \"./AgendaReducer\";\nimport EditTurnoReducer from \"./EditTurnoReducer\";\nimport VistaMensualySemanalReducer from \"./VistaMensualySemanalReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport PlanReducer from \"./PlanReducer\";\nimport obraSocialReducer from \"./ObraSocialReducer\";\nimport EspecialidadReducer from \"./EspecialidadReducer\";\nimport PrestadoraReducer from \"./PrestadoraReducer\";\nimport ServicioReducer from \"./ServicioReducer\";\nimport TipoServicioReducer from \"./TipoServicioReducer\";\nimport CostoServicioReducer from \"./CostoServicioReducer\";\nimport ProfesionalReducer from \"./ProfesionalReducer\";\nimport PacienteReducer from \"./PacienteReducer\";\nimport HistoriaClinicaReducer from \"./HistoriaClinicaReducer\";\nimport BuscarTurnos from \"./BuscarTurnoReducer\";\nimport ProgramarAgenda from \"./ProgramarAgendaReducer\";\nimport ErrorMessageReducer from \"./ErrorMessageReducer\";\n\nexport default combineReducers({\n  login_state: LoginReducer,\n  globalReducer: globalReducer,\n  agenda_reducer: AgendaReducer,\n  editTurnoReducer: EditTurnoReducer,\n  vista_mensual_semanal: VistaMensualySemanalReducer,\n  obra_social: obraSocialReducer,\n  toastr: toastrReducer,\n  plan: PlanReducer,\n  especialidad: EspecialidadReducer,\n  prestadora: PrestadoraReducer,\n  servicio: ServicioReducer,\n  tipoServicio: TipoServicioReducer,\n  costoServicio: CostoServicioReducer,\n  profesional: ProfesionalReducer,\n  paciente: PacienteReducer,\n  historiaClinica: HistoriaClinicaReducer,\n  buscarTurnos: BuscarTurnos,\n  programarAgenda: ProgramarAgenda,\n  errorMessage: ErrorMessageReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(\n      ...middleware\n    ) /*,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuSwitch from \"./components/MenuSwitch/MenuSwitch\";\nimport { Provider } from \"react-redux\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport { SnackbarProvider } from \"notistack\";\nimport store from \"./store\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          getState={(state) => state.toastr} // This is the default\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick\n        />\n\n        <MenuSwitch />\n      </SnackbarProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}