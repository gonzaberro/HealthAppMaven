{"ast":null,"code":"import React from\"react\";import Grid from\"@material-ui/core/Grid\";import{Badge}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{setDiaMesSeleccionado}from\"actions/AgendaActions\";import{useSelector,useDispatch}from\"react-redux\";import{menuOptions}from\"Utils/constants\";import{SWITCH_MENU}from\"actions/types\";import TurnosDiaAgendaMensual from\"./TurnosDiaAgendaMensual\";export default function AgendaMensualDias(){var fechaCalendario=useSelector(function(state){return state.agenda_reducer.fecha_agenda;});var classes=useStyles();var dispatch=useDispatch();var gotoDiaCalendario=function gotoDiaCalendario(numero_dia){var ye=new Intl.DateTimeFormat(\"es\",{year:\"numeric\"}).format(fechaCalendario);//Anio en formato YYYY de la fecha que seleccione\nvar mo=new Intl.DateTimeFormat(\"es\",{month:\"2-digit\"}).format(fechaCalendario);//MES en formato MM de la fecha que seleccione\ndispatch(setDiaMesSeleccionado(new Date(ye,mo-1,numero_dia)));//Seteo la fecha del calendario con la fecha que seleccione\ndispatch({type:SWITCH_MENU,payload:menuOptions.Agenda_DIARIA});//Voy a ver la visual del calendario por DIA\n};var renderDiasCalendario=function renderDiasCalendario(){var mo=fechaCalendario.getMonth();//MES Que seleccione en el calendario\nvar ye=new Intl.DateTimeFormat(\"es\",{year:\"numeric\"}).format(fechaCalendario);//Anio en formato YYYY de la fecha que seleccione\nvar fecha_semana=new Date(ye,mo,1);//Creo el dia 1 del mes\nvar dia_primer_dia=fecha_semana.getDay();//Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\nvar dias_calendario=[];//RETURN DEL CALENDARIO\nfor(var dias=1;dias<=40;dias++){if(dias>=dia_primer_dia&&//Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\nfecha_semana.getMonth()===mo&&//Me aseguro que este dibujando siempre el mismo mes\nfecha_semana.getDay()>0//Me aseguro que el dia no sea domingo\n){(function(){var badge_numero=fecha_semana.getDate();//Lo necesito para poder saber el dia cuando hago click sobre la fecha\ndias_calendario.push(/*#__PURE__*/React.createElement(Grid,{item:true,key:\"grid_\"+dias,md:2,xs:12,className:classes.gridDias,onClick:function onClick(){return gotoDiaCalendario(badge_numero);}},/*#__PURE__*/React.createElement(Grid,{container:true,key:\"badge_container_\"+dias},/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:1,key:\"grid_nro_dia_\"+dias},/*#__PURE__*/React.createElement(Badge,{color:\"primary\",key:\"badge_nro_dia_\"+dias,badgeContent:fecha_semana.getDate(),showZero:true})),/*#__PURE__*/React.createElement(Grid,{item:true,md:11,xs:11,key:\"grid_nro_turnos_\"+dias,style:{marginTop:5},className:classes.gridTurnosDia},/*#__PURE__*/React.createElement(TurnosDiaAgendaMensual,{key:\"turnos_dia_mensual_\"+dias,dia_mes:badge_numero,mes_calendario:mo+1})))));fecha_semana.setDate(fecha_semana.getDate()+1);//Sumo 1 dia a la fecha que muestro en el calendario\n})();}else{if(fecha_semana.getDay()>0){//Dibujo solo dias vacios que no sean domingo\ndias_calendario.push(/*#__PURE__*/React.createElement(Grid,{item:true,key:dias,md:2,xs:12,className:classes.gridDias}));}else{fecha_semana.setDate(fecha_semana.getDate()+1);//Si es domingo, igualmente sumo un dia al dia del mes\n}}}return dias_calendario;};return/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}},/*#__PURE__*/React.createElement(Grid,{container:true},renderDiasCalendario()));}var useStyles=makeStyles(function(theme){return{gridDias:{border:\"1px solid #eeeeee\",padding:10,paddingLeft:15,borderLeft:\"1px solid #eeeeee\",minHeight:\"14vh\",\"&:hover\":{border:\"1px solid #2c41b5\",backgroundColor:\"#eeeeee\",color:theme.palette.primary.main,cursor:\"pointer\"}},gridTurnosDia:{maxHeight:\"12vh\",overflowY:\"auto\",overflowX:\"hidden\"}};});","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda Mensual/AgendaMensualDias.jsx"],"names":["React","Grid","Badge","makeStyles","setDiaMesSeleccionado","useSelector","useDispatch","menuOptions","SWITCH_MENU","TurnosDiaAgendaMensual","AgendaMensualDias","fechaCalendario","state","agenda_reducer","fecha_agenda","classes","useStyles","dispatch","gotoDiaCalendario","numero_dia","ye","Intl","DateTimeFormat","year","format","mo","month","Date","type","payload","Agenda_DIARIA","renderDiasCalendario","getMonth","fecha_semana","dia_primer_dia","getDay","dias_calendario","dias","badge_numero","getDate","push","gridDias","marginTop","gridTurnosDia","setDate","height","theme","border","padding","paddingLeft","borderLeft","minHeight","backgroundColor","color","palette","primary","main","cursor","maxHeight","overflowY","overflowX"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Badge } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setDiaMesSeleccionado } from \"actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { menuOptions } from \"Utils/constants\";\nimport { SWITCH_MENU } from \"actions/types\";\nimport TurnosDiaAgendaMensual from \"./TurnosDiaAgendaMensual\";\nexport default function AgendaMensualDias() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const gotoDiaCalendario = (numero_dia) => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    dispatch(setDiaMesSeleccionado(new Date(ye, mo - 1, numero_dia))); //Seteo la fecha del calendario con la fecha que seleccione\n    dispatch({ type: SWITCH_MENU, payload: menuOptions.Agenda_DIARIA }); //Voy a ver la visual del calendario por DIA\n  };\n\n  const renderDiasCalendario = () => {\n    let mo = fechaCalendario.getMonth(); //MES Que seleccione en el calendario\n\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n\n    let fecha_semana = new Date(ye, mo, 1); //Creo el dia 1 del mes\n    let dia_primer_dia = fecha_semana.getDay(); //Obtengo si empieza un LUNES,MARTES,MIERCOLES,ETC\n\n    let dias_calendario = []; //RETURN DEL CALENDARIO\n\n    for (let dias = 1; dias <= 40; dias++) {\n      if (\n        dias >= dia_primer_dia && //Me aseguro que la casilla que estoy dibujando sea parte del mes seleccionado\n        fecha_semana.getMonth() === mo && //Me aseguro que este dibujando siempre el mismo mes\n        fecha_semana.getDay() > 0 //Me aseguro que el dia no sea domingo\n      ) {\n        let badge_numero = fecha_semana.getDate(); //Lo necesito para poder saber el dia cuando hago click sobre la fecha\n\n        dias_calendario.push(\n          <Grid\n            item\n            key={\"grid_\" + dias}\n            md={2}\n            xs={12}\n            className={classes.gridDias}\n            onClick={() => gotoDiaCalendario(badge_numero)}\n          >\n            <Grid container key={\"badge_container_\" + dias}>\n              <Grid item md={1} xs={1} key={\"grid_nro_dia_\" + dias}>\n                <Badge\n                  color=\"primary\"\n                  key={\"badge_nro_dia_\" + dias}\n                  badgeContent={fecha_semana.getDate()}\n                  showZero\n                ></Badge>\n              </Grid>\n              <Grid\n                item\n                md={11}\n                xs={11}\n                key={\"grid_nro_turnos_\" + dias}\n                style={{ marginTop: 5 }}\n                className={classes.gridTurnosDia}\n              >\n                <TurnosDiaAgendaMensual\n                  key={\"turnos_dia_mensual_\" + dias}\n                  dia_mes={badge_numero}\n                  mes_calendario={mo + 1}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n        fecha_semana.setDate(fecha_semana.getDate() + 1); //Sumo 1 dia a la fecha que muestro en el calendario\n      } else {\n        if (fecha_semana.getDay() > 0) {\n          //Dibujo solo dias vacios que no sean domingo\n          dias_calendario.push(\n            <Grid\n              item\n              key={dias}\n              md={2}\n              xs={12}\n              className={classes.gridDias}\n            ></Grid>\n          );\n        } else {\n          fecha_semana.setDate(fecha_semana.getDate() + 1); //Si es domingo, igualmente sumo un dia al dia del mes\n        }\n      }\n    }\n\n    return dias_calendario;\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Grid container>{renderDiasCalendario()}</Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  gridDias: {\n    border: \"1px solid #eeeeee\",\n    padding: 10,\n    paddingLeft: 15,\n    borderLeft: \"1px solid #eeeeee\",\n    minHeight: \"14vh\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n      cursor: \"pointer\",\n    },\n  },\n  gridTurnosDia: {\n    maxHeight: \"12vh\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}