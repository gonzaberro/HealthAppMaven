{"ast":null,"code":"import React from\"react\";import Grid from\"@material-ui/core/Grid\";import{horarios}from\"./itemsAgendaData\";import Chip from\"@material-ui/core/Chip\";import{useSelector,useDispatch}from\"react-redux\";import{setHorario,editTurnoComplete}from\"../../../actions/EditTurnoActions\";import{makeStyles}from\"@material-ui/core/styles\";export default function ItemsAgendaHeader(){var turnos=useSelector(function(state){return state.agenda_reducer.turnos;});var dispatch=useDispatch();var classes=useStyles();var editTurno=function editTurno(index,turno_horario){var foundIndexHorario=turnos.findIndex(function(horario){return horario.horario===turno_horario;});var aux_turno=turnos[foundIndexHorario].turnos[index];var turno={doctor:aux_turno.doctor,paciente:aux_turno.paciente,servicio:aux_turno.servicio,programar:aux_turno.programar,fecha:aux_turno.fecha,horario:turno_horario,nota:aux_turno.nota,index:index};dispatch(editTurnoComplete(turno));};return/*#__PURE__*/React.createElement(React.Fragment,null,horarios.map(function(horario){return/*#__PURE__*/React.createElement(Grid,{key:\"horario_\"+horario,container:true,style:{minHeight:\"5vh\",zIndex:0}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:2,sm:2,md:2,lg:1,className:classes.gridHorarios},/*#__PURE__*/React.createElement(\"label\",{className:classes.labelHorario},horario)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,sm:10,md:10,lg:11,onClick:function onClick(){return dispatch(setHorario(horario));},className:classes.containerTurnosGrid},turnos.map(function(horario_turno){return horario===horario_turno.horario?horario_turno.turnos.map(function(turno,index){return/*#__PURE__*/React.createElement(Chip,{clickable:true,key:index,className:classes.chipTurnos,onClick:function onClick(){return editTurno(index,horario);},color:\"primary\",label:\"Paciente: \"+turno.paciente});}):null;})));}));}var useStyles=makeStyles(function(theme){return{containerTurnosGrid:{borderTop:\"1px solid #eeeeee\",borderLeft:\"1px solid #eeeeee\",cursor:\"pointer\",\"&:hover\":{backgroundColor:\"#efefef\",color:\"#fff\"}},chipTurnos:{margin:5,zIndex:0,boxShadow:\"2px 2px 3px 1px #cdcdcd\",\"&:hover\":{border:\"1px solid #2c41b5\",backgroundColor:\"#eeeeee\",color:theme.palette.primary.main}},labelHorario:{color:\"#0000008a\",fontWeight:\"bold\",userSelect:\"none\"},gridHorarios:{paddingTop:15,textAlign:\"center\"}};});","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/ItemsAgenda.jsx"],"names":["React","Grid","horarios","Chip","useSelector","useDispatch","setHorario","editTurnoComplete","makeStyles","ItemsAgendaHeader","turnos","state","agenda_reducer","dispatch","classes","useStyles","editTurno","index","turno_horario","foundIndexHorario","findIndex","horario","aux_turno","turno","doctor","paciente","servicio","programar","fecha","nota","map","minHeight","zIndex","gridHorarios","labelHorario","containerTurnosGrid","horario_turno","chipTurnos","theme","borderTop","borderLeft","cursor","backgroundColor","color","margin","boxShadow","border","palette","primary","main","fontWeight","userSelect","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { horarios } from \"./itemsAgendaData\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const editTurno = (index, turno_horario) => {\n    const foundIndexHorario = turnos.findIndex(\n      (horario) => horario.horario === turno_horario\n    );\n\n    let aux_turno = turnos[foundIndexHorario].turnos[index];\n\n    let turno = {\n      doctor: aux_turno.doctor,\n      paciente: aux_turno.paciente,\n      servicio: aux_turno.servicio,\n      programar: aux_turno.programar,\n      fecha: aux_turno.fecha,\n      horario: turno_horario,\n      nota: aux_turno.nota,\n      index: index,\n    };\n\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios.map((horario) => {\n        return (\n          <Grid\n            key={\"horario_\" + horario}\n            container\n            style={{ minHeight: \"5vh\", zIndex: 0 }}\n          >\n            <Grid\n              item\n              xs={2}\n              sm={2}\n              md={2}\n              lg={1}\n              className={classes.gridHorarios}\n            >\n              <label className={classes.labelHorario}>{horario}</label>\n            </Grid>\n            <Grid\n              item\n              xs={10}\n              sm={10}\n              md={10}\n              lg={11}\n              onClick={() => dispatch(setHorario(horario))}\n              className={classes.containerTurnosGrid}\n            >\n              {turnos.map((horario_turno) => {\n                return horario === horario_turno.horario\n                  ? horario_turno.turnos.map((turno, index) => {\n                      return (\n                        <Chip\n                          clickable={true}\n                          key={index}\n                          className={classes.chipTurnos}\n                          onClick={() => editTurno(index, horario)}\n                          color=\"primary\"\n                          label={\"Paciente: \" + turno.paciente}\n                        ></Chip>\n                      );\n                    })\n                  : null;\n              })}\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}