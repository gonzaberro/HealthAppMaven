{"ast":null,"code":"import _slicedToArray from\"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Grid from\"@material-ui/core/Grid\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import Button from\"@material-ui/core/Button\";import{faChevronLeft,faChevronRight}from\"@fortawesome/free-solid-svg-icons\";import FilterDoctorAgenda from\"../Agenda/FilterDoctorAgenda\";import{setFechaAgenda}from\"../../../actions/AgendaActions\";import{useSelector,useDispatch}from\"react-redux\";import{makeStyles}from\"@material-ui/core/styles\";export default function AgendaSemanalHeader(){var fechaCalendario=useSelector(function(state){return state.agenda_reducer.fecha_agenda;});var classes=useStyles();var dispatch=useDispatch();var getMonday=function getMonday(){var dia=fechaCalendario;var day=dia.getDay(),diff=dia.getDate()-day+(day==0?-6:1);// adjust when day is sunday\nreturn new Date(dia.setDate(diff));};var _useState=useState(getMonday()),_useState2=_slicedToArray(_useState,2),inicioSemana=_useState2[0],setInicioSemana=_useState2[1];useEffect(function(){setInicioSemana(getMonday());},[fechaCalendario]);var downFecha=function downFecha(){var anterior_lunes=inicioSemana;anterior_lunes.setDate(anterior_lunes.getDate()-7);dispatch(setFechaAgenda(anterior_lunes));};var upFecha=function upFecha(){var siguiente_lunes=inicioSemana;siguiente_lunes.setDate(siguiente_lunes.getDate()+7);dispatch(setFechaAgenda(siguiente_lunes));};var setDateToday=function setDateToday(){dispatch(setFechaAgenda(new Date()));};var fechaString=function fechaString(){var dia_lunes=inicioSemana.getDate();var mo=new Intl.DateTimeFormat(\"es\",{month:\"long\"}).format(inicioSemana);var fecha_sabado=inicioSemana;fecha_sabado.setDate(fecha_sabado.getDate()+5);var mo_sabado=new Intl.DateTimeFormat(\"es\",{month:\"long\"}).format(fecha_sabado);var fecha=fecha_sabado.getDate()<dia_lunes?dia_lunes+\" de \"+mo.toUpperCase()+\" - \"+fecha_sabado.getDate()+\" de \"+mo_sabado.toUpperCase():dia_lunes+\" de \"+mo.toUpperCase()+\" - \"+fecha_sabado.getDate()+\" de \"+mo.toUpperCase();return fecha;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,style:{height:\"5%\"}},/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:12,className:classes.arrowAgenda,onClick:downFecha},/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{color:\"#db3d44\"},icon:faChevronLeft})),/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:2,className:classes.gridButtonHoy},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",onClick:setDateToday},\"Hoy\")),/*#__PURE__*/React.createElement(Grid,{item:true,md:3,xs:5,className:classes.fechaAgenda},fechaString()),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:5,className:classes.gridFilterDoctor},/*#__PURE__*/React.createElement(FilterDoctorAgenda,null)),/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:12,className:classes.arrowAgenda,onClick:upFecha},/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{color:\"#db3d44\"},icon:faChevronRight}))));}var useStyles=makeStyles(function(theme){return{arrowAgenda:{borderBottom:\"1px solid #ccc\",borderTop:\"1px solid #ccc\",padding:\"2%\",textAlign:\"center\",cursor:\"pointer\",\"&:hover\":{backgroundColor:\"#efefef\"}},gridFilterDoctor:{paddingTop:\"1%\",borderTop:\"1px solid #ccc\",borderBottom:\"1px solid #ccc\",paddingRight:10,textAlign:\"center\"},gridButtonHoy:{paddingTop:\"1%\",borderTop:\"1px solid #ccc\",borderBottom:\"1px solid #ccc\",textAlign:\"center\"},fechaAgenda:{paddingTop:\"2%\",borderBottom:\"1px solid #ccc\",borderTop:\"1px solid #ccc\",textAlign:\"center\",color:\"#0000008a\",fontWeight:\"bold\",userSelect:\"none\"}};});","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda Semanal/AgendaSemanalHeader.jsx"],"names":["React","useState","useEffect","Grid","FontAwesomeIcon","Button","faChevronLeft","faChevronRight","FilterDoctorAgenda","setFechaAgenda","useSelector","useDispatch","makeStyles","AgendaSemanalHeader","fechaCalendario","state","agenda_reducer","fecha_agenda","classes","useStyles","dispatch","getMonday","dia","day","getDay","diff","getDate","Date","setDate","inicioSemana","setInicioSemana","downFecha","anterior_lunes","upFecha","siguiente_lunes","setDateToday","fechaString","dia_lunes","mo","Intl","DateTimeFormat","month","format","fecha_sabado","mo_sabado","fecha","toUpperCase","height","arrowAgenda","color","gridButtonHoy","fechaAgenda","gridFilterDoctor","theme","borderBottom","borderTop","padding","textAlign","cursor","backgroundColor","paddingTop","paddingRight","fontWeight","userSelect"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaSemanalHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const getMonday = () => {\n    let dia = fechaCalendario;\n    var day = dia.getDay(),\n      diff = dia.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(dia.setDate(diff));\n  };\n\n  const [inicioSemana, setInicioSemana] = useState(getMonday());\n\n  useEffect(() => {\n    setInicioSemana(getMonday());\n  }, [fechaCalendario]);\n\n  const downFecha = () => {\n    const anterior_lunes = inicioSemana;\n    anterior_lunes.setDate(anterior_lunes.getDate() - 7);\n\n    dispatch(setFechaAgenda(anterior_lunes));\n  };\n  const upFecha = () => {\n    const siguiente_lunes = inicioSemana;\n    siguiente_lunes.setDate(siguiente_lunes.getDate() + 7);\n    dispatch(setFechaAgenda(siguiente_lunes));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const dia_lunes = inicioSemana.getDate();\n\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      inicioSemana\n    );\n\n    const fecha_sabado = inicioSemana;\n    fecha_sabado.setDate(fecha_sabado.getDate() + 5);\n\n    const mo_sabado = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fecha_sabado\n    );\n\n    let fecha =\n      fecha_sabado.getDate() < dia_lunes\n        ? dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo_sabado.toUpperCase()\n        : dia_lunes +\n          \" de \" +\n          mo.toUpperCase() +\n          \" - \" +\n          fecha_sabado.getDate() +\n          \" de \" +\n          mo.toUpperCase();\n\n    return fecha;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={1} xs={2} className={classes.gridButtonHoy}>\n          <Button variant=\"contained\" onClick={setDateToday}>\n            Hoy\n          </Button>\n        </Grid>\n        <Grid item md={3} xs={5} className={classes.fechaAgenda}>\n          {fechaString()}\n        </Grid>\n        <Grid item md={6} xs={5} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}