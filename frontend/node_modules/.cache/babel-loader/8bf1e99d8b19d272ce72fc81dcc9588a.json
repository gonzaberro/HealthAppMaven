{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/ItemsAgenda.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { horarios } from \"./itemsAgendaData\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setHorario, editTurnoComplete } from \"../../../actions/EditTurnoActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector(state => state.agenda_reducer.turnos);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const editTurno = (index, turno_horario) => {\n    const foundIndexHorario = turnos.findIndex(horario => horario.horario === turno_horario);\n    let aux_turno = turnos[foundIndexHorario].turnos[index];\n    let turno = {\n      doctor: aux_turno.doctor,\n      paciente: aux_turno.paciente,\n      servicio: aux_turno.servicio,\n      programar: aux_turno.programar,\n      fecha: aux_turno.fecha,\n      horario: turno_horario,\n      nota: aux_turno.nota,\n      index: index\n    };\n    dispatch(editTurnoComplete(turno));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, horarios.map(horario => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: \"horario_\" + horario,\n      container: true,\n      style: {\n        minHeight: \"5vh\",\n        zIndex: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 2,\n      md: 1,\n      className: classes.gridHorarios,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelHorario,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, horario)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 2,\n      md: 11,\n      onClick: () => dispatch(setHorario(horario)),\n      className: classes.containerTurnosGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, turnos.map(horario_turno => {\n      return horario === horario_turno.horario ? horario_turno.turnos.map((turno, index) => {\n        return /*#__PURE__*/React.createElement(Chip, {\n          clickable: true,\n          key: index,\n          className: classes.chipTurnos,\n          onClick: () => editTurno(index, horario),\n          color: \"primary\",\n          label: \"Paciente: \" + turno.paciente,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        });\n      }) : null;\n    })));\n  }));\n}\nconst useStyles = makeStyles(theme => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\"\n    }\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main\n    }\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\"\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\"\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/ItemsAgenda.jsx"],"names":["React","Grid","horarios","Chip","useSelector","useDispatch","setHorario","editTurnoComplete","makeStyles","ItemsAgendaHeader","turnos","state","agenda_reducer","dispatch","classes","useStyles","editTurno","index","turno_horario","foundIndexHorario","findIndex","horario","aux_turno","turno","doctor","paciente","servicio","programar","fecha","nota","map","minHeight","zIndex","gridHorarios","labelHorario","containerTurnosGrid","horario_turno","chipTurnos","theme","borderTop","borderLeft","cursor","backgroundColor","color","margin","boxShadow","border","palette","primary","main","fontWeight","userSelect","paddingTop","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,UADF,EAEEC,iBAFF,QAGO,mCAHP;AAKA,SAASC,UAAT,QAA2B,0BAA3B;AACA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAMC,MAAM,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,MAAjC,CAA1B;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGC,SAAS,EAAzB;;AAEA,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AAC1C,UAAMC,iBAAiB,GAAGT,MAAM,CAACU,SAAP,CACvBC,OAAD,IAAaA,OAAO,CAACA,OAAR,KAAoBH,aADT,CAA1B;AAIA,QAAII,SAAS,GAAGZ,MAAM,CAACS,iBAAD,CAAN,CAA0BT,MAA1B,CAAiCO,KAAjC,CAAhB;AAEA,QAAIM,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAEF,SAAS,CAACE,MADR;AAEVC,MAAAA,QAAQ,EAAEH,SAAS,CAACG,QAFV;AAGVC,MAAAA,QAAQ,EAAEJ,SAAS,CAACI,QAHV;AAIVC,MAAAA,SAAS,EAAEL,SAAS,CAACK,SAJX;AAKVC,MAAAA,KAAK,EAAEN,SAAS,CAACM,KALP;AAMVP,MAAAA,OAAO,EAAEH,aANC;AAOVW,MAAAA,IAAI,EAAEP,SAAS,CAACO,IAPN;AAQVZ,MAAAA,KAAK,EAAEA;AARG,KAAZ;AAWAJ,IAAAA,QAAQ,CAACN,iBAAiB,CAACgB,KAAD,CAAlB,CAAR;AACD,GAnBD;;AAoBA,sBACE,0CACGrB,QAAQ,CAAC4B,GAAT,CAAcT,OAAD,IAAa;AACzB,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAE,aAAaA,OADpB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,SAAS,EAAElB,OAAO,CAACmB,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAEnB,OAAO,CAACoB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCb,OAAzC,CADF,CALF,eAQE,oBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,EAAE,EAAE,EAJN;AAKE,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAACP,UAAU,CAACe,OAAD,CAAX,CALzB;AAME,MAAA,SAAS,EAAEP,OAAO,CAACqB,mBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGzB,MAAM,CAACoB,GAAP,CAAYM,aAAD,IAAmB;AAC7B,aAAOf,OAAO,KAAKe,aAAa,CAACf,OAA1B,GACHe,aAAa,CAAC1B,MAAd,CAAqBoB,GAArB,CAAyB,CAACP,KAAD,EAAQN,KAAR,KAAkB;AACzC,4BACE,oBAAC,IAAD;AACE,UAAA,SAAS,EAAE,IADb;AAEE,UAAA,GAAG,EAAEA,KAFP;AAGE,UAAA,SAAS,EAAEH,OAAO,CAACuB,UAHrB;AAIE,UAAA,OAAO,EAAE,MAAMrB,SAAS,CAACC,KAAD,EAAQI,OAAR,CAJ1B;AAKE,UAAA,KAAK,EAAC,SALR;AAME,UAAA,KAAK,EAAE,eAAeE,KAAK,CAACE,QAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAXD,CADG,GAaH,IAbJ;AAcD,KAfA,CARH,CARF,CADF;AAoCD,GArCA,CADH,CADF;AA0CD;AACD,MAAMV,SAAS,GAAGP,UAAU,CAAE8B,KAAD,KAAY;AACvCH,EAAAA,mBAAmB,EAAE;AACnBI,IAAAA,SAAS,EAAE,mBADQ;AAEnBC,IAAAA,UAAU,EAAE,mBAFO;AAGnBC,IAAAA,MAAM,EAAE,SAHW;AAInB,eAAW;AACTC,MAAAA,eAAe,EAAE,SADR;AAETC,MAAAA,KAAK,EAAE;AAFE;AAJQ,GADkB;AAUvCN,EAAAA,UAAU,EAAE;AACVO,IAAAA,MAAM,EAAE,CADE;AAEVZ,IAAAA,MAAM,EAAE,CAFE;AAGVa,IAAAA,SAAS,EAAE,yBAHD;AAIV,eAAW;AACTC,MAAAA,MAAM,EAAE,mBADC;AAETJ,MAAAA,eAAe,EAAE,SAFR;AAGTC,MAAAA,KAAK,EAAEL,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC;AAHpB;AAJD,GAV2B;AAoBvCf,EAAAA,YAAY,EAAE;AACZS,IAAAA,KAAK,EAAE,WADK;AAEZO,IAAAA,UAAU,EAAE,MAFA;AAGZC,IAAAA,UAAU,EAAE;AAHA,GApByB;AAyBvClB,EAAAA,YAAY,EAAE;AACZmB,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,SAAS,EAAE;AAFC;AAzByB,CAAZ,CAAD,CAA5B","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { horarios } from \"./itemsAgendaData\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setHorario,\n  editTurnoComplete,\n} from \"../../../actions/EditTurnoActions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function ItemsAgendaHeader() {\n  const turnos = useSelector((state) => state.agenda_reducer.turnos);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const editTurno = (index, turno_horario) => {\n    const foundIndexHorario = turnos.findIndex(\n      (horario) => horario.horario === turno_horario\n    );\n\n    let aux_turno = turnos[foundIndexHorario].turnos[index];\n\n    let turno = {\n      doctor: aux_turno.doctor,\n      paciente: aux_turno.paciente,\n      servicio: aux_turno.servicio,\n      programar: aux_turno.programar,\n      fecha: aux_turno.fecha,\n      horario: turno_horario,\n      nota: aux_turno.nota,\n      index: index,\n    };\n\n    dispatch(editTurnoComplete(turno));\n  };\n  return (\n    <>\n      {horarios.map((horario) => {\n        return (\n          <Grid\n            key={\"horario_\" + horario}\n            container\n            style={{ minHeight: \"5vh\", zIndex: 0 }}\n          >\n            <Grid item xs={6} sm={2} md={1} className={classes.gridHorarios}>\n              <label className={classes.labelHorario}>{horario}</label>\n            </Grid>\n            <Grid\n              item\n              xs={6}\n              sm={2}\n              md={11}\n              onClick={() => dispatch(setHorario(horario))}\n              className={classes.containerTurnosGrid}\n            >\n              {turnos.map((horario_turno) => {\n                return horario === horario_turno.horario\n                  ? horario_turno.turnos.map((turno, index) => {\n                      return (\n                        <Chip\n                          clickable={true}\n                          key={index}\n                          className={classes.chipTurnos}\n                          onClick={() => editTurno(index, horario)}\n                          color=\"primary\"\n                          label={\"Paciente: \" + turno.paciente}\n                        ></Chip>\n                      );\n                    })\n                  : null;\n              })}\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  containerTurnosGrid: {\n    borderTop: \"1px solid #eeeeee\",\n    borderLeft: \"1px solid #eeeeee\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n      color: \"#fff\",\n    },\n  },\n  chipTurnos: {\n    margin: 5,\n    zIndex: 0,\n    boxShadow: \"2px 2px 3px 1px #cdcdcd\",\n    \"&:hover\": {\n      border: \"1px solid #2c41b5\",\n      backgroundColor: \"#eeeeee\",\n      color: theme.palette.primary.main,\n    },\n  },\n  labelHorario: {\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridHorarios: {\n    paddingTop: 15,\n    textAlign: \"center\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}