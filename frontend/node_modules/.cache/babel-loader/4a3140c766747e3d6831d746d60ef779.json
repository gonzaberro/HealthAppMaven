{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/EditAgendaItem.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { horarios } from \"./itemsAgendaData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTurno, borrarTurno } from \"../../../actions/AgendaActions\";\nimport { setDoctor, setHorario, setPaciente, setProgramar, setServicio, setNota } from \"../../../actions/EditTurnoActions\";\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector(state => state.editTurnoReducer); //Para saber si estoy o no logueado en el sistema\n\n  const fechaCalendario = useSelector(state => state.agenda_reducer.fecha_agenda);\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", {\n      year: \"numeric\"\n    }).format(fechaCalendario);\n    const mo = new Intl.DateTimeFormat(\"es\", {\n      month: \"2-digit\"\n    }).format(fechaCalendario);\n    const da = new Intl.DateTimeFormat(\"es\", {\n      day: \"2-digit\"\n    }).format(fechaCalendario);\n    return ye + \"-\" + mo + \"-\" + da;\n  };\n\n  const [fechaTurno, setFechaTurno] = useState(fechaString());\n  useEffect(() => {\n    if (turno_info.fecha !== \"\") setFechaTurno(turno_info.fecha);\n  }, [turno_info]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n\n  const crearTurno = () => {\n    if (turno_info.paciente !== \"\" && turno_info.doctor !== \"\" && turno_info.horario !== \"\") {\n      let turno = {\n        horario: turno_info.horario,\n        turno: {\n          paciente: turno_info.paciente,\n          doctor: turno_info.doctor,\n          servicio: turno_info.servicio,\n          fecha: fechaTurno,\n          programar: turno_info.programar,\n          nota: turno_info.nota\n        }\n      };\n      dispatch(addTurno(turno));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditAgendaHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Doctor\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    onChange: event => dispatch(setDoctor(event.target.value)),\n    label: \"Doctor\",\n    value: turno_info.doctor,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Gines Gonzales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Gines Gonzales\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Rene Favaloro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Rene Favaloro\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Conrad Hawkings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Conrad Hawkings\"))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Paciente\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    onChange: event => dispatch(setPaciente(event.target.value)),\n    label: \"Paciente\",\n    value: turno_info.paciente,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Ignacio Ledesma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Ignacio Ledesma\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Gonzalo Berro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Gonzalo Berro\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Matias Solimo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Matias Solimo\"))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Servicio\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Servicio\",\n    onChange: event => dispatch(setServicio(event.target.value)),\n    value: turno_info.servicio,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"FSINET\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"date\",\n    label: \"Fecha\",\n    type: \"date\",\n    value: fechaTurno,\n    variant: \"outlined\",\n    onChange: event => setFechaTurno(event.target.value),\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Horario\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    value: turno_info.horario,\n    onChange: event => dispatch(setHorario(event.target.value)),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, horarios.map(horario => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: horario,\n      value: horario,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, horario);\n  }))))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Notas\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    rowsMax: 4,\n    className: classes.textArea,\n    value: turno_info.nota,\n    onChange: event => dispatch(setNota(event.target.value)),\n    \"aria-label\": \"maximum height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.checkBoxContainer,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: turno_info.programar === 1 ? true : false,\n      onChange: changeProgramar,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }),\n    label: \"Programar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProgramarAgenda, {\n    programar: turno_info.programar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    fullWidth: true,\n    onClick: () => dispatch(borrarTurno(turno_info.index, turno_info.horario)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Eliminar\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: crearTurno,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: 10\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\"\n  },\n  textField: {\n    width: \"100%\"\n  },\n  spanRepetir: {\n    paddingTop: 20\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\"\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5\n  },\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/EditAgendaItem.jsx"],"names":["React","useState","useEffect","Grid","Select","FormControl","Button","InputLabel","TextareaAutosize","MenuItem","FormControlLabel","Checkbox","makeStyles","TextField","EditAgendaHeader","ProgramarAgenda","horarios","useSelector","useDispatch","addTurno","borrarTurno","setDoctor","setHorario","setPaciente","setProgramar","setServicio","setNota","EditAgendaItem","classes","useStyles","dispatch","turno_info","state","editTurnoReducer","fechaCalendario","agenda_reducer","fecha_agenda","fechaString","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","fechaTurno","setFechaTurno","fecha","changeProgramar","programar","crearTurno","paciente","doctor","horario","turno","servicio","nota","formControl","event","target","value","container","textField","shrink","map","textArea","checkBoxContainer","marginTop","index","theme","margin","marginRight","paddingRight","width","spanRepetir","paddingTop","color","borderTop","maxWidth","minWidth","minHeight","maxHeight","borderColor","borderRadius","gridContainer","border","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditAgendaHeader from \"./EditAgendaHeader\";\nimport ProgramarAgenda from \"./ProgramarAgenda\";\nimport { horarios } from \"./itemsAgendaData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTurno, borrarTurno } from \"../../../actions/AgendaActions\";\nimport {\n  setDoctor,\n  setHorario,\n  setPaciente,\n  setProgramar,\n  setServicio,\n  setNota,\n} from \"../../../actions/EditTurnoActions\";\n\nexport default function EditAgendaItem() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const turno_info = useSelector((state) => state.editTurnoReducer); //Para saber si estoy o no logueado en el sistema\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n    return ye + \"-\" + mo + \"-\" + da;\n  };\n\n  const [fechaTurno, setFechaTurno] = useState(fechaString());\n\n  useEffect(() => {\n    if (turno_info.fecha !== \"\") setFechaTurno(turno_info.fecha);\n  }, [turno_info]);\n\n  const changeProgramar = () => {\n    dispatch(setProgramar(turno_info.programar === 0 ? 1 : 0));\n  };\n  const crearTurno = () => {\n    if (\n      turno_info.paciente !== \"\" &&\n      turno_info.doctor !== \"\" &&\n      turno_info.horario !== \"\"\n    ) {\n      let turno = {\n        horario: turno_info.horario,\n        turno: {\n          paciente: turno_info.paciente,\n          doctor: turno_info.doctor,\n          servicio: turno_info.servicio,\n          fecha: fechaTurno,\n          programar: turno_info.programar,\n          nota: turno_info.nota,\n        },\n      };\n      dispatch(addTurno(turno));\n    }\n  };\n\n  return (\n    <>\n      <EditAgendaHeader />\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Doctor</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          onChange={(event) => dispatch(setDoctor(event.target.value))}\n          label=\"Doctor\"\n          value={turno_info.doctor}\n          fullWidth\n        >\n          <MenuItem value={\"Gines Gonzales\"}>Gines Gonzales</MenuItem>\n          <MenuItem value={\"Rene Favaloro\"}>Rene Favaloro</MenuItem>\n          <MenuItem value={\"Conrad Hawkings\"}>Conrad Hawkings</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Paciente</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          onChange={(event) => dispatch(setPaciente(event.target.value))}\n          label=\"Paciente\"\n          value={turno_info.paciente}\n          fullWidth\n        >\n          <MenuItem value={\"Ignacio Ledesma\"}>Ignacio Ledesma</MenuItem>\n          <MenuItem value={\"Gonzalo Berro\"}>Gonzalo Berro</MenuItem>\n          <MenuItem value={\"Matias Solimo\"}>Matias Solimo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Servicio</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          label=\"Servicio\"\n          onChange={(event) => dispatch(setServicio(event.target.value))}\n          value={turno_info.servicio}\n          fullWidth\n        >\n          <MenuItem value={30}>FSINET</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container>\n        <Grid item md={6} xs={12}>\n          <form className={classes.container} noValidate>\n            <TextField\n              id=\"date\"\n              label=\"Fecha\"\n              type=\"date\"\n              value={fechaTurno}\n              variant=\"outlined\"\n              onChange={(event) => setFechaTurno(event.target.value)}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Horario\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              value={turno_info.horario}\n              onChange={(event) => dispatch(setHorario(event.target.value))}\n              fullWidth\n            >\n              {horarios.map((horario) => {\n                return (\n                  <MenuItem key={horario} value={horario}>\n                    {horario}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <form className={classes.container} noValidate>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Notas</InputLabel>\n        <TextareaAutosize\n          rowsMax={4}\n          className={classes.textArea}\n          value={turno_info.nota}\n          onChange={(event) => dispatch(setNota(event.target.value))}\n          aria-label=\"maximum height\"\n        />\n      </form>\n      <FormControlLabel\n        className={classes.checkBoxContainer}\n        control={\n          <Checkbox\n            checked={turno_info.programar === 1 ? true : false}\n            onChange={changeProgramar}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Programar\"\n      />\n      <ProgramarAgenda programar={turno_info.programar} />\n      <Grid container style={{ marginTop: 20 }}>\n        <Grid item md={4} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            onClick={() =>\n              dispatch(borrarTurno(turno_info.index, turno_info.horario))\n            }\n          >\n            Eliminar\n          </Button>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={crearTurno}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  checkBoxContainer: {\n    margin: 10,\n    color: \"#0000008a\",\n    borderTop: \"1px solid #ccc\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    minHeight: 100,\n    maxHeight: 100,\n    borderColor: \"#c4c4c4\",\n    borderRadius: 5,\n    marginTop: 5,\n  },\n\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n"]},"metadata":{},"sourceType":"module"}