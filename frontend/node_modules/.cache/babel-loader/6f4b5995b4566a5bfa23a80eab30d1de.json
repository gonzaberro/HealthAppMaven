{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Form.jsx\";\nimport React, { useReducer, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormSelect from \"components/Logged/FormSelect\";\nimport { setDefaultFormInput } from \"Utils/functions\";\nexport default function Form({\n  inputs,\n  options\n}) {\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {});\n  useEffect(() => {\n    setFormInput(setDefaultFormInput());\n  }, []);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormInput({\n      [name]: value\n    });\n  };\n\n  const renderInputs = () => {\n    return inputs.map((input, index) => {\n      let component;\n      input.select ? component = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: index,\n        xs: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormSelect, {\n        name: \"obraSocial\",\n        label: \"Obra Social\",\n        options: options,\n        value: input[Object.keys(formInput)[index]] || \"\",\n        handleChange: handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      })) : component = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: index,\n        xs: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: input.name,\n        label: input.label,\n        name: input.name,\n        onChange: handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }));\n      return component;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, inputs && renderInputs());\n}","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Form.jsx"],"names":["React","useReducer","useEffect","Grid","TextField","FormSelect","setDefaultFormInput","Form","inputs","options","formInput","setFormInput","state","newState","handleInputChange","e","name","value","target","renderInputs","map","input","index","component","select","Object","keys","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAmC;AAChD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,UAAU,CAC1C,CAACW,KAAD,EAAQC,QAAR,MAAsB,EAAE,GAAGD,KAAL;AAAY,OAAGC;AAAf,GAAtB,CAD0C,EAE1C,EAF0C,CAA5C;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACL,mBAAmB,EAApB,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,YAAY,CAAC;AAAE,OAACK,IAAD,GAAQC;AAAV,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzB,WAAOX,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,UAAIC,SAAJ;AACAF,MAAAA,KAAK,CAACG,MAAN,GACKD,SAAS,gBACR,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,GAAG,EAAED,KAAhB;AAAuB,QAAA,EAAE,EAAE,EAA3B;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,OAAO,EAAEb,OAHX;AAIE,QAAA,KAAK,EAAEY,KAAK,CAACI,MAAM,CAACC,IAAP,CAAYhB,SAAZ,EAAuBY,KAAvB,CAAD,CAAL,IAAwC,EAJjD;AAKE,QAAA,YAAY,EAAER,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFN,GAYKS,SAAS,gBACR,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,GAAG,EAAED,KAAhB;AAAuB,QAAA,EAAE,EAAE,EAA3B;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,EAAE,EAAED,KAAK,CAACL,IALZ;AAME,QAAA,KAAK,EAAEK,KAAK,CAACM,KANf;AAOE,QAAA,IAAI,EAAEN,KAAK,CAACL,IAPd;AAQE,QAAA,QAAQ,EAAEF,iBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbN;AA2BA,aAAOS,SAAP;AACD,KA9BM,CAAP;AA+BD,GAhCD;;AAkCA,sBAAO,0CAAGf,MAAM,IAAIW,YAAY,EAAzB,CAAP;AACD","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport FormSelect from \"components/Logged/FormSelect\";\nimport { setDefaultFormInput } from \"Utils/functions\";\n\nexport default function Form({ inputs, options }) {\n  const [formInput, setFormInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  );\n\n  useEffect(() => {\n    setFormInput(setDefaultFormInput());\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormInput({ [name]: value });\n  };\n\n  const renderInputs = () => {\n    return inputs.map((input, index) => {\n      let component;\n      input.select\n        ? (component = (\n            <Grid item key={index} xs={12} md={6}>\n              <FormSelect\n                name=\"obraSocial\"\n                label=\"Obra Social\"\n                options={options}\n                value={input[Object.keys(formInput)[index]] || \"\"}\n                handleChange={handleInputChange}\n              />\n            </Grid>\n          ))\n        : (component = (\n            <Grid item key={index} xs={12} md={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id={input.name}\n                label={input.label}\n                name={input.name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n          ));\n\n      return component;\n    });\n  };\n\n  return <>{inputs && renderInputs()}</>;\n}\n"]},"metadata":{},"sourceType":"module"}