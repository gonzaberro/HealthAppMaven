{"ast":null,"code":"var getAllInputNames=function getAllInputNames(){var form=document.getElementById(\"form\");if(form==null)return[];var arrayOfInputNames=[];var inputs=form.getElementsByTagName(\"input\");for(var i=0;i<inputs.length;i++){arrayOfInputNames.push(inputs[i].name);}return arrayOfInputNames;};export var setDefaultFormInput=function setDefaultFormInput(){var names=getAllInputNames();var state={};if(names!=null&&names.length>0){state=names.reduce(function(acc,curr){acc[curr]=\"\";return acc;},{});}return state;};","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/Utils/functions.js"],"names":["getAllInputNames","form","document","getElementById","arrayOfInputNames","inputs","getElementsByTagName","i","length","push","name","setDefaultFormInput","names","state","reduce","acc","curr"],"mappings":"AAAA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb,CACA,GAAIF,IAAI,EAAI,IAAZ,CAAkB,MAAO,EAAP,CAElB,GAAIG,CAAAA,iBAAiB,CAAG,EAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGJ,IAAI,CAACK,oBAAL,CAA0B,OAA1B,CAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,MAAM,CAACG,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtCH,iBAAiB,CAACK,IAAlB,CAAuBJ,MAAM,CAACE,CAAD,CAAN,CAAUG,IAAjC,EACD,CACD,MAAON,CAAAA,iBAAP,CACD,CAVD,CAYA,MAAO,IAAMO,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACvC,GAAMC,CAAAA,KAAK,CAAGZ,gBAAgB,EAA9B,CAEA,GAAIa,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAID,KAAK,EAAI,IAAT,EAAiBA,KAAK,CAACJ,MAAN,CAAe,CAApC,CAAuC,CACrCK,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAa,SAACC,GAAD,CAAMC,IAAN,CAAe,CAClCD,GAAG,CAACC,IAAD,CAAH,CAAY,EAAZ,CACA,MAAOD,CAAAA,GAAP,CACD,CAHO,CAGL,EAHK,CAAR,CAID,CACD,MAAOF,CAAAA,KAAP,CACD,CAXM","sourcesContent":["const getAllInputNames = () => {\n  const form = document.getElementById(\"form\");\n  if (form == null) return [];\n\n  let arrayOfInputNames = [];\n  const inputs = form.getElementsByTagName(\"input\");\n  for (let i = 0; i < inputs.length; i++) {\n    arrayOfInputNames.push(inputs[i].name);\n  }\n  return arrayOfInputNames;\n};\n\nexport const setDefaultFormInput = () => {\n  const names = getAllInputNames();\n\n  let state = {};\n  if (names != null && names.length > 0) {\n    state = names.reduce((acc, curr) => {\n      acc[curr] = \"\";\n      return acc;\n    }, {});\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}