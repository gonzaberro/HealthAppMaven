{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/ItemsAgendaHeader.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(state => state.agenda_reducer.fecha_agenda);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000)));\n  };\n\n  const upFecha = () => {\n    dispatch(setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000)));\n  };\n\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", {\n      year: \"numeric\"\n    }).format(fechaCalendario);\n    const mo = new Intl.DateTimeFormat(\"es\", {\n      month: \"short\"\n    }).format(fechaCalendario);\n    const da = new Intl.DateTimeFormat(\"es\", {\n      day: \"2-digit\"\n    }).format(fechaCalendario);\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n    var n = weekday[fechaCalendario.getDay()];\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      minheight: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    md: 1,\n    xs: 12,\n    lg: 1,\n    className: classes.arrowAgenda,\n    onClick: downFecha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      color: \"#db3d44\"\n    },\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    sm: 8,\n    md: 10,\n    xs: 12,\n    lg: 10,\n    className: classes.gridContainerButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 2,\n    xs: 3,\n    sm: 2,\n    lg: 2,\n    className: classes.gridButtonHoy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: setDateToday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Hoy\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 10,\n    xs: 9,\n    sm: 10,\n    lg: 5,\n    className: classes.fechaAgenda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, fechaString()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    sm: 12,\n    lg: 5,\n    className: classes.gridFilterDoctor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterDoctorAgenda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    md: 1,\n    lg: 1,\n    xs: 12,\n    className: classes.arrowAgenda,\n    onClick: upFecha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      color: \"#db3d44\"\n    },\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))));\n}\nconst useStyles = makeStyles(theme => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\"\n    }\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n    textAlign: \"center\"\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n    textAlign: \"center\"\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n    textAlign: \"center\",\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\"\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\"\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/ItemsAgendaHeader.jsx"],"names":["React","Grid","FontAwesomeIcon","Button","faChevronLeft","faChevronRight","FilterDoctorAgenda","setFechaAgenda","useSelector","useDispatch","makeStyles","ItemsAgendaHeader","fechaCalendario","state","agenda_reducer","fecha_agenda","classes","useStyles","dispatch","downFecha","Date","valueOf","upFecha","setDateToday","fechaString","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","weekday","Array","n","getDay","minheight","arrowAgenda","color","gridContainerButtons","gridButtonHoy","fechaAgenda","gridFilterDoctor","theme","borderBottom","borderTop","padding","textAlign","cursor","backgroundColor","fontWeight","userSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACEC,aADF,EAEEC,cAFF,QAGO,mCAHP;AAIA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAMC,eAAe,GAAGJ,WAAW,CAChCK,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,YADC,CAAnC;AAGA,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CACNX,cAAc,CAAC,IAAIa,IAAJ,CAAS,IAAIA,IAAJ,CAASR,eAAT,EAA0BS,OAA1B,KAAsC,QAA/C,CAAD,CADR,CAAR;AAGD,GAJD;;AAKA,QAAMC,OAAO,GAAG,MAAM;AACpBJ,IAAAA,QAAQ,CACNX,cAAc,CAAC,IAAIa,IAAJ,CAAS,IAAIA,IAAJ,CAASR,eAAT,EAA0BS,OAA1B,KAAsC,QAA/C,CAAD,CADR,CAAR;AAGD,GAJD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzBL,IAAAA,QAAQ,CAACX,cAAc,CAAC,IAAIa,IAAJ,EAAD,CAAf,CAAR;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxB,UAAMC,EAAE,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA9B,EAAmDC,MAAnD,CACTjB,eADS,CAAX;AAGA,UAAMkB,EAAE,GAAG,IAAIJ,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAA9B,EAAkDF,MAAlD,CACTjB,eADS,CAAX;AAGA,UAAMoB,EAAE,GAAG,IAAIN,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEM,MAAAA,GAAG,EAAE;AAAP,KAA9B,EAAkDJ,MAAlD,CACTjB,eADS,CAAX;AAIA,QAAIsB,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAd;AACAD,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,SAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,OAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,WAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,SAAb;AACAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AAEA,QAAIE,CAAC,GAAGF,OAAO,CAACtB,eAAe,CAACyB,MAAhB,EAAD,CAAf;AAEA,WAAOD,CAAC,GAAG,GAAJ,GAAUJ,EAAV,GAAe,MAAf,GAAwBF,EAAxB,GAA6B,OAA7B,GAAuCL,EAA9C;AACD,GAvBD;;AAyBA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,SAAS,EAAEtB,OAAO,CAACuB,WANrB;AAOE,IAAA,OAAO,EAAEpB,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAxB;AAA8C,IAAA,IAAI,EAAEpC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,eAYE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,SAAS,EAAEY,OAAO,CAACyB,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,aANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEnB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CADF,eAaE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,SAAS,EAAEP,OAAO,CAAC2B,WANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGnB,WAAW,EARd,CAbF,eAuBE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,SAAS,EAAER,OAAO,CAAC4B,gBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAvBF,CAPF,CAZF,eAsDE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,EAAE,EAAE,EALN;AAME,IAAA,SAAS,EAAE5B,OAAO,CAACuB,WANrB;AAOE,IAAA,OAAO,EAAEjB,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAxB;AAA8C,IAAA,IAAI,EAAEnC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAtDF,CADF,CADF;AAsED;AACD,MAAMY,SAAS,GAAGP,UAAU,CAAEmC,KAAD,KAAY;AACvCN,EAAAA,WAAW,EAAE;AACXO,IAAAA,YAAY,EAAE,gBADH;AAEXC,IAAAA,SAAS,EAAE,gBAFA;AAGXC,IAAAA,OAAO,EAAE,IAHE;AAIXC,IAAAA,SAAS,EAAE,QAJA;AAKXC,IAAAA,MAAM,EAAE,SALG;AAMX,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR;AANA,GAD0B;AAWvCP,EAAAA,gBAAgB,EAAE;AAChBI,IAAAA,OAAO,EAAE,IADO;AAGhBC,IAAAA,SAAS,EAAE;AAHK,GAXqB;AAgBvCP,EAAAA,aAAa,EAAE;AACbM,IAAAA,OAAO,EAAE,IADI;AAGbC,IAAAA,SAAS,EAAE;AAHE,GAhBwB;AAqBvCN,EAAAA,WAAW,EAAE;AACXK,IAAAA,OAAO,EAAE,IADE;AAGXC,IAAAA,SAAS,EAAE,QAHA;AAKXT,IAAAA,KAAK,EAAE,WALI;AAMXY,IAAAA,UAAU,EAAE,MAND;AAOXC,IAAAA,UAAU,EAAE;AAPD,GArB0B;AA8BvCZ,EAAAA,oBAAoB,EAAE;AACpBM,IAAAA,SAAS,EAAE,gBADS;AAEpBD,IAAAA,YAAY,EAAE;AAFM;AA9BiB,CAAZ,CAAD,CAA5B","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"./FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function ItemsAgendaHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const downFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() - 86400000))\n    );\n  };\n  const upFecha = () => {\n    dispatch(\n      setFechaAgenda(new Date(new Date(fechaCalendario).valueOf() + 86400000))\n    );\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"short\" }).format(\n      fechaCalendario\n    );\n    const da = new Intl.DateTimeFormat(\"es\", { day: \"2-digit\" }).format(\n      fechaCalendario\n    );\n\n    var weekday = new Array(7);\n    weekday[0] = \"Domingo\";\n    weekday[1] = \"Lunes\";\n    weekday[2] = \"Martes\";\n    weekday[3] = \"Miércoles\";\n    weekday[4] = \"Jueves\";\n    weekday[5] = \"Viernes\";\n    weekday[6] = \"Sábado\";\n\n    var n = weekday[fechaCalendario.getDay()];\n\n    return n + \" \" + da + \" de \" + mo + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ minheight: \"5%\" }}>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          xs={12}\n          lg={1}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid\n          sm={8}\n          md={10}\n          xs={12}\n          lg={10}\n          className={classes.gridContainerButtons}\n        >\n          <Grid container>\n            <Grid\n              item\n              md={2}\n              xs={3}\n              sm={2}\n              lg={2}\n              className={classes.gridButtonHoy}\n            >\n              <Button variant=\"contained\" onClick={setDateToday}>\n                Hoy\n              </Button>\n            </Grid>\n            <Grid\n              item\n              md={10}\n              xs={9}\n              sm={10}\n              lg={5}\n              className={classes.fechaAgenda}\n            >\n              {fechaString()}\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n              sm={12}\n              lg={5}\n              className={classes.gridFilterDoctor}\n            >\n              <FilterDoctorAgenda />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          sm={2}\n          md={1}\n          lg={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    padding: \"1%\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    padding: \"2%\",\n\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n  gridContainerButtons: {\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}