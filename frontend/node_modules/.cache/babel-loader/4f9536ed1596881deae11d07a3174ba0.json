{"ast":null,"code":"import React from\"react\";import Grid from\"@material-ui/core/Grid\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import Button from\"@material-ui/core/Button\";import{faChevronLeft,faChevronRight}from\"@fortawesome/free-solid-svg-icons\";import FilterDoctorAgenda from\"../Agenda/FilterDoctorAgenda\";import{setFechaAgenda}from\"../../../actions/AgendaActions\";import{useSelector,useDispatch}from\"react-redux\";import{makeStyles}from\"@material-ui/core/styles\";export default function AgendaMensualHeader(){var fechaCalendario=useSelector(function(state){return state.agenda_reducer.fecha_agenda;});var classes=useStyles();var dispatch=useDispatch();var crearFechaPrimerDia=function crearFechaPrimerDia(){//Me paro siempre en el dia 1 del mes\nvar ye=new Intl.DateTimeFormat(\"es\",{year:\"numeric\"}).format(fechaCalendario);//Anio en formato YYYY de la fecha que seleccione\nvar mo=new Intl.DateTimeFormat(\"es\",{month:\"2-digit\"}).format(fechaCalendario);//MES en formato MM de la fecha que seleccione\nreturn new Date(ye,mo-1,1);};var downFecha=function downFecha(){var date=crearFechaPrimerDia();date.setMonth(date.getMonth()-1);dispatch(setFechaAgenda(date));};var upFecha=function upFecha(){var date=crearFechaPrimerDia();date.setMonth(date.getMonth()+1);dispatch(setFechaAgenda(date));};var setDateToday=function setDateToday(){dispatch(setFechaAgenda(new Date()));};var fechaString=function fechaString(){var ye=new Intl.DateTimeFormat(\"es\",{year:\"numeric\"}).format(fechaCalendario);var mo=new Intl.DateTimeFormat(\"es\",{month:\"long\"}).format(fechaCalendario);return mo.toUpperCase()+\" del \"+ye;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,style:{height:\"5%\"}},/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:12,className:classes.arrowAgenda,onClick:downFecha},/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{color:\"#db3d44\"},icon:faChevronLeft})),/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:2,className:classes.gridButtonHoy},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",onClick:setDateToday},\"Hoy\")),/*#__PURE__*/React.createElement(Grid,{item:true,md:3,xs:5,className:classes.fechaAgenda},fechaString()),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:5,className:classes.gridFilterDoctor},/*#__PURE__*/React.createElement(FilterDoctorAgenda,null)),/*#__PURE__*/React.createElement(Grid,{item:true,md:1,xs:12,className:classes.arrowAgenda,onClick:upFecha},/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{color:\"#db3d44\"},icon:faChevronRight}))));}var useStyles=makeStyles(function(theme){return{arrowAgenda:{borderBottom:\"1px solid #ccc\",borderTop:\"1px solid #ccc\",padding:\"2%\",textAlign:\"center\",cursor:\"pointer\",\"&:hover\":{backgroundColor:\"#efefef\"}},gridFilterDoctor:{paddingTop:\"1%\",borderTop:\"1px solid #ccc\",borderBottom:\"1px solid #ccc\",paddingRight:10,textAlign:\"center\"},gridButtonHoy:{paddingTop:\"1%\",borderTop:\"1px solid #ccc\",borderBottom:\"1px solid #ccc\",textAlign:\"center\"},fechaAgenda:{paddingTop:\"2%\",borderBottom:\"1px solid #ccc\",borderTop:\"1px solid #ccc\",textAlign:\"center\",color:\"#0000008a\",fontWeight:\"bold\",userSelect:\"none\"}};});","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda Mensual/AgendaMensualHeader.jsx"],"names":["React","Grid","FontAwesomeIcon","Button","faChevronLeft","faChevronRight","FilterDoctorAgenda","setFechaAgenda","useSelector","useDispatch","makeStyles","AgendaMensualHeader","fechaCalendario","state","agenda_reducer","fecha_agenda","classes","useStyles","dispatch","crearFechaPrimerDia","ye","Intl","DateTimeFormat","year","format","mo","month","Date","downFecha","date","setMonth","getMonth","upFecha","setDateToday","fechaString","toUpperCase","height","arrowAgenda","color","gridButtonHoy","fechaAgenda","gridFilterDoctor","theme","borderBottom","borderTop","padding","textAlign","cursor","backgroundColor","paddingTop","paddingRight","fontWeight","userSelect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FilterDoctorAgenda from \"../Agenda/FilterDoctorAgenda\";\nimport { setFechaAgenda } from \"../../../actions/AgendaActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function AgendaMensualHeader() {\n  const fechaCalendario = useSelector(\n    (state) => state.agenda_reducer.fecha_agenda\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const crearFechaPrimerDia = () => {\n    //Me paro siempre en el dia 1 del mes\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    ); //Anio en formato YYYY de la fecha que seleccione\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"2-digit\" }).format(\n      fechaCalendario\n    ); //MES en formato MM de la fecha que seleccione\n\n    return new Date(ye, mo - 1, 1);\n  };\n\n  const downFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() - 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const upFecha = () => {\n    let date = crearFechaPrimerDia();\n    date.setMonth(date.getMonth() + 1);\n    dispatch(setFechaAgenda(date));\n  };\n  const setDateToday = () => {\n    dispatch(setFechaAgenda(new Date()));\n  };\n\n  const fechaString = () => {\n    const ye = new Intl.DateTimeFormat(\"es\", { year: \"numeric\" }).format(\n      fechaCalendario\n    );\n    const mo = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n      fechaCalendario\n    );\n\n    return mo.toUpperCase() + \" del \" + ye;\n  };\n\n  return (\n    <>\n      <Grid container style={{ height: \"5%\" }}>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={downFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronLeft} />\n        </Grid>\n        <Grid item md={1} xs={2} className={classes.gridButtonHoy}>\n          <Button variant=\"contained\" onClick={setDateToday}>\n            Hoy\n          </Button>\n        </Grid>\n        <Grid item md={3} xs={5} className={classes.fechaAgenda}>\n          {fechaString()}\n        </Grid>\n        <Grid item md={6} xs={5} className={classes.gridFilterDoctor}>\n          <FilterDoctorAgenda />\n        </Grid>\n        <Grid\n          item\n          md={1}\n          xs={12}\n          className={classes.arrowAgenda}\n          onClick={upFecha}\n        >\n          <FontAwesomeIcon style={{ color: \"#db3d44\" }} icon={faChevronRight} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  arrowAgenda: {\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    padding: \"2%\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#efefef\",\n    },\n  },\n  gridFilterDoctor: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n    paddingRight: 10,\n    textAlign: \"center\",\n  },\n  gridButtonHoy: {\n    paddingTop: \"1%\",\n    borderTop: \"1px solid #ccc\",\n    borderBottom: \"1px solid #ccc\",\n\n    textAlign: \"center\",\n  },\n  fechaAgenda: {\n    paddingTop: \"2%\",\n    borderBottom: \"1px solid #ccc\",\n    borderTop: \"1px solid #ccc\",\n    textAlign: \"center\",\n\n    color: \"#0000008a\",\n    fontWeight: \"bold\",\n    userSelect: \"none\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}