{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/ConfiguracionHorario/ConfiguracionHorarioForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setEspecialidad, getListaEspecialidad } from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nexport default function ConfiguracionHorarioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [cdConfiguracion, setCdConfiguracion] = useState(0);\n  const [horaDesde, setHoraDesde] = useState();\n  const [horaHasta, setHoraHasta] = useState();\n  const horario = useSelector(state => state.horario.horario);\n\n  const guardarHorario = () => {\n    if (intervalo !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cd_configuracion: cdConfiguracion,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta\n        })\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardÃ³ el Horario\", {\n            variant: \"success\"\n          });\n          dispatch(getListaEspecialidad());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Horario\", {\n            variant: \"error\"\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el intervalo en blanco\", {\n        variant: \"warning\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdConfiguracion(horario.cd_configuracion);\n    setIntervalo(horario.intervalo);\n    setHoraDesde(horario.horaDesde);\n    setHoraHasta(horario.horaHasta);\n  }, [horario]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 10,\n    xs: 8,\n    md: 8,\n    sm: 8,\n    className: classes.headerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Editar Horario\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 2,\n    xs: 4,\n    md: 4,\n    sm: 4,\n    className: classes.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    label: \"Especialidad\",\n    fullWidth: true,\n    value: nombreEspecialidad,\n    onChange: event => setNombreEspecialidad(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Hora Desde\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: horaDesde,\n    onChange: event => setHoraDesde(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, listaObrasSociales && listaObrasSociales.map(obraSocial => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: obraSocial.cd_os,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, obraSocial.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Hora Hasta\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: horaHasta,\n    onChange: event => setHoraHasta(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, listaObrasSociales && listaObrasSociales.map(obraSocial => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: obraSocial.cd_os,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, obraSocial.nombre);\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: guardarEspecialidad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20\n  },\n  buttonForm: {\n    paddingTop: 10\n  },\n  gridForm: {\n    padding: 10\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/ConfiguracionHorario/ConfiguracionHorarioForm.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","TextField","Button","FormControl","InputLabel","Select","MenuItem","useSelector","useDispatch","setEspecialidad","getListaEspecialidad","useSnackbar","url_servidor","ConfiguracionHorarioForm","classes","useStyles","dispatch","enqueueSnackbar","intervalo","setIntervalo","cdConfiguracion","setCdConfiguracion","horaDesde","setHoraDesde","horaHasta","setHoraHasta","horario","state","guardarHorario","fetch","method","headers","body","JSON","stringify","cd_configuracion","then","response","status","variant","headerForm","buttonForm","gridForm","nombreEspecialidad","event","setNombreEspecialidad","target","value","formControl","listaObrasSociales","map","obraSocial","cd_os","nombre","guardarEspecialidad","theme","textAlign","paddingTop","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEspecialidad,\n  getListaEspecialidad,\n} from \"actions/EspecialidadActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ConfiguracionHorarioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [intervalo, setIntervalo] = useState(\"\");\n  const [cdConfiguracion, setCdConfiguracion] = useState(0);\n  const [horaDesde, setHoraDesde] = useState();\n  const [horaHasta, setHoraHasta] = useState();\n  const horario = useSelector((state) => state.horario.horario);\n\n  const guardarHorario = () => {\n    if (intervalo !== \"\") {\n      fetch(url_servidor + \"especialidad\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_configuracion: cdConfiguracion,\n          intervalo: intervalo,\n          horaDesde: horaDesde,\n          horaHasta: horaHasta,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardÃ³ el Horario\", {\n            variant: \"success\",\n          });\n          dispatch(getListaEspecialidad());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Horario\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el intervalo en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCdConfiguracion(horario.cd_configuracion);\n    setIntervalo(horario.intervalo);\n    setHoraDesde(horario.horaDesde);\n    setHoraHasta(horario.horaHasta);\n  }, [horario]);\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={10} xs={8} md={8} sm={8} className={classes.headerForm}>\n          Editar Horario\n        </Grid>\n        <Grid\n          item\n          lg={2}\n          xs={4}\n          md={4}\n          sm={4}\n          className={classes.buttonForm}\n        ></Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Especialidad\"}\n            fullWidth\n            value={nombreEspecialidad}\n            onChange={(event) => setNombreEspecialidad(event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Grid container>\n            <Grid item xs={12} sm={6} md={6} lg={6}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Hora Desde\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"InstituciÃ³n\"\n                  fullWidth\n                  value={horaDesde}\n                  onChange={(event) => setHoraDesde(event.target.value)}\n                >\n                  {listaObrasSociales &&\n                    listaObrasSociales.map((obraSocial) => {\n                      return (\n                        <MenuItem value={obraSocial.cd_os}>\n                          {obraSocial.nombre}\n                        </MenuItem>\n                      );\n                    })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6} md={6} lg={6}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Hora Hasta\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"InstituciÃ³n\"\n                  fullWidth\n                  value={horaHasta}\n                  onChange={(event) => setHoraHasta(event.target.value)}\n                >\n                  {listaObrasSociales &&\n                    listaObrasSociales.map((obraSocial) => {\n                      return (\n                        <MenuItem value={obraSocial.cd_os}>\n                          {obraSocial.nombre}\n                        </MenuItem>\n                      );\n                    })}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={guardarEspecialidad}\n          >\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}