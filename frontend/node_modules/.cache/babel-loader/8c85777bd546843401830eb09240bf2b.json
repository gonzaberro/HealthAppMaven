{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { setTipoServicio } from \"actions/TipoServicioActions\";\nimport { setCostoServicio, getListaCostoServicios } from \"actions/CostoServicioActions\";\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(state => state.costoServicio.costoServicio);\n  const listaServicios = useSelector(state => state.servicio.listaServicios);\n  const listaPlanes = useSelector(state => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(state => state.tipoServicio.listaTipoServicios);\n\n  const guardarPlan = () => {\n    if (costo !== 0 && cdPlan !== 0 && cdServicio !== 0 && cdTipoServicio !== 0) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: {\n            cdPlan: cdPlan,\n            cdServicio: cdServicio,\n            tipoServicio: {\n              cdTipoServicio: cdTipoServicio,\n              nombre: \"\"\n            }\n          },\n          servicio: {\n            cd_servicio: cdServicio,\n            nombre: \"\"\n          },\n          plan: {\n            cd_plan: cdPlan,\n            nombre: \"\"\n          },\n          costo: costo\n        })\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\"\n          });\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\"\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.plan) setCdPlan(costoServicio.plan.cd_plan);\n    if (costoServicio.id) setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n    if (costoServicio.servicio) setCdServicio(costoServicio.servicio.cd_servicio);\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n    dispatch(setCostoServicio({}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 10,\n    xs: 8,\n    md: 8,\n    sm: 8,\n    className: classes.headerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Establecer Costo del Servicio\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 2,\n    xs: 4,\n    md: 4,\n    sm: 4,\n    className: classes.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: nuevoCostoServicio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Nuevo\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Plan\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: cdPlan,\n    onChange: event => setCdPlan(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, listaPlanes && listaPlanes.map(plan => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: plan.cd_plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, plan.obraSocial.nombre, \" - \", plan.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Servicio\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Servicio\",\n    fullWidth: true,\n    value: cdServicio,\n    onChange: event => setCdServicio(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, listaServicios && listaServicios.map(servicio => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: servicio.cd_servicio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, servicio.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Tipo Servicio\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: cdTipoServicio,\n    onChange: event => setCdTipoServicio(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, listaTipoServicio && listaTipoServicio.map(tipoServicio => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: tipoServicio.cd_tipo_servicio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, tipoServicio.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"number\",\n    margin: \"normal\",\n    label: \"Costo $\",\n    fullWidth: true,\n    value: costo,\n    onChange: event => setCosto(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: guardarPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20\n  },\n  buttonForm: {\n    paddingTop: 10\n  },\n  gridForm: {\n    padding: 10\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","FormControl","InputLabel","Select","MenuItem","TextField","Button","useSelector","useDispatch","setPlan","getListaPlanes","useSnackbar","url_servidor","setTipoServicio","setCostoServicio","getListaCostoServicios","CostoServicioForm","classes","useStyles","dispatch","enqueueSnackbar","costo","setCosto","cdPlan","setCdPlan","cdTipoServicio","setCdTipoServicio","cdServicio","setCdServicio","costoServicio","state","listaServicios","servicio","listaPlanes","plan","listaTipoServicio","tipoServicio","listaTipoServicios","guardarPlan","fetch","method","headers","body","JSON","stringify","id","nombre","cd_servicio","cd_plan","then","response","status","variant","nuevoCostoServicio","headerForm","buttonForm","gridForm","marginTop","formControl","event","target","value","map","obraSocial","cd_tipo_servicio","theme","textAlign","paddingTop","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { setTipoServicio } from \"actions/TipoServicioActions\";\nimport {\n  setCostoServicio,\n  getListaCostoServicios,\n} from \"actions/CostoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, setCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (\n      costo !== 0 &&\n      cdPlan !== 0 &&\n      cdServicio !== 0 &&\n      cdTipoServicio !== 0\n    ) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: {\n            cdPlan: cdPlan,\n            cdServicio: cdServicio,\n            tipoServicio: { cdTipoServicio: cdTipoServicio, nombre: \"\" },\n          },\n          servicio: { cd_servicio: cdServicio, nombre: \"\" },\n          plan: { cd_plan: cdPlan, nombre: \"\" },\n          costo: costo,\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se asigno el costo al servicio\", {\n            variant: \"success\",\n          });\n          dispatch(getListaCostoServicios());\n        } else {\n          enqueueSnackbar(\"Error al asignar el costo al servicio\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar campos en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setCosto(costoServicio.costo);\n    if (costoServicio.plan) setCdPlan(costoServicio.plan.cd_plan);\n    if (costoServicio.id)\n      setCdTipoServicio(costoServicio.id.tipoServicio.cdTipoServicio);\n    if (costoServicio.servicio)\n      setCdServicio(costoServicio.servicio.cd_servicio);\n  }, [costoServicio]);\n\n  const nuevoCostoServicio = () => {\n    setCosto(0);\n    setCdPlan(0);\n    setCdTipoServicio(0);\n    setCdServicio(0);\n\n    dispatch(setCostoServicio({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={10} xs={8} md={8} sm={8} className={classes.headerForm}>\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={4} md={4} sm={4} className={classes.buttonForm}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            onClick={nuevoCostoServicio}\n          >\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setCdPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem value={servicio.cd_servicio}>\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Institución\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem value={tipoServicio.cd_tipo_servicio}>\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPlan}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}