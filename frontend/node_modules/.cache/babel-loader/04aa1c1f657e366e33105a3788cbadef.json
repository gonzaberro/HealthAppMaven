{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/Plan/PlanForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector(state => state.plan.plan);\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\") {\n      /*fetch(url_servidor + \"plan\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });*/\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    dispatch(setPlan({\n      cd_plan: 0,\n      nombre: \"\",\n      obraSocial: {\n        cd_os: 0,\n        nombre: \"\"\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 10,\n    xs: 8,\n    md: 8,\n    sm: 8,\n    className: classes.headerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Crear/Editar Plan\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 2,\n    xs: 4,\n    md: 4,\n    sm: 4,\n    className: classes.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: nuevoPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Nuevo\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    label: \"Plan\",\n    fullWidth: true,\n    value: nombrePlan,\n    onChange: event => setNombrePlan(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: guardarPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20\n  },\n  buttonForm: {\n    paddingTop: 10\n  },\n  gridForm: {\n    padding: 10\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/Plan/PlanForm.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","TextField","Button","useSelector","useDispatch","setPlan","getListaPlanes","useSnackbar","url_servidor","ObraSocialForm","classes","useStyles","dispatch","enqueueSnackbar","nombrePlan","setNombrePlan","cdPlan","setCdPlan","plan","state","guardarPlan","variant","nombre","cd_plan","nuevoPlan","obraSocial","cd_os","headerForm","buttonForm","gridForm","event","target","value","theme","textAlign","paddingTop","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,qBAAxC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAsBN,WAAW,EAAvC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMqB,IAAI,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAIN,UAAU,KAAK,EAAnB,EAAuB;AACrB;;;;;;;;;;;;;;;;AAgBD,KAjBD,MAiBO;AACLD,MAAAA,eAAe,CAAC,oCAAD,EAAuC;AACpDQ,QAAAA,OAAO,EAAE;AAD2C,OAAvC,CAAf;AAGD;AACF,GAvBD;;AAyBAvB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa,CAACG,IAAI,CAACI,MAAN,CAAb;AACAL,IAAAA,SAAS,CAACC,IAAI,CAACK,OAAN,CAAT;AACD,GAHQ,EAGN,CAACL,IAAD,CAHM,CAAT;;AAKA,QAAMM,SAAS,GAAG,MAAM;AACtBZ,IAAAA,QAAQ,CACNP,OAAO,CAAC;AAAEkB,MAAAA,OAAO,EAAE,CAAX;AAAcD,MAAAA,MAAM,EAAE,EAAtB;AAA0BG,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYJ,QAAAA,MAAM,EAAE;AAApB;AAAtC,KAAD,CADD,CAAR;AAGD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,SAAS,EAAEZ,OAAO,CAACiB,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAuC,IAAA,SAAS,EAAEjB,OAAO,CAACkB,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEJ,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEd,OAAO,CAACmB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAmC,IAAA,EAAE,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,KAAK,EAAEf,UALT;AAME,IAAA,QAAQ,EAAGgB,KAAD,IAAWf,aAAa,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEZ,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAXF,CAXF,CADF;AA+BD;AACD,MAAMT,SAAS,GAAGZ,UAAU,CAAEkC,KAAD,KAAY;AACvCN,EAAAA,UAAU,EAAE;AACVO,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,UAAU,EAAE;AAFF,GAD2B;AAKvCP,EAAAA,UAAU,EAAE;AACVO,IAAAA,UAAU,EAAE;AADF,GAL2B;AAQvCN,EAAAA,QAAQ,EAAE;AACRO,IAAAA,OAAO,EAAE;AADD;AAR6B,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\n\nexport default function ObraSocialForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [nombrePlan, setNombrePlan] = useState(\"\");\n  const [cdPlan, setCdPlan] = useState(0);\n  const plan = useSelector((state) => state.plan.plan);\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\") {\n      /*fetch(url_servidor + \"plan\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ cd_os: cdObraSocial, nombre: nombreObraSocial }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardó el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });*/\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre en blanco\", {\n        variant: \"warning\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNombrePlan(plan.nombre);\n    setCdPlan(plan.cd_plan);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    dispatch(\n      setPlan({ cd_plan: 0, nombre: \"\", obraSocial: { cd_os: 0, nombre: \"\" } })\n    );\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={10} xs={8} md={8} sm={8} className={classes.headerForm}>\n          Crear/Editar Plan\n        </Grid>\n        <Grid item lg={2} xs={4} md={4} sm={4} className={classes.buttonForm}>\n          <Button variant=\"contained\" color=\"default\" onClick={nuevoPlan}>\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            label={\"Plan\"}\n            fullWidth\n            value={nombrePlan}\n            onChange={(event) => setNombrePlan(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPlan}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}