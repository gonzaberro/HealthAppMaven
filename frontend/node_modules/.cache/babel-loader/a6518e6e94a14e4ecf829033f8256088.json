{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { setTipoServicio } from \"actions/TipoServicioActions\";\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [costo, SetCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(state => state.costoServicio.costoServicio);\n  const listaServicios = useSelector(state => state.servicio.listaServicios);\n  const listaPlanes = useSelector(state => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(state => state.tipoServicio.listaTipoServicios);\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: {\n            cd_os: obraSocial,\n            nombre: \"\"\n          }\n        })\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardÃ³ el Plan\", {\n            variant: \"success\"\n          });\n          dispatch(getListaPlanes());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\"\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\"No puede dejar el nombre, ni la obra social, en blanco\", {\n        variant: \"warning\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (costoServicio) {\n      setCosto(costoServicio.costo);\n      setCdPlan(costoServicio.plan.cd_plan);\n      setCdTipoServicio(costoServicio.id.tipoServicio.cd_tipo_servicio);\n      setServicio(costoServicio.servicio.cd_servicio);\n    }\n\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 10,\n    xs: 8,\n    md: 8,\n    sm: 8,\n    className: classes.headerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Establecer Costo del Servicio\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 2,\n    xs: 4,\n    md: 4,\n    sm: 4,\n    className: classes.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: nuevoPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Nuevo\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Plan\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: cdPlan,\n    onChange: event => setPlan(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, listaPlanes && listaPlanes.map(plan => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: plan.cd_plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, plan.obraSocial.nombre, \" - \", plan.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Servicio\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Servicio\",\n    fullWidth: true,\n    value: cdServicio,\n    onChange: event => setCdServicio(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, listaServicios && listaServicios.map(servicio => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: servicio.cd_servicio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, servicio.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Tipo Servicio\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"Instituci\\xF3n\",\n    fullWidth: true,\n    value: cdTipoServicio,\n    onChange: event => setCdTipoServicio(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, listaTipoServicio && listaTipoServicio.map(tipoServicio => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: tipoServicio.cd_tipo_servicio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, tipoServicio.nombre);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"number\",\n    margin: \"normal\",\n    label: \"Costo $\",\n    fullWidth: true,\n    value: costo,\n    onChange: event => setCosto(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: guardarPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20\n  },\n  buttonForm: {\n    paddingTop: 10\n  },\n  gridForm: {\n    padding: 10\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/FormsABM/CostoServicio/CostoServicioForm.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","FormControl","InputLabel","Select","MenuItem","TextField","Button","useSelector","useDispatch","setPlan","getListaPlanes","useSnackbar","url_servidor","setTipoServicio","CostoServicioForm","classes","useStyles","dispatch","enqueueSnackbar","costo","SetCosto","cdPlan","setCdPlan","cdTipoServicio","setCdTipoServicio","cdServicio","setCdServicio","costoServicio","state","listaServicios","servicio","listaPlanes","plan","listaTipoServicio","tipoServicio","listaTipoServicios","guardarPlan","nombrePlan","obraSocial","fetch","method","headers","body","JSON","stringify","cd_plan","nombre","cd_os","then","response","status","variant","setCosto","id","cd_tipo_servicio","setServicio","cd_servicio","undefined","setObraSocial","nuevoPlan","setNombrePlan","headerForm","buttonForm","gridForm","marginTop","formControl","event","target","value","map","theme","textAlign","paddingTop","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlan, getListaPlanes } from \"actions/PlanActions\";\n\nimport { useSnackbar } from \"notistack\";\nimport { url_servidor } from \"Utils/constants\";\nimport { setTipoServicio } from \"actions/TipoServicioActions\";\n\nexport default function CostoServicioForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [costo, SetCosto] = useState(0);\n  const [cdPlan, setCdPlan] = useState(0);\n  const [cdTipoServicio, setCdTipoServicio] = useState(0);\n  const [cdServicio, setCdServicio] = useState(0);\n  const costoServicio = useSelector(\n    (state) => state.costoServicio.costoServicio\n  );\n  const listaServicios = useSelector((state) => state.servicio.listaServicios);\n  const listaPlanes = useSelector((state) => state.plan.listaPlanes);\n  const listaTipoServicio = useSelector(\n    (state) => state.tipoServicio.listaTipoServicios\n  );\n\n  const guardarPlan = () => {\n    if (nombrePlan !== \"\" && obraSocial !== 0) {\n      fetch(url_servidor + \"costoServicio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          cd_plan: cdPlan,\n          nombre: nombrePlan,\n          obraSocial: { cd_os: obraSocial, nombre: \"\" },\n        }),\n      }).then(function (response) {\n        if (response.status === 200) {\n          enqueueSnackbar(\"Se guardÃ³ el Plan\", {\n            variant: \"success\",\n          });\n          dispatch(getListaPlanes());\n        } else {\n          enqueueSnackbar(\"Error al guardar el Plan\", {\n            variant: \"error\",\n          });\n        }\n      });\n    } else {\n      enqueueSnackbar(\n        \"No puede dejar el nombre, ni la obra social, en blanco\",\n        {\n          variant: \"warning\",\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (costoServicio) {\n      setCosto(costoServicio.costo);\n      setCdPlan(costoServicio.plan.cd_plan);\n      setCdTipoServicio(costoServicio.id.tipoServicio.cd_tipo_servicio);\n      setServicio(costoServicio.servicio.cd_servicio);\n    }\n\n    if (plan.obraSocial !== undefined) setObraSocial(plan.obraSocial.cd_os);\n  }, [plan]);\n\n  const nuevoPlan = () => {\n    setNombrePlan(\"\");\n    setCdPlan(0);\n    setObraSocial(0);\n    dispatch(setPlan({}));\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item lg={10} xs={8} md={8} sm={8} className={classes.headerForm}>\n          Establecer Costo del Servicio\n        </Grid>\n        <Grid item lg={2} xs={4} md={4} sm={4} className={classes.buttonForm}>\n          <Button variant=\"contained\" color=\"default\" onClick={nuevoPlan}>\n            Nuevo\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.gridForm}>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Plan</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"InstituciÃ³n\"\n              fullWidth\n              value={cdPlan}\n              onChange={(event) => setPlan(event.target.value)}\n            >\n              {listaPlanes &&\n                listaPlanes.map((plan) => {\n                  return (\n                    <MenuItem value={plan.cd_plan}>\n                      {plan.obraSocial.nombre} - {plan.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"Servicio\"\n              fullWidth\n              value={cdServicio}\n              onChange={(event) => setCdServicio(event.target.value)}\n            >\n              {listaServicios &&\n                listaServicios.map((servicio) => {\n                  return (\n                    <MenuItem value={servicio.cd_servicio}>\n                      {servicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginTop: 15 }}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n            className={classes.formControl}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tipo Servicio\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              label=\"InstituciÃ³n\"\n              fullWidth\n              value={cdTipoServicio}\n              onChange={(event) => setCdTipoServicio(event.target.value)}\n            >\n              {listaTipoServicio &&\n                listaTipoServicio.map((tipoServicio) => {\n                  return (\n                    <MenuItem value={tipoServicio.cd_tipo_servicio}>\n                      {tipoServicio.nombre}\n                    </MenuItem>\n                  );\n                })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <TextField\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            label={\"Costo $\"}\n            fullWidth\n            value={costo}\n            onChange={(event) => setCosto(event.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12} sm={12} lg={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={guardarPlan}>\n            Guardar\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  headerForm: {\n    textAlign: \"center\",\n    paddingTop: 20,\n  },\n  buttonForm: {\n    paddingTop: 10,\n  },\n  gridForm: {\n    padding: 10,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}