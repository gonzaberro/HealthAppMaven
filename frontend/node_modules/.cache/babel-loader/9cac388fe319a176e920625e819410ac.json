{"ast":null,"code":"var _jsxFileName = \"/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/RepetirSemanalmente.jsx\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const [diasSeleccionados, setDiasSeleccionados] = useState([{\n    dia: 0,\n    seleccionado: false\n  }, //Domingo\n  {\n    dia: 1,\n    seleccionado: false\n  }, //Lunes\n  {\n    dia: 2,\n    seleccionado: false\n  }, //Martes\n  {\n    dia: 3,\n    seleccionado: false\n  }, //Miercoles\n  {\n    dia: 4,\n    seleccionado: false\n  }, //jueves\n  {\n    dia: 5,\n    seleccionado: false\n  }, //Viernes\n  {\n    dia: 6,\n    seleccionado: false\n  } //Sabado\n  ]);\n  const [espacioRepeticion, setEspacioRepeticion] = useState(1);\n\n  const cambiarDiaSeleccionado = dia_changed => {\n    let aux_dias = [...diasSeleccionados];\n    aux_dias[dia_changed] = { ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true\n    };\n    setDiasSeleccionados(aux_dias);\n  };\n\n  const changeEspacioRepeticion = value => {\n    if (value >= 1) setEspacioRepeticion(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.opcionRepetir === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"espacio_repeticion\",\n    label: \"Repetir Cada \" + espacioRepeticion + \" semana(s)\",\n    type: \"number\",\n    defaultValue: new Date(),\n    variant: \"outlined\",\n    className: classes.formControl,\n    onChange: event => changeEspacioRepeticion(event.target.value),\n    value: espacioRepeticion,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"cantidad_repeticiones\",\n    label: \"Cantidad de Repeticiones\",\n    type: \"number\",\n    defaultValue: new Date(),\n    variant: \"outlined\",\n    className: classes.formControl,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    color: \"primary\",\n    \"aria-label\": \"outlined primary button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(1),\n    className: parseInt(diasSeleccionados[1].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Lun\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(2),\n    className: parseInt(diasSeleccionados[2].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Mar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(3),\n    className: parseInt(diasSeleccionados[3].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Mi\\xE9\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(4),\n    className: parseInt(diasSeleccionados[4].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Jue\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(5),\n    className: parseInt(diasSeleccionados[5].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Vie\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => cambiarDiaSeleccionado(6),\n    className: parseInt(diasSeleccionados[6].seleccionado) ? classes.buttonSeleccionado : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"S\\xE1b\"))))) : null);\n}\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\"\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\"\n  },\n  textField: {\n    width: \"100%\"\n  },\n  spanRepetir: {\n    paddingTop: 20\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\"\n    }\n  },\n  custom_hover: {\n    color: theme.palette.primary.main\n  },\n  gridContainer: {\n    border: \"1px solid #ccc\",\n    padding: 30,\n    paddingTop: 0\n  }\n}));","map":{"version":3,"sources":["/Users/gonzaloberro/Documents/React Project/HealthAppWar/frontend/src/components/Logged/Agenda/RepetirSemanalmente.jsx"],"names":["React","useState","Grid","TextField","Button","ButtonGroup","makeStyles","RepetirSemanalmente","props","classes","useStyles","diasSeleccionados","setDiasSeleccionados","dia","seleccionado","espacioRepeticion","setEspacioRepeticion","cambiarDiaSeleccionado","dia_changed","aux_dias","changeEspacioRepeticion","value","opcionRepetir","Date","formControl","event","target","shrink","textAlign","parseInt","buttonSeleccionado","theme","margin","width","container","marginRight","paddingRight","textField","spanRepetir","paddingTop","backgroundColor","palette","primary","main","color","custom_hover","gridContainer","border","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function RepetirSemanalmente(props) {\n  const classes = useStyles();\n  const [diasSeleccionados, setDiasSeleccionados] = useState([\n    { dia: 0, seleccionado: false }, //Domingo\n    { dia: 1, seleccionado: false }, //Lunes\n    { dia: 2, seleccionado: false }, //Martes\n    { dia: 3, seleccionado: false }, //Miercoles\n    { dia: 4, seleccionado: false }, //jueves\n    { dia: 5, seleccionado: false }, //Viernes\n    { dia: 6, seleccionado: false }, //Sabado\n  ]);\n  const [espacioRepeticion, setEspacioRepeticion] = useState(1);\n\n  const cambiarDiaSeleccionado = (dia_changed) => {\n    let aux_dias = [...diasSeleccionados];\n\n    aux_dias[dia_changed] = {\n      ...aux_dias[dia_changed],\n      seleccionado: aux_dias[dia_changed].seleccionado ? false : true,\n    };\n\n    setDiasSeleccionados(aux_dias);\n  };\n  const changeEspacioRepeticion = (value) => {\n    if (value >= 1) setEspacioRepeticion(value);\n  };\n\n  return (\n    <>\n      {props.opcionRepetir === 2 ? (\n        <>\n          <Grid container>\n            <Grid xs={6}>\n              <TextField\n                id=\"espacio_repeticion\"\n                label={\"Repetir Cada \" + espacioRepeticion + \" semana(s)\"}\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                onChange={(event) =>\n                  changeEspacioRepeticion(event.target.value)\n                }\n                value={espacioRepeticion}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"cantidad_repeticiones\"\n                label=\"Cantidad de Repeticiones\"\n                type=\"number\"\n                defaultValue={new Date()}\n                variant=\"outlined\"\n                className={classes.formControl}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid xs={12} style={{ textAlign: \"center\" }}>\n              <ButtonGroup\n                color=\"primary\"\n                aria-label=\"outlined primary button group\"\n              >\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(1)}\n                  className={\n                    parseInt(diasSeleccionados[1].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Lun\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(2)}\n                  className={\n                    parseInt(diasSeleccionados[2].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mar\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(3)}\n                  className={\n                    parseInt(diasSeleccionados[3].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Mié\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(4)}\n                  className={\n                    parseInt(diasSeleccionados[4].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Jue\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(5)}\n                  className={\n                    parseInt(diasSeleccionados[5].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Vie\n                </Button>\n                <Button\n                  onClick={() => cambiarDiaSeleccionado(6)}\n                  className={\n                    parseInt(diasSeleccionados[6].seleccionado)\n                      ? classes.buttonSeleccionado\n                      : null\n                  }\n                >\n                  Sáb\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 10,\n    width: \"90%\",\n  },\n  container: {\n    margin: 10,\n    marginRight: 0,\n    paddingRight: 0,\n    width: \"100%\",\n  },\n  textField: {\n    width: \"100%\",\n  },\n  spanRepetir: {\n    paddingTop: 20,\n  },\n  buttonSeleccionado: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  },\n  custom_hover: {\n    color: theme.palette.primary.main,\n  },\n  gridContainer: { border: \"1px solid #ccc\", padding: 30, paddingTop: 0 },\n}));\n"]},"metadata":{},"sourceType":"module"}